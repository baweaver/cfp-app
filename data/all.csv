Name - S,Speaker Name,Email - S,Speaker Bio,LinkedIn,Twitter,Gender,Ethnicity,Ethnicity - Other,Bio.1 - S,Speaker Background,Coding Status,Coding Status - Other,Coding Background,Coding Background - Other,Talk Topic,Talk Topic - Other,Title - S,Talk Elements,Talk Elements - Other,Details - S,Problem,Takeaway,Intention,Research,Pitch - S,Other Details,Bio.2 - S,Talk Length,Track - S,Talk Format,What attendees will make,Background Info,Tools/Resources,Availability,Frequency,Tech,Equipment Needed,Video Link
Anabella Spinelli,Anabella Spinelli,anabellaspinelli@gmail.com,"I've been working in the software industry for over 9 years, slowly making my way from QA to software development. Throughout this time, I've been a self-taught coding student, learning from free online courses, articles and projects I came up with to apply my new skills. About a  year ago I started working as a full-time front-end developer.",https://www.linkedin.com/in/anabellaspinelli/,@deutschevita,"Female, lesbian",Hispanic or Latino,,Barcelona,"I'm originally from Argentina, but I've been living in Barcelona with my partner for the past year or so. I started working as a QA Engineer almost by mistake: I had dropped out of classical music school and I desperately needed a job. While working in the software industry I discovered that I really liked this programming thing and started learning a lot about it using free resources online. Last year, after achieving my lifetime dream of getting a job in Europe, I also got the opportunity to finally step into a developer role and I find that I'm loving it. Not only do I get to code all day, and feel my experiences and best practices become applicable, I find that I also love the social aspect of it: interacting with product owners, designers, business people, etc. And when I thought I had it all, 2018 ended with me giving my first talk ever in a conference. It was a thrilling experience and I found that it was something I want to try to explore more this year.",Employed as a full-time developer for less than a year,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Career,,T036: Just be yourself: job interviews are nothing but first dates,"None,Other","Demoing doesn't apply much to this talk, but I intend to make it a fun and engaging experience, while also leaving people with interesting stuff to think about.","In this talk I will address an issue that I think newcomers to software engineering really care (and stress!) about: interviewing for a job. In my life I've done a lot of interviewing with very little preparation and, after learning a lot through trial and error, I believe I can share a lot of insights about ""what's really going on"" behind the scenes while you're interviewing, and also share ""mental tools"" and tips that can help people feel better while they're going through interview processes.

I plan to do this by comparing the interview process with being on a first date with someone: both of you want it to smoothly and have a real interest in being there, the fact that the event is happening already is a sign of success, and in the end, whatever happens, you'll both learn something. If you've never interviewed for a job in tech, maybe you have been through something like this and can probably relate to it. In the best case scenario, you'll also get some food for thought for your next first date!

Some of the points that apply to both meetings are:
- Getting invited is already being 50% in. I know it doesn't feel like it, but it really is true.
- You're being evaluated, yes, but you're also evaluating them and seeing if they're a right fit for you.
- Tip: Decide what's the story you want to tell about yourself, make it engaging, work on its narrative.
- Please don't lie! It'll just make you nervous. But be smart about how you present the truth, think: ""I don't know anything about React"" vs. ""I've heard about it and its popularity and I'm curious to give it a try.""
- People love being asked about themselves, prepare some questions beforehand. Asking will give you a deeper understanding about the position while showing them the things you care most about.
- If you feel you're not good enough, put your trust in them. They'll know it if you're the one, they have a lot more context about the job, the team and the company and can identify surely the right fit.
- Rejection is gonna happen: it's most likely not about you. A lot of things can affect this outcome, just reflect on what you learned and use it for next time.

For technical/coding interviews:
- It's totally OK to say ""I don't know that"". Let them explain and show them how fast you can learn and apply new things.
- Speak your thoughts out loud as much as you can. Coding interviews aren't about the code, they're about your thought process, try to explain what you're trying to accomplish and why you're taking a certain path. Turn it into a conversation.

Differences between dating and interviewing (that are to our advantage!):
- It's the recruiter's job to get a hire, use this and let them help you. They want this as much as you.
- There's no being ""too interested"" in them. Express your interest by going the extra mile.
- Usually, your counterpart will do most of the talking and will be driving the meeting, you just need to ride along.

After going through all these examples, I expect the attendees to have a deeper understanding about the inner mechanics of this kind of meeting and walk out with a set of tips, insights and tools to use on their next dat... I mean interview.","The main problem addressed by my talk is dealing with the stress about interviewing for a job in tech, specially if it's the first time you're doing it. I think this will be relevant for Codeland's attendees because the majority of them are starting their careers in software engineering. Even before they feel comfortable with their technical skills, they're often faced with the challenge of standing out in a diverse pool of real (and imaginary) candidates.","My main goal is that they leave with some food for thought about interviewing so that they can bring new meaning to their experiences, past and future. This includes tips and strategies to feel better during interviews, ""mental tools"" to keep the stress at bay and a general sense of increased self-confidence about the whole job selection process.","First of all, I want them to feel empowered. Interviewing for a job can feel very intimidating, but in an industry like ours, the person with the higher ground is usually the candidate. I won't be focusing a lot on this, but I want them to leave with a sense of self-confidence and a toolkit they can use to feel prepared to their next recruiting process.","I'll research talks and articles, not only about interviewing but about dating, socialising, charisma and making friends, looking for tips and general notions that can be applied to both dates and job interviews. I'll also try to get some statistics or insights about what's ""the other side"" like: what are the advices for companies and recruiters. Finally, I'll run my talk's contents by the up-and-coming developers that I know from coaching to see what they find useful and what they struggle with the most.","I don't have a CS degree and I came into this industry by sheer chance. I haven't had a safety net since the first time I got a job and so I had to become better at interviewing without almost any preparation. This meant getting the jobs that I wanted, and also being smart about which job offers to take. I did this through a lot of trial and error and most importantly by reflecting about what interviewing really is about and how to make the most out of it. ","I feel very excited about giving a non-technical talk for new and growing developers. I feel they're often pushed into a lot of the technical stuff and left on their own for the social aspects of their careers. I want this talk to be inclusive, mind-easing and ultimately a fun and interesting experience for us all. ","I might be able to ask my company to support part or all of my travel expenses, but it's something I would need to consult with them if my proposal is accepted. My travel needs would be the flight from Barcelona to NYC and accommodation for myself in the city.",15 minutes,A,Talk,,,,,,,,
Will Klein,Will Klein,will.klein@gmail.com,"Will is a full-stack engineer at Workday and co-organizes the React Denver meetup. He loves sharing what he can with the community, whether its organizing events, giving talks, or mentoring others. He is proud to be a father and husband, and lives on a healthy diet of coffee and ice cream in Longmont, Colorado, USA.",https://www.linkedin.com/in/willklein/,@WillsLab,male,2 or more of the above,,"Denver, Colorado","I grew up having a job since I was 12. I worked several blue collar jobs, doing landscaping, stocking shelves at Target, and working in a machine shop. I did this while working my way through college, but I ultimately dropped out. I wasn't learning anything new, having worked part-time building software for a couple years. I spent the first 4 years of my career without any mentorship (solo dev on at small companies), then sought out a real team where I would grow in 2011. This specific team was a major learning, as I was completely unqualified for the job but turned the interview into a learning opportunity. Asking questions and having a thoughtful conversation created a unique situation where I was hired despite a complete lack of relevant skills! It wasn't until 2013 that I would work with someone with less experience than me! Since then, the roles have flipped and I've been one of the more experienced devs on a team. My learning goals turned into mentorship goals: it's my job to help everyone else learn and master new skills. When I'm not mentoring others directly, I'm advocating or building tools that ease the burden of on-boarding, primarily through linting and custom linting rules. My usual speaking topics are around this and other tooling techniques based in abstract syntax trees. At one point I became a director of engineering and hired a team of mostly newbie developers. I learned a lot from interviewing many talented candidates, in terms of interviewing skills (be kind and have fun!), and ultimately learned in new technical things in these interviews.",Employed as a full-time developer for over 3 years,,Other,"I primarily learn by doing, and it has to be self-directed. I don't absorb it otherwise.",Career,,"T037: Forget the Job, Interview to Learn",Other,Stories and photos of newbie devs who asked great questions in interviews,"I'll start with a story: when I looked for a new job in 2011. I had an interview that bullied me with questions, and I walked away completely crushed. I had another phone interview coming up. That morning, I reviewed the job description: it asked for 5 years of experience and expert level JavaScript skills. I had neither, and tried to cancel the interview. After some encouragement from the recruiter, I gave did it anyway. It seemed like it might repeat the previous interview: a phone screen with a laundry list of technical trivia, and I didn't know the answer to any of it. Instead of shutting down, I got curious, and started asking questions. We spent an hour talking through concepts I didn't understand initially, but given I wasn't trying to get hired, I explored without reservation, interviewing the dev on the other end of the line. They didn't mind, in fact, they were refreshed to have a candid conversation, and took a chance on me.

I'll continue with setting up a game plan for ""interviewing to learn."" I'll tear down the assumption that you need too prove how much you know, and simply be honest about what you understand, and where things get fuzzy. We'll frame the interview as a free opportunity to ask questions of a team of more experienced developers. How priceless is that?! We'll start with how to respond with: ""I don't know, but could we talk about that? What is a (example) closure in JavaScript?"" We'll build on that with actions like taking notes and attempting to repeat back or whiteboard what may be a new concept, turning the interview into a study session. Other actions include asking for more time to interview, or requesting additional interviewing exercises that we may feel more comfortable with, and how a follow up interview is a chance to reinforce and potentially show you've learned things you picked up the last time around. We'll also address how we might take this too far, appearing more naive than we really are, and how to represent our skills appropriately when posing questions.

To wrap up, I'll share another story, one from a newbie developer with an incredible tactic of writing down questions from interviews, doing some research of their own, and then asking future interviewers these questions to hear what they think about a topic (example: what do you think of TDD?). Note: I will ask for permission from this person to have quotes and use their photo in the slides. I'll then finish with last words of encouragement: ""Forget thinking: will I get this job? Instead, think: what will I learn today?"" Shifting this perspective is incredible.","Interviews are scary, even to an experienced developer! They're also something everyone must do, several times in their career. How can we reset our mental game and turn every interview into an incredible opportunity learn new things?","They will turn a stressful situation into an exciting, potentially fun, learning exercise!",Excited to approach their next interview with a totally different mindset.,"I'll conduct interviews with both less and more experienced developers.

Questions for less experienced devs include: what scares you about interviews? What was your worst interview experience? What was your best interview experience? What made you more successful in the positive interviews? What did you learn?

Questions for more experienced devs and hiring managers include the same questions, with some additional questions: Does it ever bother you when an inexperienced candidate doesn't know something? Are you willing to answer their technical questions and teach them something? Have you ever hired someone because they asked good technical questions? Were there things they didn't know? Did that matter to you?","I mentioned this in my outline, but my past experiences interviewing and asking questions were the inspiration for this talk. This is both from the perspective of a job candidate AND the hiring team (as a developer and manager). I specialized for a couple years doing pair programming interviews, partnered with another developer. We retro'd after every interview, not about the candidate, but about OURSELVES and how well we conducted the interview. Did we make the candidate feel comfortable? Did we give them adequate time to think? Did they get stuck? Did we find a way to help them move forward? We were always on THEIR side, and let the technical assessment figure itself out afterwards. Then I spent a year as an engineering director, where my primary job was hiring three teams of mostly inexperienced developers. I got to build on the previous experiences, but had a completely different lens. I also interviewed over the years, again and again, proving out that asking questions and being honest pays off, and learning in interviews at every opportunity.","I love the CodeNewbie podcast and find it extremely valuable as a more experienced developer. I wouldn't attend this conference as someone with experience, but this one topic came to mind as something that might be valuable to this audience. I would do my best to prepare an interesting and actionable talk. I'm happy to receive any support provided, and I'm also happy to help other speakers in any way I can. I've given major conference talks a few times now, and I hosted a Global Diversity CFP Day Workshop the past two years. I love teaching and mentoring others and would do my best to share what I can before, during, and after my this talk.",I would likely need help with flight and hotel. I can request this from my company but I cannot say if it would be approved.,15 minutes,A,Talk,,,,,,,,
Yuen Yim Alice Ching,Yuen Yim Alice Ching,chingyalice@gmail.com,"Alice is the lead engineer on Keita Takahashi’s latest game Wattam. Previously, she spent over 11 years working on game engines at EA, Sanzaru Games, and Google. She has a deep passion for making fun and immersive experiences. One of her biggest goals is to empower artists and designers with better technology.",https://www.linkedin.com/in/aliceching/,@oilaisee,female,Asian / Pacific Islander,,San Francisco bay area,"I'm originally from Hong Kong, and came to the USA to study computer science in undergrad. I studied in Pittsburgh, PA (where I met my husband who's an American) and Ithaca, NY, and ended up moving to the bay area in order to pursue one of my dreams, which is to work in the entertainment industry.

When I was growing up, no one around me, including family and friends, is in the tech space. My father got a computer and that was when I started taking an interesting. I took the traditional path in terms of education, but I didn't completely understand what computer science was before I got my degree -- it is not popular at all amongst women in Hong Kong, but since I was good at math and science, and liked making webpages, it seemed like a decent choice. I played a lot of video games -- again, I didn't know that I could make it my career, until, luckily, a video game company came recruiting at my grad school.

It wasn't until I was working professionally before fully understanding the sexism at work. I've tried multiple times, to no avail, to get promoted. I've talked extensively with my peers, my managers and HR about the state of the industry in terms of diversity. I felt like I've been very lucky in being able to be a part of the industry, so much so that I want to keep pushing it forward and making it more inclusive for everyone.

I am now volunteering for a few different causes, including spending my time as a role model for K-12 girls, and actively hiring diverse people into my organizations and teams. However, I really love my day job as a video games programmer, and would try my hardest to stay in the industry despite encountering a lot of (mostly) unconscious bias along the way. It is my hope that as long as I keep hiring the right people, incentivizing them to stay on, and actively recruiting allies, we will eventually get to a better place.","Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,CS degree,,Other,Coding tips to help people get started as a professional coder,T039: How to work with closed-source API,Other,Demo of debugging and problem-shooting processes,"First, I will explain what closed-source API is, and list a lot of common examples that most people might run into, along with some open-source software and standards for contrast.

Then I will outline one of the problems I've had when working with such an API (e.g. in Unity). I will go through this utilizing a few strategies along the way:

Check all sources of information
- Documentation
- Google search for information
- Forums, bug trackers
- Email the author

Trial-and-error
- Control the input variables
- Try a variety of inputs including base cases
- Use test environments

I will go through another different example of how to use these strategies in a different way.

At the end of the talk, I'll give some suggestions of how can we help improve closed-source API, even if we cannot issue pull requests or fork them.","While working in code, it's often easiest to figure things out when the source code is available and accessible. However, that is often not the case, especially when working with proprietary software or software under an NDA.

This is especially difficult for junior developers as many software tutorials focus on open-source software. I'd like to outline techniques and strategies to help developers get over this difficulty, and even develop their own techniques to troubleshoot any difficult-to-debug API problems.","The audience with come away with a set of strategies they could use to help debugg their code when interfacing with closed-source APIs, as well as learning to identify when a bug is within their own code or within the API, even without source code access.","I hope they can feel empowered and more confident in tackling problems, even if the problems might be difficult and they might fail a few times.",This talk stems from my real-life experience and I will use code snippets from my past and current projects. The references in the talk will be from API documentation from various closed-source and open source software.,"I've been managing and mentoring junior and mid-level engineers, and I've found working with new code to be a common hurdle for a lot of people. In fact, I always feel imposter syndrome when I am lost, trying to debug a difficult problem.

I'd like to talk about how I deal with this, and help people understand that this is not a problem that only junior or new coders have. It's just a set of skill that you can develop over time. Hopefully they will find it inspiring and it will help them be more confident in tackling new or different problems.",,"I do not require any financial help, but I would appreciate if you reallocate this money for a scholarship for another developer in need.",15 minutes,A,Talk,,,,,,,,
Yitzi Ginzberg,Yitzi Ginzberg,hello@yitzi.dev,"Sentence 1: Coder with zero impulse control with regard to building out every crazy idea that flits across my brain.

Sentence 2: CS degree, Certified Systems Analyst with 5 years industry experience.

Sentence 3: I helped a hyrax mom deliver triplets this week!",yitzi.dev/li,@realYitzi - But I just opened it.,male,Prefer not to disclose,,Israel,"Grew up in private Jewish schools where the primary language spoken was yiddish. Going to college was strongly discouraged. 

As a kid I loved computers but as I grew up I forgot about them and pretty much didn't touch a computer between 1995 and 2012.

Married with kids and living in a community where the only respectable lifestyle for a man was to spend all day learning Talmud I suddenly had an epiphany. 

I wanted to be me. I wanted to spend most of my time doing things I wanted to do and not doing things the way others told me they should be done.

I also wanted to be financially self sufficient and have the freedom that a certain amount of money can provide.

I spent 6 months going through text books and watching pretty much every single video on Khan Academy. I then began studying for a CS degree in the Jerusalem College of Technology.

I supported myself as a student first by cleaning houses and later by managing properties. One year before graduation I was recruited by a Software house as an Android developer and I've been working in the field since.

Today I love my life and do not regret any of the decisions I've made. I'm only grateful that I got on this path when I did.","Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Art/Creative Coding,,T040: API Magic,"Live coding,Demo of working code",,"Beginning: I'm going to show you a trick. I need 10 volunteers. Pick a card any card. I will now demonstrate an Android app I've made that will predict the card that each one of you has chosen simultaneously.

Middle: Trick works. Tremendous standing ovation. Even though magicians are never to reveal their tricks, I'm not a magician, I'm a coder. Here is how I did it..

End: Break past tutorials and ""Best practices"" there is not only one right way. Work on what interests you. Bring your identity to the process. Be fearless.","Lack of creativity. Everyone wants to make an Uber for this or a Google for that. Facebook for christians...

Free yourself to make the things that only you can make.",Begin working on a project that excites them. Not one that seems acceptable.,"Empowered, with permission to create and to fail or succeed being authentic to themselves in the process.",I need to think more about this.,I think the fit is already obvious to you my dear reader from my previous answers.,"I have this weird thing that I can exhale through my eyes. Crazy right?
Nobody believes me until I prove it by blowing bubbles under water.","At my current company I am not in a DevRel position and none of my costs would be covered so I would request coverage of flight and hotel.

I am actively seeking a DevRel position and am in the midst of some very interesting discussions with a few companies. If my status changes and I am in a DevRel position by the time the conference rolls around I will of course update you.

Thanks for taking the time to read this!",15 minutes,A,Talk,,,,,,,,
Koshin Mariano,Koshin Mariano,koshin.mariano@gmail.com,"Software developer with over a decade of experience building large scale software systems for E-Commerce, IoT, Finance, Marketing and Health Care. Koshin is passionate about building useful tech that empowers people and helping people from different backgrounds get into tech and have meaningful careers through mentoring",https://www.linkedin.com/in/koshinmariano/,twitter.com/koshin_m,male,Black or African American,,"Phoenix, Arizona",I've been a developer for over a decade but I took the road less traveled to get there. I didn't start off coding while I was twelve and only started after I decided to study computer engineering on a whim. I have been an underrepresented minority in tech and I have made it my mission to get more people into tech from different backgrounds but also provide mentoring for people currently in tech who may need it. I didn't understand the importance of community and mentorship early on and I feel that I would saved myself a lot of time and energy had I had communities like Code Newbies when I got started. ,"Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,"CS degree,Online learning platforms,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Career,,"T041: Learning how to Learn , the most important skill you will need as a Software Developer","Other,Code samples,Demo of working code",slides with maybe some code samples,"Things change all the time in tech and as a Developer you are expected to constantly refresh your skills and learn new things. So how do you do learn and grow and become a better developer? How do you find time to keep up and learn while keeping a full time job as a developer. In this talk we will examine how you can make time to learn and level up.  I will give some methods that I use such as:

Creating a lesson plan by identifying what you should know
Making time for regular practice. 
Some practical examples and tools you can use to level up",The constant pressure to always improve and learn new technical skills,People who hear this talk will have practical steps they can use to implement learning as part of their coder journey. ,Empowered to view continuous learning as a natural part of their developer journey and have practical steps to do so. ,"primary sources, books and academic sources with information on learning and mindsets. ","I have had to learn and relearn after spending years in tech. I had to retool and re-skill several times, going from backend developer to front-end developer. From Junior to Senior engineer and from changing jobs and moving between industries. ",I believe that learning how to learn is super important and is an essential skill to master as a Developer and I really want to encourage as many people as possible that continuous learning is possible. ,Flight and hotel would be awesome...but if thats not possible I am flexible. ,15 minutes,A,Talk,,,,,,,,
Lisa Leung,Lisa Leung,lileung0@gmail.com,"I am one year in my career as a SRE at Influxdata, an open-sourced time-series database startup.  Prior to this, I attended a coding school, called Holberton School, for 9 months.",linkedin.com/in/lisale0,lisale0,female,Asian / Pacific Islander,,San Francisco,"I graduated from UC Davis with a political science and sociology background.  After graduating, I worked for a nonprofit organization that lobbies for promoting policies that alleviate poverty in California.  After finding my passion in tech, I worked as a technical contractor, and then as a fulltime webdev.  Afterwards, I decided to attend Holberton School to focus in developing my skills in DevOps/SRE.",Employed as a full-time developer for 1-3 years,,"Online learning platforms,In-person bootcamp,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,My Coding Journey,,T042: TBD,None,,"What is SRE, Why SRE, how to get into SRE.",People who start out in software engineer may not necessarily know about the SRE career path.  ,Go out there and explore what SRE is and how it can be a fun career path to look into.,"I did it, and they can do it too.","Google SRE book, A couple resources I found useful starting out.","I still consider myself a code newbie and I'm very new to my role as a SRE.  So how I got there is still very fresh in my mind, and that's something I would like to share with people.",,"None, expenses covered by the company I work at.",5 minutes (Lightning Talk),A,Talk,,,,,,,,
Jennifer Maher,Jennifer Maher,maeeast@me.com,"Quirky geek, with a touch of fanciful imagination. Midlife career changer. Aspiring to make the world a better place one smile at a time. She/Her.",https://www.linkedin.com/in/jennifermmaher,Mae_East,female,White,,Maine,"I got married young, raised 3 kids, became a pre-school teacher. After a stressful and emotional divorce found that I was not able to support myself on my teaching salary. I taught myself to code as a way to improve my situation. It took me 4 years of trial and error but I finally got enough of a portfolio together to start getting interviews. I was hired as a Junior dev at 39. I am passionate about helping people feel like they don't have to fit a certain mold to become a professional developer.",Employed as a full-time developer for 1-3 years,,"Online learning platforms,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Other,Self Care/Self Image,T043: You don't have to Be anything but yourself.,Other,I would like to have a slide deck with some relevant images relating to the areas of my talk.,"I would like to communicate the idea that you don't have to hide who you are to be successful. I would open talking about my Grandmother (a woman who got a doctorate in Chemistry in 1949) telling me how I was better off than her because I could ""Be anything I wanted to be and do anything I wanted to do""

I would like to talk about how I took the be anything and turned it in my head to ""You need to be MORE than you"". And then I will talk about the effects of not feeling comfortable with yourself can have on your work. I would wrap up with some tips (which is something I am still narrowing down in my research) to help you embrace yourself in your workplace. (For an example, I make sure I have things that make me smile on my desk.)","I think that I want people to stop thinking they are not good enough to be a developer. There's a cultural perception issue that a developer is ""this"" and a developer is ""that"" and if you are not those things you need to change yourself.","I want them to hear me say ""LOVE YOURSELF AND WHO YOU ARE"" Learning to code and breaking into a development job are frustrating and difficult processes. We can learn and change our understanding of the topic but we should always feel ok to be our true selves.",Empowered to embrace their true self and use it as a tool to help them stand out in the workplace.,I am currently doing some research reading about things that help boost self-image and self-esteem. I would like to include these suggestions in the action section of my talk.,I think I am a good fit for this talk because I have fought this battle... and still fight it on a daily basis. I have a true passion for reaching out and helping others when I see them in a bad place. I wish I had more people do this for me when I was struggling.,,I will be funding the trip on my own. It would be helpful to have some of my travel costs offset but please put me at the end of the list as I am sure there are people who could use the assistance more than I.,15 minutes,A,Talk,,,,,,,,
Jennifer Ponder,Jennifer Ponder,jponder2000@yahoo.com,I am a freelance React developer with two years of experience working with non-profits and startup companies. Currently I am a Leadership Fellow with Women Who Code where I lead the Front End Development community track where I  create digital experiences.,https://www.linkedin.com/in/jennifer-ponder-651111164/,@JPonder77,Female,Black or African American,,"Atlanta, Georgia","My background experience is in Mass Communication and Public Relations. I was an Associate Program Director at an internet radio network which is how I started my interest in learning how to code. I worked with UI design and creating digital content in that role. In my past roles I have worked with technical non-profits and startups creating social media content and creative UI design. Likewise, I also have extensive experience in customer account management and technical product support. ",Other,Currently about two years into coding as a Freelance React Software Developer specializing in React and React Native,In-person bootcamp,,My Coding Journey,,T044: My Life After Bootcamp...Starting Over In Tech ,"Code samples,Demo of working code",,"Pitch:
There have been several people women changing their careers to get into tech over the past few years. Whether their paths may lead to Software Engineer, UX Designer, Product Manager or Lead Architect on a software project, they all have one goal in mind is to be successful in a new career. Also, there have been several women from non-traditional backgrounds, such as business and fine arts related professions who have entered into tech. Sometimes it has not always been feasible for some to enter into a full Computer Science program whether it be due to the price of the program or age of the person. So many are taking another route to get into tech through entering coding bootcamps. Coding bootcamps can offer a way to keep a full-time job and take care of your family, a lower cost for education and an accelerated timeframe to enter into another career. 

Beginning
Defining Alternative Routes For Getting Into Tech 
1. An overview of deciding on a bootcamp and what challenges you may face
A. Discovering some statistical data when choosing a bootcamp program
B. An overview of data for the number of women who are entering bootcamps as well as women who are completing bootcamps.

2. An explanation of how to craft a strategic search for  apprenticeship and internship opportunities
A. Where to look other than job search engines to find internships
B. How to use your current network to explore opportunities
C. Putting your work out to the public and sharing your knowledge that may lead to an opportunity

Middle
 Decode Finding Your Voice
1. detailed overview using code to explore what you like to do and how to be vocal about it with your peers
A. Discussion on staying true to your passion 
B. Finding a coding language that you enjoy 
C. Innovative ways to discover how to discuss your code and create projects

2. How To find your tribe within an organization that speaks to what you want to do and where you can learn every step of the way
A. How women can become apart of technical organizations that are safe spaces and devoted to inclusion
B. A discussion on where women can go to interact with other women just like them who are at the same level in their tech journey or more

3. Reasons to stand out and take on coding projects where you can feel challenged yet learn something you can teach others
A. Discussing the idea that being a woman doesn't mean you can't handle challenges 
B. Discovering how women can stand out after a bootcamp and start challenging projects such as completing open source projects

End
Overcoming your fears as a woman in the tech space
1. A clarification of ways to foster networking to build relationships 
A. How to network at live events such as Meetups
B. A way to navigate the room and introduce yourself at Workshops
C. How to network at Bootcamp events and own your expertise at demo day when you have to put yourself out there and speak with confidence about your coding projects

2. Steps to build confidence when speaking about code and how it works. A way to not belittle yourself and your growth
A. Building your presence when speaking about code in small to large groups
B. Practice, Practice, Practice gaining expertise in your technology specialized field
C. Resources to gain confidence in yourself for your personal growth 

3. Coding samples of a project I worked on in React where I learned something new and I faced a great challenge. However, I did not give up on this project.
A. Showing samples from a React Application
B. Discussing the challenges I had and what I learned when creating the application
C. Sharing how I overcame any obstacles working on projects and how I found support and a mentor","The problem my talk addresses is the doubt that women feel about moving into a new career in tech after a bootcamp instead of a traditional Computer Science degree. Women may feel not good enough or that they are not ready, when in fact they have gained the knowledge, however, they just need a chance to have their first role in tech.","Learning Outcomes/Takeaway


1. An approach to evaluating your pace and measuring your success step by step
2. A method for building relationships within the tech community and navigating how to find a community that speaks to your talent
3. Life after bootcamp: what acceptance looks like and what rejection looks like…including tech tests, whiteboard interviews, and tech tests
4.Steps to creating a path that can keep you with a new project that can turn into a new internship, apprenticeship or job
5. Starting over in tech as a woman and finding your tribe. New ways to strategize on your plan and road to success in tech.","I want the audience to feel like they have learned something new and they have a new perspective from a woman that has gone through a coding bootcamp. Also, I want the audience to feel like they enjoyed my talk and that it was full of inspiration and engaging content.","Code Review resources such as Medium, Diversity and Inclusion articles as well as  Hacker Noon reports. Likewise, primary source interviews from women who have completed bootcamps just like myself with different perspectives on their career change journey and their success.","I feel that I am the right person to give this talk because I am extremely passionate about advocating for women in tech and exploring careers in technology. I love to share my journey about learning to code and my experience as far as technical interviews, building your online presence as a software developer, and creating innovative experiences for users. My experience in my coding bootcamp was life- changing and life challenging and this is a story that I believe other women will appreciate and learn from at the same time. In the same token, I am an advocate for diversity and inclusion. I like to be involved in initiatives that create roles and spaces for women to be included in the technology space without bias and gender inequality. ",I will be very excited to share my talk and my journey if given the opportunity to speak at Codelandconf.  My talk will feature some technical pieces of code in React to show the steps I have taken to learn this front end framework and my journey to growing and specializing with this coding language.,"For the travel requirements portion, I will need my flight and hotel covered for me to come to New York for this conference.",15 minutes,A,Talk,,,,,,,,
Rafael Conde,Rafael Conde,rafa@netlify.com,"I'm Rafa, Head of Design at Netlify, and I've been a designer/front-ender hybrid for all of my career — currently living in Amsterdam!",,@rafahari,Male,White,,"Amsterdam, Netherlands","I'm a Portuguese CS college dropout, that decided to pursue my passion for design — I always had to code my own UI design work early in my career, and being a programmer made me a better designer.
Currently working at Netlify, designing our app, marketing site, and building a team ✨","Casually code, but coding is not the core part of my profession",,"Online learning platforms,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Other",Partial CS degree 🙈,Art/Creative Coding,,T045: How being a programmer made me a better designer,"Other,Demo of working code",Lots of animations haha,"1. Dropped out of a CS degree to pursue design.
2. Started working as a designer and front end developer, which made me a very conservative designer since I could only create something I could code.
3. Decided to learn Swift and built an Apple Watch game in a... creative way.
4. Joined Netlify to design a tool for web developers.
5. If you don't understand how things work (code) how are you suppose to be able to design it?","You should understand the basics of how things work, in order to design good products.","For both designers and developers, be curious, learn the fundamentals of good user experience, ask questions, and understand how things work.
We are not designing mockups, or writing JavaScript, we are both creating products, experiences, messages.","Curious, and empowered.",Some studies on user behavior.,"I'm a Portuguese Computer Science dropout, designer and front end developer working remotely for a San Francisco startup designing tools for web developers.",,My company might be able to cover the flight and hotel — not sure though.,15 minutes,A,Talk,,,,,,,,
Julio Cesar Fortunato Filho,Julio Cesar Fortunato Filho,juliofortunato58@gmail.com,"Junior Front-End Developer @ Codeminer42, UI/UX enthusiast, junk food lover.",https://www.linkedin.com/in/juliofortunato/,@fortunatooo,Male,Hispanic or Latino,,Brazil,"It was middle-2017 and I was graduating from my System Development college course. The problem is that, on the past 2 years I had only worked
with hardware and client support, never with coding. I was tired of removing dust from old computers and re-installing MS Outlook 🙄, and decided to give coding a try. As I thought I hadn't the minimum experience to get a Junior Developer spot, I decided to enter in a second graduation in the same area, so I could apply for an internship. This lead me to Codeminer 42, and now I fell much more happier coding than answering support tickets 😃.",Employed as a full-time developer for 1-3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,My Coding Journey,,T046: Taming you styleshhet: Quick tips that made me write fancier CSS ✨,Code samples,,"My idea with this talk is to show begginers how to ""not be afraid"" of their own CSS by showing some quick tips that
I learned, which are:
- Use a css preprocessor (for nesting, mixins, variable declaraion, etc.)
- Always write your HTML before CSS
- Having a separate CSS file for each page
- Using BEM methodoly for organizing the styles
- Using idiomatic-css approach to have a standardized declaration order
- I also intend to talk about Atomic Design and Inverted Triangle for organizing CSS","When I started studying front-end, specially the basics of HTML and CSS, I always got confused with the stylesheets.
I didn't know how to name things correctly and there was no pattern on my stylesheet. I believe that I'm not the only
one who suffers from this 😅","The idea is that the attendees could leave the talk with the feeling that CSS is easy, and more than that, they can
write elegant and facy stylesheets even being begginers. 💪","At the end of the talk, I'd like the attendeed to fell confident and proud about the code they write, even now that
it will be much more organized ✨","Part of the talk content will be based on some articles that helped me in the beggining of my carreer (https://css-tricks.com/methods-organize-css/, https://www.developerdrive.com/2017/11/6-ways-to-organize-your-css/, https://medium.com/wolox-driving-innovation/8-tips-to-keep-css-organized-1c7e0bcaa905, https://medium.freecodecamp.org/managing-large-s-css-projects-using-the-inverted-triangle-architecture-3c03e4b1e6df, and some smaller ones). It will also be based on my own experience working as an intern/junior
front-end developer, and the code reviews I had while learning.","I'm kinda a newbie into the coding world and, specially when I started, I often had the called ""Impostor syndrome"", feeling that I didn't knew anything and that my code was ugly. As time passed, I learned with my co-workers that I was evolving every day as a developer, and started being proud about the code I was writing. This made me think that I could pass this feeling to other people that are starting their carreers and fell insecure.",,I'll be travelling from Brazil. Flights can be real expensive here 😧. I'll be in need of flight and hotel costs covering.,15 minutes,A,Talk,,,,,,,,
Adounis Younes,Adounis Younes,y.adounis@gmail.com,"CTO of Custplace and Synergie Media, I started as a self-educated developer mainly coding with Php, Javascript and Html / Css. Now my main focus is how AI and ML can help brands process their customer's reviews to improve their service and products.",https://www.linkedin.com/in/yadounis/,unees15,male,Other,Amazigh,Morocco,"Currently i'm based in Morocco (Africa) and working remotely in a startup based in France that offers services to word wide brands, that makes our work environment very diverse.","Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,My Coding Journey,,T047: My journey from a junior dev to a cto of a major SaaS,Code samples,,"My talk will about empowering junior developers by showing them how I went from a junior dev in a small startup to a cto of a SaaS (in just 4 years) that work with major brands in Europe. I would like to share with them my awesome journey, the key points that helped me achieve this and all the struggle and failures I endured during this journey.","Junior developers must know that it's not important to rely on a cto or team leader when you work on a startup environment and that they can rely on their self confidence, hard work and intelligence to become seniors or even cto's.",I hope my talk will give junior developers some confidence and encouragements and the willing to enhance their knowledge so that they can level up their game and their carrier,Being a developer is awesome !,I'll share some reports and data about developers career advancement,"When i finished my studies I never tought that i'll be a cto in just 4 years ! That's what I want to share with my fellow developers, they should always dream big and work hard and never think that working alone in a startup will not give them the chance to level up and advance their career.",,,15 minutes,A,Talk,,,,,,,,
Lekha Surasani,Lekha Surasani,lesurasani@gmail.com,"I'm a software engineer at DocuTAP, working on a Ruby on Rails app with some VueJS. Before that, I was at a startup for 6 months where I worked on a React/Flash app as a Full Stack Developer. I like to write technical articles, speak about technical topics, watch TV, and hang out with my cat.",http://linkedin.com/in/lekha-surasani/,@Surasanosaur,Female,Asian / Pacific Islander,,"Atlanta, GA","I'm a South Asian American, born in raised in the northeast (primarily NJ). I decided I wanted a change of pace for college so I chose to go to a totally different environment -- Georgia Tech. I didn't know what I wanted to do so I picked Computer Science because people said I was good at math. I ended up being OK with it (it definitely was not love at first sight) and struggled with getting through my classes, especially alongside people who had been coding for a long time. I struggled with the idea of focusing on this one thing -- Computer Science. I had diverse interests, ranging from history to economics to finance and I was never quite able to scratch that itch. I fell in love with the idea of helping people, though, and joined HackGT -- Georgia Tech's hackathon organizing group. HackGT reignited my interest in coding and a technical profession -- I met people who were supportive, patient, kind, and willing to extend a hand to me when I was unsure of what I wanted to do. I didn't know a whole lot upon graduation in terms of software engineering, but I joined a small startup, where I worked under the CTO as the sole developer actually working on the code for the company. I learned a lot -- that I liked to code, that I liked to be left to figure things out on my own, that I liked to have ownership of what I was working on. I want to help others -- especially POC -- in the same way that people helped me when I was unsure of where I wanted to go. I think my unique perspective comes in that I didn't start focusing on my career until after I got my first job. I don't want to move to Seattle, NYC, or the Bay Area, or work for an Amazon/Facebook/Google/Microsoft. I want to stay in Atlanta and be part of the budding startup scene here. ",Employed as a full-time developer for less than a year,,"CS degree,Online learning platforms,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Career,,T048: Why Every New Software Engineer Should Work at a Startup,None,,"I'll discuss why every new software engineer should work at a small startup. I'll introduce my background (I had 2 internships + 6 months full time job at a startup with <15 people -- so about a year's worth of startup experience). Then, I'll dive into why it's a good thing especially for new to industry people -- 
1. you learn really quickly: I had re-written practically the entire front end of the application in the 6 months I was working at the startup, without any prior React/Redux experience.


2. You have a lot of responsibility: I was solely responsible for the entire front end of the codebase -- it's the kind of ownership you wouldn't get to experience until a few years down the line in your career -- often times with large dev teams on a product, you get very little ownership of any part of the product, and it could lead to disengagement and discouragement early on. Spending some time at a place where you have a lot of ownership in the product can help put things in perspective if/when you move on from that position. 

3. You can learn a variety of things: When you get brought on at a startup, your job title might be one thing, but you could end up doing a whole lot of other things -- learning about software architecture, product management, devops, or more. This can help you explore other potential career paths and gain some experience if you're initially unsure if you want to pursue them. I thought I wanted to be a Product Manager a few years down the road, but a couple months of learning about what that would entail definitely made me realize that was not what I wanted.

I will add in some caveats about this advice -- that it's important to find a good mentor, that you should be interested in the product, and that job security isn't guaranteed.","I suppose what this talk is addressing isn't necessarily a ""problem"" or a ""solution"" -- rather some things to consider about startups that most people don't really think about when choosing their first job.",I would want them to consider working at a startup for their first or second job and see the value in the experience that they'd gain there.,I want the audience to feel excited about working at a small company.,Not sure this applies here.,"I worked for small startups for the first year of experience I had as a developer, and it provided me with a really fundamental base and grew my confidence for my future jobs. I have loved every minute of it and would most definitely recommend the experience to anyone who'll listen.",,"I would required flight, hotel & transportation to/from airport to hotel/conference",15 minutes,A,Talk,,,,,,,,
Meghann Wu,Meghann Wu,meghann@edittress.com,"Meghann is an management consultant, writer, and founder of Edittress (""editing stress""): an online mentor network powered by video chat. Her background includes rising from intern to senior vice president of strategy & business development at Viacom. She holds an MBA from Columbia University and a B.S. in Computer Science & Statistics from the University of Illinois. ",https://linkedin.com/in/meghannwu,edittress,Female,Asian / Pacific Islander,,New York,"I earned a degree in computer science over a decade ago, but never put it to use until I decided to launch a startup 2 years ago. I had a vision and no budget for engineering talent. So I dusted off my skills. While the languages have changed, the logic has not. If anything, I think my time away rising as a business executive taught me the fundamental of why we code: to solve problems. There were many nights where I struggled to implement a new feature, only to scrap it because I realized that it wasn't necessary later (talking to other coders or customers). I think I bring diversity to the Codeland conference by being a female founder later in life and a talk about staying balanced on the coding journey.",Currently focused on developing my coding skills,,CS degree,,My Coding Journey,,T049: Coding With Purpose,"Demo of working code,None",,"Here's a first draft of what I would like to share:
My coding journey started in college – against my will. I got accepted into the engineering school at The University of Illinois. Originally as an Aerospace Engineering major because A. it was listed first and B. I thought working for NASA would be cool. I barely passed the 101 class. Soon after, I did what I usually did back then which was just follow my older sister’s footsteps. So I became a Statistics major. Part of that was taking a computer science class, which would change my trajectory one more time. I had a study group (all male) that was fun, supportive, and diligent. They encouraged me to change my major once again to Computer Science and Statistics. I obliged.

After graduation, despite enjoying classroom work, I didn’t think programming was for me and was recruited into business management consulting. Fast forward 15 years, I was on top of the world as a senior executive at a major entertainment company. It was a dream come true. When I decided to leave that post, I felt called to start my own company – doing what? I had no idea. 

It was a leap of faith that I don’t offer to others lightly. But despite not working in an office, I found myself drafted to mentor others. My dentist asked me to talk to her daughter. A friend asked me to give advice to his nephew. Why not? And soon I saw a need. And I saw my own limitations – I was only one person with one set of experiences. But I had friends. 

What if there was a place online where you could talk to trusted women who had been where you are? More experienced and willing to talk. And what if it was easy to schedule – at the click of a button. I had nothing to lose. I dusted off my computer science skills and a mentorship startup called Edittress was born. (show demo)

My coding journey? It’s just a journey really. But coding made it possible. In the end. And so my hope for you as you take on Codeland is to remember not the dreariness of homework or teachers who can do but not teach or your own limits right now…but all the problems in this world that need to be solved. Coding is too overwhelming if all you want is a job. Worse, you’ll resent it altogether. Code with purpose! And you’ll be able to learn and grow while helping others and not take your limits so seriously.","I think the problem this talk addresses is that there is a lot of energy around coding as an end in and of itself. It's a skill and way of thinking that I'm incredibly grateful for, but It is also important to have a goal and purpose for your code in order to not be burned out. ","I want the audience to know that coding is a lifelong skill to solve problems: whether you use it today, tomorrow, or 15 years from now.",I want the audience to walk away feeling that it's okay that they are not great coders. How they think and solve problems is more important...and the code will follow. ,"In researching my startup, I conducted dozens of interviews with young women. I can fold in their responses when I talk about the mentorship product I created. ","So many women are being encouraged into tech (which is great!). I think I'm the right person to give this talk because I pursued tech later in life, despite earning a computer science degree 15 years ago.",,None. I live in NYC and happy to talk.,5 minutes (Lightning Talk),A,Talk,,,,,,,,
Ayesha Mazumdar,Ayesha Mazumdar,ayeshakmaz@gmail.com,"I'm a UX Engineer currently working at Optimizely. I was previously at Salesforce within the UX organization as an Engineer for 3.5 years, where I also interned twice while completing my BS in Computer Science at UCSD.",https://www.linkedin.com/in/ayeshakmaz/,@AyeshaKMaz,Female,2 or more of the above,,San Francisco,"I grew up in California suburbs, and had my first introduction to computer science in high school, where I fell in love with the subject. I was one of only a handful of women in the class, so since then I try to continually help women explore tech opportunities and support them as they continue their careers. Currently, I do most of this through the Holberton School, where I've been a mentor for 3 years. I've had a unique experience throughout my short career of being a biracial, female engineer sitting within a UX organization,  so I hope to help others who might be interested in or already within a similar situation. I interned a few times in Backend teams at Salesforce, and then worked with my recruiter to switch to the UX org, where I joined full time out of college, so I also have experience with interning. I also recently quit my job and started at a new company, so I have some fresh perspectives around that process and its pitfalls.",Employed as a full-time developer for over 3 years,,CS degree,,Career,,T050: Lessons Learned by Quitting my First Job,None,,"In this talk, I'd love to cover what it's like to quit that first full time job and actively interview for a new one. I learned a lot through my process, and my hope is that it can help others prepare or navigate through this big change. My talk would cover 3 lessons I learned:
1) ""Why a Work Diary is your best friend"" - This was a lesson I learned a few years into my job, when I realized I couldn't remember what I'd done or accomplished six months ago, much less years ago. I try to stress the importance of keeping a log of talks, successes, projects, and more to my mentees, so I think this would be helpful for the conference audience.
2) ""Keeping Yourself Marketable"" -  Probably not the final name for this section, but it would essentially cover the mistakes I made when it came to keeping my interview skills up to date. Since I interned at Salesforce, I had never actually interviewed for a full time position, and once I found I needed to leave my current team, I had a lot of regrets around not preparing for that moment sooner.
3) ""Learning when to say No"" - I had a lot of misconceptions about what it would take to evolve my career as a junior developer, particularly as a woman, so this section would cover how I learned to say no to certain types of work and how that's benefited me already in my new job.","I believe my talk would help new or junior devs navigate that first full time job, which is a topic I don't see covered too often. Since many speakers are often well seasoned devs, I hope to give a fresh perspective as someone who *just* went through all of this in the past couple of months. It's kind of a ""So you got the job, now what?"" talk, where I hope attendees would feel they have some concrete ideas of how to approach their first experience in the full time tech world. But I also think the lessons are helpful for people at any experience level, so it would also apply to attendees who are finally considering a coding bootcamp.

There's also been a lot of talk about how to help keep women in the tech industry, and I hope my talk could help shed some light on things women can do to help set themselves up for success within tech organizations. This is mainly my ""Learn to Say No"" part, because this was something I had to learn in order to figure out how I would be able to maintain a healthy career in tech. 

I also hope to help demystify what it's like quitting a job. I know I personally contemplated staying at my job longer simply because it was the easy, not-scary choice, so I hope by sharing my experience, others might feel emboldened to make the same choice if needed, and to do so confidently.","I'd want the audience to come away from the talk with some concrete ideas of personal best practices (vs. technical best practices) that they can apply to their new or future tech job, especially as they are just starting out in the industry, and that they can share with fellow tech newbies. I also want them to, if the time comes, feel confident about quitting a job or making other drastic changes that are in their best interest. ","I want the audience to feel better prepared for taking on their first tech internship or full time job. I'd also love for the audience to feel confident that they could succeed and thrive in their career, even at that scary moment when they might be switching between jobs and have to quit a job for the first time. It was a daunting task when I faced it, so I hope to help make it less daunting for future developers and empower them to make these hard career choices. ","I certainly plan to interview fellow devs who are within the first 3 years of their career, as well as some who have switched jobs recently to see if they have any other best practices for that process","This talk is basically my life over the past 4 months. Last fall I realized I needed to move jobs for a number of reasons, and as I began that honestly terrifying process of figuring out how to quit a job and find a new one, I realized I didn't have a lot of support or people to turn to for advice. My coworkers were all seasoned devs, and the other junior devs hadn't yet faced this obstacle. This talk is essentially what I wish I had known two years ago, when I was ecstatic with my job and didn't see an end in sight. If I had known these lessons then, I would have been a lot more confident in my decision to move and reassured that I had the resources and support to make the move that was best for my well being and career.","I've always loved mentoring others, but would absolutely love the chance to help support and guide a broader audience outside of my immediate San Francisco/Bay Area community, and I think this talk would be a great first step for my goal. I grew up doing musical theater, so I'm comfortable on stage, and have down so a couple of times at Dreamforce, but would greatly appreciate this chance to improve my technical speaking abilities while helping a community I so passionately want to see succeed and thrive.","This would likely be out of my own pocket, so any assistance for flights would be greatly appreciated.",15 minutes,A,Talk,,,,,,,,
Kyle Conway,Kyle Conway,kyle.r.conway@gmail.com,"Kyle R. Conway is a Vice President of Operations for a non-profit, a former Director of Training and Curriculum at a behavioral health organization, a recovering University Graduate part-time Art Instructor, and a perpetually afflicted multidiscriplinary artist. He's not confident enough to call himself a developer, programmer, or coder―though he increasingly uses these self-learned skills to make things better in his own life and for the lives of others. Kyle holds a PhD in Fine Arts from Texas Tech University and he likes tea.",https://www.linkedin.com/in/kylerconway/,@K_REY_C,male,White,Irish :),"Des Moines, Iowa","I’m a 36 year old, non-young-professional, with a  PhD in Fine Arts who in the past decade worked as a part time university instructor in art, with behavioral and medical healthcare startups in a variety of roles (training, marketing, and more), and now works as a VP at a non-profit working with formerly incarcerated individuals with substance abuse issues and helping them get back on their feet. Throughout all of this I’ve been increasingly using technology to do things better: better art, better teaching, better marketing, better design, better grants, better data, better outcomes. 
Knowing no one in tech (but maybe me?) I’m insecure about my place in this field and thus downplay my own accomplishments (in fact, writing them down here for the first time, I’m surprised by how “not bad” they sound).  At any rate, I’m an odd duck of degrees and experience who just happens to use computers.",Other,"I feel like I’m these three simultaneously: Casually code, but coding is not the core part of my profession & Currently focused on developing my coding skills & Currently looking for my first full-time developer role I’ve been a casual-coder for ~5 years, not the core part of my profession but increasingly so based on moves I’ve made at a small non-profit, and I’m open to my first full-time developer role to increase the learning even more.",Other,"I’ve learned from both Collection of resources (blog posts, books, tutorials, workshops, etc.) and Online learning platforms, along with twitter, stack overflow, youtube, and just trying.",My Coding Journey,,T051: Am I Technical Enough? Answering the Question Without Having the Answer.,"Code samples,Other",Artworks,"Beginning
    • Introduction of Me
    • Introduction of the question I can’t answer:
        ◦ Am I technical enough? This is less a talk and more of an open question with examples, trials, tribulations, momentary successes, and deep doubts. I’m asking you, scary strangers at a tech conference at which I’m ambivalent about my level of belongingness, am I technical enough?
    • Description of the ways I’ve tried to figure it out (including this talk).
Middle
    • Things I’ve done technically:
        ◦ Stage Lighting Photometrics (Open Office Calc) 
        ◦ Playscript Randomizer (Microsoft Excel)
        ◦ Data Reporting Parser (Python) 
        ◦ Medical record file combiner (Bash) 
        ◦ Talkdesk call downloader (Python) 
        ◦ @Dicewarebot (Python)
I assume this is a first for many programmers. Having been an avid D&D player in undergraduate the idea of having a computer roll a character for me or calculate up all the d8s I needed to roll to slay a dragon seemed like a good idea (plus, the random module in python is awesome). I expanded this script below a couple of times over for various uses.
    1. Password Generator (Python) 
       One of the first projects I was really excited about (and thought I could accomplish) was to generate passwords upon the release of [EFF's update diceware wordlist](https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases). This seemed like an accessible project because it was text-based (a word list) and it involved dice (which was one of my first experiments with programming using random numbers). This was a successful project that I would expand over time into many different and useful projects. 
    2. Multi-Password Generator (Python) 
       I ended up modifying this one at home for an upcoming work use-case, rolling out new, secure, passwords to over 100 users at one time. What better modification than to add variables at runtime for the number of passwords to generate along with a variable output for the number of words to add to each password. When I combined this with a scripted user-creation with some services and internal email merging I was good to go in very little time. 
    3. Diceware Bots for Twitter and Mastodon (Python) 
       For a while I was seeing bots everywhere I looked on twitter. It wasn't until Parker Higgins ([@xor](https://twitter.com/xor)) released [@pomological](https://twitter.com/pomological), a bot that tweets public domain watercolors from the USDA, that I really decided turning my diceware bot would be both a good coding project, and potentially a service for others to get into stronger passwords. 
       I wanted there to be a visual flair for the bot, and to highlight the fact that this type of password is achieved by rolling dice, so I ended up learning how to define my first python function to not only roll dice, but to convert the numbers into unicode dice so the output could be clearly derived from the roll of a di. Example output from mastodon's [@dicewarebot](https://botsin.space/@dicewarebot) below: 

       #letsroll 
       ⚀ ⚀ ⚂ ⚁ ⚁ →#aftermost 
       ⚃ ⚂ ⚀ ⚀ ⚀ →#outsource 
       ⚅ ⚃ ⚅ ⚄ ⚃ →#untreated
       ⚅ ⚅ ⚂ ⚅ ⚅ →#wireless
       ⚁ ⚂ ⚄ ⚃ ⚃ →#dividable 
       ⚂ ⚀ ⚂ ⚂ ⚂ →#footing 
       aftermost-outsource-untreated-wireless-dividable-footing 
       Roll your own @ https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases 

       There were a lot of issues to work through (like twitter having, at the time 140 characters, so it had to output fewer words and do a len() check on the output to ensure it could still be sent). All in all, a really fun project though. The twitter bot was eventually suspended (not sure why, @jack). The Mastodon bot will probably go back into production at some point. When I migrated machines python versions changed on me and things stopped working. I have yet to have the patience or time to figure out why. 
    • Things I’ve tried (to understand if I’m technical enough – and how they went/felt):
        ◦ Reach out to strangers in Tech
        ◦ Submitting a Pull Request.
        ◦ Joining an open source project.
        ◦ Going to a meetup.
        ◦ Talking to a recruiter.
        ◦ Trying to honestly describe me technical skills (without any context in the field).
End
    • Question (to the audience): “Am I Technical Enough?”
    • Are you technical enough? 
    • Is it possible to know?
    • What could I do better?
    • What could we do better?","This talk addresses the issue of placing oneself with any accuracy within the tech field… especially when:
    1. You’re not in tech.
    2. You know no one in tech.
    3. You compare yourself to other tech experts (and instagram versions of other “normal” programmers)
It attempts to answer the question by posing the question to the audience at the event, after sharing some work I’ve done and some things I’ve tried.","Honestly, I’m hoping for a variety of takeaways depending on where people are it an their journey. 
    1. For programmers and others with greater experience in tech, I want them to think about what opportunities I missed so far (to still have this question) and what things they might create to help people like me answer this question.
    2. For those with less experience than me (is that possible?), I’m hoping they come away with a normalized sense of insecurity (i.e. most people experience it), and thus can feel more secure feeling insecure.
    3. For people with more coding, but less other experience (I’m no longer a “young professional”), I’m hoping they understand that age or youth or experience in certain areas is different for everyone. We’re all just people; we’re better off if we’re working to help on another.",One word: Empowered. ,"    • In once sense my primary research is the audience itself. 
    • I’ll also be reaching out to strangers in tech I’ve reached out to in the past, and asking for their experiences of random people from the internet reaching out, how they responded, and how things turned out (if they know).
    • Transtheoretical Model of Change – James O. Prochaska and Carlo Di Clemente
    • I’ll likely also draw from The Cambridge Handbook of Expertise and Expert Performance, which talks about expertise across a variety of disciplines, and highlights some methods and reasons to become an “expert.”
    • Likely something about insecurity from DSM-V or other psychological studies.","Because I’m me. :)
Honestly, because “am I technical enough” is literally a question I’m asking myself right now, and I don’t know how to get a good answer, and I’m betting that going to (and speaking at) a newb-friendly tech conference really will help me get an answer (and cathartically empathize with others who feel or have felt the same way). 
Additionally, I’m an odd duck, with palpable expertise and success in other areas (PhD in Fine Arts, VP of a non-profit serving formerly incarcerated people with substance abuse issues get back on their feet, trained in motivational interviewing and the Transtheoretical Model of Change), but also slowly but surely using code to solve my own problems (and the problems of companies I’ve worked for) for the past 10 years – but I still honestly feel like I know very little.
This is a deeply felt experience that I’d like to share with everyone, and ask them to help me – and all the me’s like me (even the ones in the audience) – get an answer and find a clear path.",Thanks very much for considering this talk! I’m excited to work with the programming committee if chosen!,"My non-profit likely won't be funding my travel, so it would be helpful to have travel costs and hotel accommodated. ",15 minutes,A,Talk,,,,,,,,
Monica Powell,Monica Powell,monica@aboutmonica.com,"Monica Powell is a long-time #CodeNewbie and Full Stack Developer at Meetup. She periodically writes for FreeCodeCamp, Hacker Noon and Code Like A Girl. Previously, she co-founded the Athena Digital Design Agency, a student-run web development agency at Barnard College.",https://www.linkedin.com/in/monicampowell/,https://twitter.com/waterproofheart,female,Black or African American,,"New York, New York","I'm a Black woman and software engineer who did not receive a Computer Science degree which I think gives me a unique perspective.  I did take some formal Computer Science courses but also did a patchwork of ""self-taught"" coursework. I think this brings a different perspective and lend to my content being approachable for a wider audience.",Employed as a full-time developer for less than a year,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms,Other",Some university-level Computer Science classes,My Coding Journey,,T052: Git is hard but time traveling in git isn't: a collection of git hacks,"Code samples,Demo of working code",,"1) Introduce myself and the topic of git
- Discuss my relationship with git to give background on my experience - 
When I first used git I always used the Graphical User Interface (GUI) and now I use git from the command line every day at work to work on software projects collaboratively. A lot of what I learned with git is from trial and error along-side helpful open-source resources. My most popular Medium article, with 41K views is about changing the language that GitHub detects https://hackernoon.com/how-to-change-repo-language-in-github-c3e07819c5bb 
- Talk about the difference between Git and GitHub/GitLab/BitBucket - 
So what is git? Git is a software designed to version control software. Whereas GitHub/GitLab/Bitbucket are websites that host git repositories.

2)  Explain the talk title by discussing how I learned that time in GitHub (and other git repository hosts) defers to the time set in git locally versus server time.
- Context: In order to reproduce a calendar bug I had to update my computer’s clock and then once I pushed my changes they were associated with a date in the future (the date set on my computer). When I pushed to GitHub I learned that GitHub uses the computer's local time as recorded by git as opposed to the remote time in GitHub. (include screenshot of what this looks like)
Takeaways: 
- GitHub honors the dates that git associates with commits which are determined by the computer system usually. 
- This can be manually be reproduced by passing environment variables as arguments to git to change the date. You can also rebase a branch and apply changes to any past commit as well. A rebase is a way to rewrite the history of a branch.
Example of the args passed:
GIT_AUTHOR_DATE=""…"" GIT_COMMITTER_DATE=""…"" git commit -m …
GIT_AUTHOR_DATE=""Wed Mar 20 15:12:30 2019 -0700” GIT_COMMITTER_DATE=""Wed Mar 20 15:12:30 2019 -0700” git commit -m “future commit""

3) Explain how to reclassify Github detected language of a repository with one line of code. 
- Context: I was working on a Weather app in Flask to auto-detect a user’s location based off of their IP address. After committing some updates to GitHub my app switched from being labeled as predominantly Python to 98.9% CSS even though it was a Flask application in which most of the code I had written was in Python and HTML. 
Code sample: The .gitattributes file that I added to get my Flask application’s language reclassified 
Takeaways:
- The linguist library is “This library is used on GitHub.com to detect blob languages, ignore binary or vendored files, suppress generated files in diffs, and generate language breakdown graphs” which means my CSS vendored files should have been ignored. 
- What was the one line? Creating a .gitattributes file with the following line static/* linguist-vendored to tell Git to ignore the vendored files in the static folder of my repository.  With one line the classification went from  98.9% CSS and 1.1% Other??? To 56.2% Python and 43.8% HTML with one line. 

4) How to automate git workflow
- Context: Git hooks are executable scripts that perform tasks to automate parts of a developer's git workflow. At work one way we use git hooks is to lint and format code according to our standards to increase the standardization of our code without adding additional overhead for developers to contribute. Personally it would be helpful to have a git hook that prints to the terminal confirming that I want to commit to master versus another branch or reminding me to remove debugging statements I forgot to remove.
Demo: Walk through example bash script for displaying a warning when you attempt to push to master The script has a user prompt confirming if they want to proceed with pushing to master. The script is written in bash which is a command language used in the terminal. I will also demo how to implement shared linting and testing git hooks within a package.json without having to write any scripts. 
Takeaways
- What are Git Hooks? Executable scripts that are executed at specific points within the git work. Similar to webhooks, Zapier, If This Then That, etc. 
- When are git hooks triggered in the git workflow? Precommit, prepush, postcommit, postpush, etc. 
- How can git hooks be used?GitHub can be automated by using git hooks (sending new Intl  objects to be translated), triggering CI, linting, running tests, etc.)
- When should git hooks be used? Good candidates for git hooks are actions that you'd like to occur every time you run a specific command in git
- Examples of how hooks can be used: Prevent files that are too large for git from being committed, syntax checking, making sure comments from merge conflicts have been removed, make sure console logs are removed (or at least warning about them), detect sensitive credentials and reduce the likelihood of them being committed to version control, prevent people from committing directly to master, creating git commit message templates, warn when committing to master, run linting and tests before committing, etc.

What are the limitations of git hooks? Limited enforcement - can easily be overridden with the —no-verify flag or forced pushes. Local hooks are not shared hooks by default as .git/hooks, not in version control. Also, git hooks are not an appropriate substitute for CI, server-side branch protection or code reviews.

Share Git Resources I’ve Found Helpful
Git Lens Plugin
https://gitlens.amod.io/
git-together — better attribution
https://github.com/kejadlen/git-together
Husky
https://github.com/typicode/husky
helpful git hooks
https://github.com/pre-commit/pre-commit-hooks
Git Hooks 101 Website
https://githooks.com/
Git Attributes templates
https://github.com/alexkaratarakis/gitattributes 
Git Book
https://git-scm.com/book/en/v2","Git/GitHub for developers can be difficult when getting started. This talk will demystify git a bit by explaining some things I've learned about Git during my coding journey and how I learned those things. It is important for developers who collaborate to develop a good working knowledge of git or another version control system. 

This talk will cover how I accidentally discovered you can manipulate git to commit code in the “future”, and how I used Google to figure out how to change the language of a GitHub repository which involves using the GitHub’s Linguist library (https://github.com/github/linguist) to tell GitHub what languages a repository is composed of and an introduction to Git Hooks, which make working with git more delightful (or maybe just make your commit history less embarrassing) by automating repetitive tasks and pattern searching. The limitations of git hooks will also be discussed.","I want the audience to have a better understanding of how git works under the hood and walk away knowing that git hooks may be a good option for them to consider for automating their git workflow. Ideally, I'd want attendees to customize their own git hooks derived from samples from my talk, Git https://githooks.com/ or https://github.com/pre-commit/pre-commit-hooks. ",I want the audience to walk away feeling that git is more approachable and feel more empowered to tinker with their git workflow.,"I plan to use resources from https://github.com/github/linguist documentation 
, https://git-scm.com/book/en/v2 and https://githooks.com/. I also have gathered a collection of helpful resources to share with the audience about the topics covered in my talk.",I use git and GitHub every day in my role as a full stack engineer. I would present the information in a relatable way as I remember how frustrating git was when I was first learning it and have taught git in workshop settings. I also wrote an article on how to change the language that GitHub detects on Medium and it has gotten 41k views https://hackernoon.com/how-to-change-repo-language-in-github-c3e07819c5bb.,I'm open to the format of this talk being 5 or 15 minutes. This proposal is for a 15 minute version.  I will be presenting a version of this talk with the Women Who Code NYC chapter on March 14th. https://www.meetup.com/WomenWhoCodeNYC/events/258691045/,,15 minutes,A,Talk,,,,,,,,
Adesola Adesina,Adesola Adesina,adesol.a@icloud.com,"I'm a technology consultant, focused primarily on product ownership and management, who is transitioning into full stack software engineering. I will be attending Flatiron's Online Software Engineering Program part-time this year. ",www.linkedin.com/in/jadesina,eyilanke,Female,Black or African American,,Washington DC Metro Area ,"I am technology enthusiast, currently working as a product manager but working to become a software engineer soon. My journey in tech began with a list of 23 promises to myself on my 23rd birthday which included a promise to learn something new. Since then, I've found that my passion for solving all of my friend's problems unbidden is best served solving complex problems while bending my brain in ways it hasn't ever been bent before. I am an immigrant, queer, Muslim woman who is just winging it at this life (and code) thing.",Currently focused on developing my coding skills,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms,In-person bootcamp",,My Coding Journey,,"T053: ""This is why I'm here""",Code samples,,"Beginning: 
1. Failing is really hard to do. It's especially hard when you have a lot riding on your ability to succeed. When failing is the difference between comfort and another generation of your family languishing in poverty and payday loans. 
2. How much of who you are is dependent on external validation and risk avoidance? How often do you choose to do what is easiest/safest/easiest to bounce back from because you know that to do otherwise is to put your whole life in jeopardy?

Middle: 
3. What if you tried? Granted, the absolute worst case scenario is that you lose everything. But what if it works?
4. Develop a mantra that contains all of your ""whys"". Why are you learning? What brought you to coding? What is the story you will tell yourself when that button refuses to work? (Sidenote: F**k that button.) How will you pick yourself up and try again, word to Aaliyah?

End: 

Here is my mantra, when I've been wrestling with a concept or button for the better part of an hour: 
""This is why I'm here. I like succeeding at the difficult things. I like the win. I like the burning in my lungs and the adrenaline in my veins. I like the view from the top of the mountain and knowing I conquered. I am not a quitter. I do not lose. I will not be defeated by the gaps in my knowledge. I will not be defined by what I annot do. I believe in my ability to make sense and wholeness out of the things that are new and scary. I will not be ruled by fear. Ever.""","I believe the tech industry is overwhelming and it is very easy to believe that you are the problem when you have no frame of reference. I think the rate of attrition is high because it is so easy to believe the lies you tell yourself about who you are as a developer, before you even have an idea of who you are as a developer. I would like to challenge that narrative. ","I would like the audience to understand first and foremost that they are not alone in feeling inadequate. It's easy to feel as though if you do not have the most inspirational tech story as a beginner, or that if you're not an absolute genius who can code with a pen and paper, you do not belong in this industry. I would like to challenge that narrative and give people an idea of what to do to find their favourite versions of themselves. ","I would like the audience to come away feeling challenged to find their grit. That they do not have to look a certain way or think a certain way or even code a certain way in order to be a programmer. I believe you are a programmer because you talk to computers to solve problems, not because you look like the movies' definition of a hacker or can do math really well. ","I plan to discuss Angela Duckworth's book called Grit: The Power of Passion and Perseverance, it has been instrumental in my understanding. ","I believe I am the right person because I have struggled for so long with my feelings of adequacy and I am finally able to speak to why. It's not enough that you are validated externally, you have to believe it to. ",,"I will need assistance with paying for the flight or train from the Washington DC Metropolitan area to New York, as well as the hotel. ",15 minutes,A,Talk,,,,,,,,
Chiamaka Ikeanyi,Chiamaka Ikeanyi,chiamakaikeanyi@gmail.com,Software Engineer passionate about using technology to solve human problems,https://www.linkedin.com/in/chiamakaikeanyi/,https://twitter.com/chiamakaikeanyi,female,Black or African American,,Nigeria,"I'm a Software Engineer based in Lagos, Nigeria with 2+ years of experience building software solutions",Employed as a full-time developer for 1-3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,My Coding Journey,,T054: Growing Consciously as a Developer,"Code samples,Demo of working code",,"Set achievable target
Learn the basics 
Get involved in the tech community
Contribute to open source
Read codes of experienced engineers
Build solutions to problems
Build a good network","Most time, new developers find themselves not growing. They feel that programming is hard and spend years still doing one thing without improving","To learn to invest in themselves. To create time daily, make a conscious effort to improve and track the difference",Eager to improve and motivated to solve problems,primary sources,"At a point in time, I felt that I wasn't growing in my career and had to make a conscious effort to track my progress which really helped",,Flight and hotel,15 minutes,A,Talk,,,,,,,,
Brian Dunnington,Brian Dunnington,briandunnington@gmail.com,"From small-town farm boy to senior developer at Microsoft, I am a self-taught developer who has been coding now for over 20 (wow!) years. During that time, I have worked at start-ups, giant global companies, and ran my own successful freelance business.",,briandunnington,male,White,,"Seattle, WA","Although I am an over-represented white male, I have a passion for helping new and upcoming developers achieve their goals. I don't have a CS degree and didn't get into software development through traditional routes and think it is an interesting journey for folks to hear. As I progressed through my career, I made a conscious effort to avoid managerial roles since I thought I just wanted to write code, but a great mentor challenged me to push my boundaries and try developing people as well. I found a great sense of fulfillment and pride in helping other folks on their own journeys.","Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,"Other,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",lots of 'View Source' and experimentation,My Coding Journey,,T055: I am developer and so can you!,None,,"In the beginning:
-From a summer job spraying weeds to an introduction to computers
-The self-doubt of applying for a job I didn't feel qualified for
-Packing everything I owned into my truck and moving to a new state with no job to try to become a developer
My journey:
-Getting in over my head, but learning how to learn my way out
-Startups, promotions, and burn-out
-Freelancing and work/life balance
-Software development vs. people development
Today and tomorrow:
-Current role at Microsoft
-What does the future hold?","Rather than solving a specific technical problem, I hope this talk inspires others who are just starting out that they will be able to achieve their dreams by sharing my personal journey. Although this conference is specifically geared at new coders, I felt like it would be good for them to hear from somebody who has already walked that path and hopefully resonate with the goals they have for themselves.","I hope they leave with a renewed vigor and excitement. I love being a software developer, and I love encouraging and helping new folks experience that same feeling. I hope they apply for that job they didn't quite feel qualified for, or complete that side project they haven't quite made enough time for.","Feel encouraged and empowered and maybe even inspired. I want folks who might just be starting out to be able to see the light at the end of the tunnel. All of our paths are different, and winding - but it is an exciting journey and hopefully hearing from someone who has already faced some of the same challenges and struggles and come out successful will be motivating to them.","For this specific talk, it is nearly all geared around a personal story/journey.","This is my story about my personal journey from a part-time weed puller to a senior Microsoft developer, so hopefully I am the right person to share it =)","I really do love helping new devs grow in their skills and career, so if there are other ways to help or be involved outside of this talk, I would be interested in learning how I can help.","My company *might* cover my costs, but even if they do not, I will cover my own costs. ",15 minutes,A,Talk,,,,,,,,
Andrew Cook,Andrew Cook,codingwithcookie@outlook.com,I’m a Software Development Engineer on docs.microsoft.com focusing on services within the Developer Relations Team. My formal training is in Paramedicine where I practiced emergency medicine in rural Arizona for 8 years. During that time I taught myself how to code and now working to empower every developer to achieve more.,https://www.linkedin.com/in/andrew-cook-3604b421,@codingwcookie,male,White,,"Seattle, WA USA","I have given multiple presentations through the pacific Northwest. Including, Washington, Oregon, and British Columbia. https://codingwithcookie.com/presentations/",Employed as a full-time developer for 1-3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,My Coding Journey,,T056: Going to Microsoft without a CS drgree,Other,Visual Story telling with photos and drawings.,"In 15 minutes, we will follow my journey of going from an ambulance in rural Arizona, to working for Microsoft in Redmond, WA (Seattle area). But more importantly I will share what I have learned along my journey in hopes of helping you with yours. I first started by trying to solve small problems with software. Not exactly what I would consider coding, but I started with Access Databases. From there I made what I would consider my first application for the Seattle Red Cross, a volunteer management web application with a SQL Database. I moved to Arizona and started working on an Ambulance and went to college for Paramedicine. While working on an Ambulance in Arizona I continued to complete side projects, eventually starting my own business on the side doing IT consulting, website, and software development. While developing web apps and websites I continued to learn online about software development and started developing mobile applications but needed to focus on building my brand. I updated my resume and tailored it to highlight my technical achievements, started a blog, and sought out community which could help me grow. I applied to several positions and after a few months was hired as a consultant in Bellevue, WA (Seattle area.) While working as a consultant I started to do more networking by going to local meetups and conferences. And one of the scariest things I have done and most beneficial is to get up on a stage and share what I have learned (usually through failure.) It was from local meetups, speaking and my network that I was encouraged to apply to Microsoft. And even there it took 3 tries to get where I am now. Along this journey I have learned and hope you will learn this too, that being part of a community, continuing to improve you coding knowledge, skill and experience will help immensely to get your first coding job and to continue your career to somewhere where we are appreciated, welcomed, and given the freedom to grow. Also, when getting your first job I will share where you can get reliable information on salary to help in negotiating and understanding an offer.","When we are on our coding journey we want to get out first tech job or a better job in tech, but how do we do that? This relates directly to our desire to work somewhere, where we are appreciated, welcomed, and given the freedom to grow.","Understand different paths that can be taken and applied to their coding journey. And have actionable steps to apply to their coding journey, like sharing their knowledge, resources for learning, and data for negotiating.",Empowered and Optimistic about how then can contribute to their coding journey.,"I will share sources for salary data including levels.fly, US H1B Visa information, and Glassdoor.",I have personally traveled on this journey starting out on an ambulance in rural Arizona to now working in Seattle for Microsoft.,"If selected, I look forward to collaborating on this talk to ensure it's informative and inspiring to the Codeland audience.",All my travel will be covered by my employeer.,15 minutes,A,Talk,,,,,,,,
Janna Hawkins,Janna Hawkins,janna.bananamama@gmail.com,"I’ve been out of the workforce for 10  years. I'm pursuing an Undergraduate Degree in Computer Science.  I’m excited that interview practice questions are starting to make sense to me.  I have no professional coding experience, yet.",,@pigeonpowers,female,White,,NYC,"I’m a mother of three, just turned 40.  I’ve lived in NYC for 8 years.  I’m married to a trauma surgeon.  We’re working to get out of educational and medical bill debt.  I chose an online program through University of the People to study Computer Science.  It has a global student body.  I’m very happy with my decision.  My school is dedicated to the notion that education is a human right.",Currently focused on developing my coding skills,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,My Coding Journey,,T057: Sucking at coding is a fundamental human right.,Other,xkcd comics,"Beginning/
As human beings, we have a right to technical and professional education.  We have the right to seek educational materials and environments that are suited to our goals and resources.  According to Article 26 of the UN Declaration of Human Rights, ""Everyone has the right to education...Technical and professional education shall be made generally available and higher education shall be equally accessible to all on the basis of merit.""  (http://www.un.org/en/universal-declaration-human-rights/) Having the right to an education means having the right to work hard, to fail, to try again, and to keep going. Put another way, we all have a fundamental human right to suck at coding while we work to improve.

Middle/
Learning to code is hard, and we can expect it to stay hard.  Some of us doubt ourselves when things are hard.  We may think that if we were meant to do it, it would be easy for us. We may compare ourselves to the image we have in our minds of a “real coder” and feel that we don’t match up. Luckily, the more we challenge ourselves, the more we grow and learn.  All we have to do is keep going and try new tactics when we run into trouble. No matter what our circumstances are, we can adapt and keep learning.

End/
If we're honest with ourselves, our life experiences show that we have persistence, patience, and problem solving abilities. These things make us qualified for the challenge of learning how to program a computer.  We do not need to use our mental effort wondering if we are right for tech. We have already demonstrated important life skills that show we are able to learn and grow.  When we suck at something for a while, that is simply a sign that we have taken on a worthy challenge. With time and effort we will improve, but, until then, we have a fundamental human right to suck at coding.","Attendees may doubt themselves and spend energy wondering if they can learn to code.  They may interpret their current coding limitations as a sign that they aren’t good at coding. They may take their loneliness as a sign that they aren’t meant to join the community of coders. This uses a lot of time and mental effort, and this can feel bad.  The truth is, attendees have a right to learn, and learning involves mistakes. ",I want them to know that they have a fundamental human right to an education. I want them to evaluate their many educational resources with self-assurance.  I want them to have more energy to work on learning and feel less of a need to question themselves.,"I want the audience to feel relieved and know that it’s OK to suck at something while you learn.  I want them to feel important on an individual level because they have a fundamental human right to educational materials. I want them to feel eager, knowing they already that the life skills of patience, persistence, and problem solving necessary to attempt hard and important work.","http://www.un.org/en/universal-declaration-human-rights/
https://www.explainxkcd.com/wiki/index.php/1349:_Shouldn%27t_Be_Hard  (comic)","As a wife of a surgeon and a mother of three,  I’ve begun to put my own persistence, patience and problem solving skills towards learning how to code. I’ve realized that I have a right to an education, and I’ve sought out an education that is aligned with my financial goals and resources.  During the past year, I’ve learned how to program amidst the chaos of family life.  I have learned how to stop putting mental energy towards wondering if I’m a good candidate, and instead I've committed fully to working through any challenges.  I believe this commitment is the reason I’ve been able to complete a tough year of Computer Science study, and I plan to exercise my fundamental human right to suck as I attempt many exciting coding assignments in the future.","I am very grateful to Saron for the CodeNewbie podcast, the BaseCS podcast, and now the Command Line Heros podcast, as well as for the opportunity to attend Codeland2018.  It was a real turning point for me, both in how I saw the tech community, and how I envisioned a place of leadership for myself inside it.  I want to live in a world where the code we need is written by ALL who are willing to take the time to learn.",I will need to hire a babysitter for my two-year-old.,15 minutes,A,Talk,,,,,,,,
Anabella Spinelli,Anabella Spinelli,anabellaspinelli@gmail.com,"I've been working in the software industry for over 9 years, slowly making my way from QA to software development. Throughout this time, I've been a self-taught coding student, learning from free online courses, articles and projects I came up with to apply my new skills. About a  year ago I started working as a full-time front-end developer.",https://www.linkedin.com/in/anabellaspinelli/,@deutschevita,"Female, lesbian",Hispanic or Latino,,Barcelona,"I'm originally from Argentina, but I've been living in Barcelona with my partner for the past year or so. I started working as a QA Engineer almost by mistake: I had dropped out of classical music school and I desperately needed a job. While working in the software industry I discovered that I really liked this programming thing and started learning a lot about it using free resources online. Last year, after achieving my lifetime dream of getting a job in Europe, I also got the opportunity to finally step into a developer role and I find that I'm loving it. Not only do I get to code all day, and feel my experiences and best practices become applicable, I find that I also love the social aspect of it: interacting with product owners, designers, business people, etc. And when I thought I had it all, 2018 ended with me giving my first talk ever in a conference. It was a thrilling experience and I found that it was something I want to try to explore more this year.",Employed as a full-time developer for less than a year,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Other,"OAuth, Authorization, Frontend","T058: One, two, three, four: OAuth is a dance that you will adore","Live coding,Code samples,Demo of working code",,"During my first months as a Junior developer in my team I heard a lot of talking about OAuth applications, we were re-doing them from scratch. As a challenge for myself, I decided learn about OAuth and how it worked in our platform. And so, I set out to build the simplest OAuth app I could think of: an HTML file with a link, and a tiny server with just one endpoint to handle the callback. The user would go through a normal OAuth login and at the end they would see the result of requesting their profile data.

This proved to be much more complex than what I had imagined. There were a lot of concepts I had to process and be able to apply. But after gathering data from different sources I arrived at a working comprehension of the mechanism behind my tiny app. This process ultimately led to becoming the go-to person for explaining OAuth to the non-technical people in our team (POs, designers, UXers) and, as always, having to put it in simple terms brought a deeper understanding of the subject. This talk is a summary (or evolution) of those conversations.

The first things we'll go over are the basic concepts to understand what OAuth is and how it works: what are the common use cases for it, what's an OAuth client (or application), and an OAuth provider, what are client IDs and Secrets, why do we need redirect URIs, what are tokens and scopes.

After that, we'll use those concepts to learn about the four steps we can identify in the OAuth dance: 
- Authorize: a public request to the OAuth provider's server, which could be through something as simple as a link, to provide it with the initial information about who's requesting access to user's data
- Consent: the presentation of the requested permissions to the user, for them to review and approve.
- Redirection: a redirection from the provider to the client, through the browser, and including a temporary code which can be used in the final and super secured step...
- Token call: a secure, server-to-server call from the client to the OAuth provider which will result in the creation of an OAuth token that we can use to request user data from the provider, at least the data that they agreed to share with us.

After we've gone over this, I'll try to demonstrate each step with that simple simple OAuth app I built: we'll examine the bare bones of what's needed to perform an OAuth flow, and complete our understanding of what is going on every time we use that handy log in with Facebook/Google/Twitter/GitHub button.",My talk addresses an interesting topic we've all have first-hand experiences with and something that will undoubtedly come up as we grow as developers: signing up into service A using our account in service B. There's a lot of uncertainty about what really happens when we use this and I think it's a super fun topic to learn about. I also think it's valuable to get an example about how we can come up with a micro-MVP project to learn about a new thing.,"My audience will leave the talk with an easy-to-follow yet solid understanding about OAuth, what it's for and how its internals work. They'll be able to use this to try it by themselves and embark into building their own OAuth logins or even integrations. I'll also provide a set of links and resources (including the code for my project) for them to dig deeper into the subject.",I want them to feel excited about finally knowing what's behind this mechanism they've probably used a lot of times. And then curious to try it for themselves using the concepts and tools I'll provide.,"I've gathered a set of articles and video tutorials that really helped me through my process, which I'll link during the talk, including one written by myself. Also, I'll try to encourage the audience to read the spec for OAuth 2.0, which is surprisingly easy to follow and clarifies a lot of concepts.","I feel I'm the right person to give this talk because I've recently learned about the subject on my own, in a very top-down approach, literally starting from zero knowledge about it and jumping straight into applying it into a project. I also love learning about complex or technical concepts that are often misunderstood and then explaining them in a simple manner, that can potentially make sense to anyone interested.","The first (and only!) talk I've given was also about OAuth, last year in the API Days conference in Paris. It was heavily focused on developer experience and documentation, since that's what the track was about (you can find the video in YouTube). However, the talk I actually wanted to give was something like this proposal: a simple, yet accurate, description about OAuth, what is it for, what are the concepts behind it and how do they work, intended for people that maybe have heard about OAuth but don't have a lot of information about it.

Thank you for taking the time to read this!","I could probably get partial or total funding from the company I work for, but I'd have to ask about it if my talk is selected. I would need a flight from Barcelona and accommodation for myself.",15 minutes,A,Talk,,,,,,,,
Caitlin Ard,Caitlin Ard,caitlin.ard@gmail.com,"I'm a fresh new grad working full-time as a Software Engineer at a social media site called Nextdoor. I fell into coding a bit later than many of my peers, only discovering my passion for the field about halfway through college. It has been amazing to see my own progress from total newbie to fullstack engineer!",caitlin-ard,@EarnYourSpikes,Female,White,,San Francisco,"I grew up in Colorado and went to an agriculture state school in a state that a lot of people aren't even aware is a state. (The people who don't know where New Mexico is will say: ""Wow, you went to school in Mexico?"" and the people who do know where New Mexico is will say: ""Wow, I love Breaking Bad!"") I fell into tech late into my degree but completely fell in love with the challenge-reward paradigm of coding. I soon became hyper-aware of the lack of gender-diversity within our department: you could always count the number of women in a lecture on one hand. I wanted to remedy this and provide a space for women in tech on our campus, which lead to facilitating our campus's Women in STEM organization. I leaned heavily into this network of other incredible women to help lift me up when the industry had me down. 
To this day I want to continue to push for diversity within tech. I am now leading our company ERG, working full time, and learning web a11y in my free time. I want to continue to grow and learn about both software and soft skills and I am excited to be a part of this industry at a time where we are having these important and difficult conversations around diversity within our space.",Employed as a full-time developer for less than a year,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Career,,T059: A/B Testing Adulthood: How I Became My Own Side-Project,Other,,"This is just a rough outline of some of the concepts I could touch on for this talk:
Introduction:
-Who am I & the difficult transition of adulthood (imposter syndrome when surrounded by such talented engineers)
-Why have side projects side projects should solve for a problem you see in the world: at 23 when you’re trying to grow up and kill it in your career, gaining confidence can be the biggest problem blocking you from advancing in your career
-Decided to use the idea of side projects and A/B testing to improve my life and help me to transition into adulthood (test: trying out something new vs control: how I was living before)
Test 1: Hobbies
-Control: No true passions, would sometimes play games and workout to lose weight but never anything that became my “thing”
-Test (Variant 1): Physical Hobbies:
Benefits of finding physical hobbies that are actually things you enjoy instead of having your focus be aesthetic (climbing, dancing)
-Test (Variant 2): Creative Hobbies:
Importance of creative hobbies in helping you to grow transferable skills like grit and collaboration, help you gain fresh perspective, and keep you from burning out (writing)
-Result: How implementing variants 1 and 2 improved my own life
Test 2: Career
-Control: Working myself into a frenzy, setting unrealistic deadlines, feeling like a failure
-Test (Variant 1): Become your own advocate
In your career, no one is going to save you, so these are some of the things I started doing to advocate for myself
-Test (Variant 2): Improve yourself in areas of tech where you have passion and there is need
-Going to accessibility meet-ups, working on learning frontend concepts in a low-pressure setting when work was focused on backend 
-Result: How implementing variants 1 and 2 improved my own life
Test 3: Social
-Control: Having a small group of friends who were my only interactions
-Test (Variant 1): Networking
-I really hate networking but I really tried to lean into it
-Test (Variant 2): The art of asking
-Most people will be willing to help you along if you just ask
-Result: How implementing variants 1 and 2 improved my own life
Conclusion:
-There is no magic, just hard work and a lot of testing until you find what works best for you. 
-If something doesn’t serve you, throw it out, it’s just an A/B test which takes the pressure off of the weight of adulthood",Starting your career with extremely low confidence and facing adulthood feeling unready and like you're not a fully realized person yet is extremely daunting. It can feel doubly really isolating when you're in tech surrounded by very accomplished people who have it all together.  ,"Growing in your career and your life is a journey, there will be wins and there will be setbacks but at the end of the day you'll be moving in a positive directions if you're quick to keep the variants that move you forward and toss the ones that don't work for you.",I want the audience to feel empowered to keep working on themselves and know that your growth will happen at different paces and stages. I want them to have the resources to begin to understand and love the process of becoming the person you hope to someday become.,"There are a number of articles that have come out about tech burn out and about the millennial fixation on monetizing hobbies that I believe would be really valuable to pull from. Additionally, the book, ""The Defining Decade,"" echos a lot of similar sentiments about the importance of gaining social capital through developing yourself in areas of your life beyond work.",I feel I am a good fit because it's a problem I have been fixated on for quite a while and have written a number of personal essays about. This is a difficult and uncertain time for everyone in their lives and I think there is a lot of comfort in having other junior developers to connect with and relate to in order to help you to navigate this overwhelming life change.,,"Flight, hotel",15 minutes,A,Talk,,,,,,,,
Jenna Bellassai,Jenna Bellassai,bellassaije@gmail.com,Jenna Bellassai is a data scientist at Guru in Philadelphia. She holds an undergraduate degree in English. She was introduced to data science when she worked on an interactive storytelling web app as an intern at the USC Institute for Creative Technologies.,https://www.linkedin.com/in/jenna-bellassai-1331bab7/,@JenBellss,female,White,,"Philadelphia, PA","I have a non-traditional background for a data scientist. I do not have any advanced degrees. Entering the industry with a BA in English has been challenging in a number of ways, and I am interested in helping others without traditional qualifications enter the data science field.",Employed as a full-time developer for 1-3 years,,Other,Undergraduate minor in computer science,Career,,T060: Should I Become a Data Scientist?,Code samples,,"1. An overview of what data scientists do. I will summarize how data scientists do data cleaning, data exploration and research, data pipelining, modeling, evaluation, and monitoring. I will also touch on how data science is similar and different from software engineering. I will include a code sample from a project I have worked on demonstrating the use of Python for natural language processing in a Jupyter notebook. The goal of this portion is to ground attendees' understandings of the type of career I'm talking about.

2. I will briefly summarize how I ended up in my current position. I will acknowledge how privilege and luck contributed. I took a course early on in my undergraduate studies on statistical modeling; at the time, I only took the course to fulfill a quantitative course requirement. I also took computer science courses and completed a research internship, though I majored in English and the majority of my studies had nothing to do with data science. The goal of this portion is to emphasize how the qualifications listed on job postings and the actual experience of the person in that posting may differ dramatically, and attendees should be encouraged to explore disciplines that interest them even if they do not hold the traditional qualifications.

3. I will lay out some questions attendees can ask themselves to determine if they should pursue a position in data science. I will list some qualities attendees may have that indicate they may enjoy a career in data science, including domain-specific curiosity, desire for continuous improvement, being okay with not getting things right the first time, and learning how to explain statistical models in a business context. I will also list some advantages and disadvantages of working in data science as opposed to working in software engineering: a disadvantage of data science compared to software engineering in my opinion is that data science is imprecise and every model is an approximation with error, whereas software engineering can be more exact.

4. I will close with a list of free resources attendees can consult if they wish to learn more about careers in data science. This list will include free online tutorials, online forums like Elpha, and competition sites like Kaggle. I will include suggestions for how attendees can prepare for a career in data science independently, like by creating blog posts demonstrating their work on a publicly available dataset.",The problem this talk addresses is that many people who know how to code may not be aware that data science could be a viable career path for them. One cause of this problem is gatekeeping in data science that insists practitioners hold advanced degrees. This problem is important to attendees because they may be interested in data but unsure if they could pursue a career in it due to gatekeeping. ,I would like the audience to recognize that you do not need a traditional education background to pursue a career in data science and that knowing how to code can pave the way for careers in fields other than software engineering. I would also like the audience to leave knowing the freely accessible steps they can take to pursue data science if it is an interest area for them.,I would like the audience to feel empowered to pursue data science opportunities if they are interested in the field even if they do not hold traditional qualifications. ,"https://www.datacamp.com/community/tutorials/data-science-industry-infographic
https://www.analyticsvidhya.com/blog/2015/12/job-roles-data-science-industry-who-what/
https://dev.to/sakim/learn-python-for-data-science------5g29
https://www.kaggle.com/
https://elpha.com/
https://widusa.com/","I believe I'm the right person to give this talk because my pathway to data science is so strange, I often have to justify what I did to get here. I was never interested in computer science as a child, and I studied English in college. I would like to give this talk so that people who are in the position I was two years ago (no professional experience, no advanced degree, no undergraduate CS degree) recognize that they can pursue data science.",,,15 minutes,A,Talk,,,,,,,,
Sarah Elizabeth Arndt,Sarah Elizabeth Arndt,SElizabethArndt@gmail.com,"I am a second generation technologist working in central Texas building Point-of-Sale Systems for over twenty years.  My previous roles as a Quality Assurance Analyst, Business Analyst, Software Developer, Software Architect and Team Manager give me a broad perspective on what it takes to bring a product from idea to usage in the real world.",https://www.linkedin.com/in/elizabeth-arndt-a32b8431/,@SEArndt,Female,White,,"Pflugerville, Texas","I have spent over twenty years as a women in the technical world.  While I started by taking the traditional college route, my career has exposed me to the many diverse roles it takes to build a project.  This experience gives me a broad view of not only my job, but the technology industry as a whole.  I have worked creating and maintaining Point-of-Sale systems that are used daily in stores nationwide .  With  the technical sector frequently changing, it is important to remember  some of the systems built  today need to last for years and even decades into the future.  ",Employed as a full-time developer for over 3 years,,CS degree,,Career,,T061: Other Duties as Deemed Necessary - The Other Part of Development,Other,Real stories from an over twenty year career.,"Software engineers spend their careers creating systems that enable other industries to more effectively do their jobs.  This places us in a unique position of needing skills beyond  our own industry in order to succeed.  Understanding three, often unspecified, job requirements can be just as important as staying up to date on the latest coding languages
1)	Learn the industry your software needs to serve.
a)	Using the traditional path, I earned a Bachelor of Arts degree with a major of Computer Information Systems  However, working as a software engineer, I have earned a minor in the retail industry.  
b)	In today's world a lot of the career opportunities are creating software solutions for other industries.  These clients come to us to solve both common and unique problems through the prism of their industry.  In order to build useful solutions for these industries, we need to understand their business processes in order to enhance them.  
c)	As you move through your career, an important fact to keep in mind is not just what type of coding you want to do, but which industry problems you are interested in solving.
2)	English is the hardest coding language you will ever learn.  
a)	There are currently about 6,500 languages spoken around the world.  Even when everyone is speaking the same native language, differences in dialects, culture, and industry terms can greatly impact understanding.  
b)	Cross-National and International teams impact require you to be aware of different forms of language usage.  Over time teams build their own language internally that needs to be taught to new team members.  Also, non-native speakers bring their own cultural interpretation to the concepts behind the words.
c)	The clients you work with do not 'speak' technology.  The simple sentence of ""What features do you want in the new system"" can be interpreted as ""What are all the features you want in the new system"" or ""What are the new features you want in the new system"" with devastating impacts to the success of a project. 
3)	Solving Problems is not just limited to your code.
a)	Day one you are great person to be a game changer because you can see things from a fresh perspective.  Ask why things are the way they are and challenge the answers.  You don't need to assume the existing method is wrong, but you need to understand why it might be right for this team.  This both builds up your knowledge and may bring to light things that are really holding the team back.  
b)	Share what you have learned.  Build an institutional knowledge legacy.  Find a way to build a knowledge database/wiki that spreads the wealth of what you have learned so everyone doesn't have to re-invent the solution every day, but can move on to solve new problems.
c)	Ask how can what you do today, can continue without you.  While we never start a job planning to leave, we will all eventually move on.  So from day one, make sure you make the next person's first day easier than yours.",Software engineering is more than just coding statements.  We need to start preparing new developers to be aware of the other parts of the job.,Building a successful career is about more than writing quality code.  You must address the human interactions of the systems you build.,That the career of software engineering involves more than just a series of coding languages.,"5 Industries Making Tech A Priority by Frederic Kerrest (https://www.inc.com/frederic-kerrest/5-industries-making-tech-a-priority.html).
Difference Between Language and Communication by Surbhi S. (https://keydifferences.com/difference-between-language-and-communication.html)","I have spent my entire career learning creating, enhancing, and maintaining a system that has to live in the real world.  My formal training for this career mainly involved coding.  However, my experience and the mentoring I received have taught me that coding is the easy part.  It is the tasks they don't train you for in school that separate the good coders from the great developers.",,None beyond the conference ticket price.,15 minutes,A,Talk,,,,,,,,
Pranjal Vyas,Pranjal Vyas,vyaspranjal33@gmail.com,"Undergrad student of Computer applications/Psychology
Open source Contributor",https://www.linkedin.com/in/vyaspranjal33/,@vyaspranjal33,male,Asian / Pacific Islander,,"India ,Gujarat ","i am Open source Contributor , Cyber security Evangelist 

managing Thecyberhex Foundation Which work towards supporting newbies and citizens to Updated in Cyber security",Just started learning to code,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Art/Creative Coding,,T062: how to Learn to code ,None,,"What is Coding 

Why coding should be part of routine life

Breaking problems in to stsatements
psuedoing Problem statements
writing code from psuedo code","my talk address problem of Learning programming or how to code

this talk will help attendees to approach a better way in journey of Learn to code",audience can take a new way of Learning coding ,audience should be excited to learn to code,i'll be using article from https://dev.to ,i am passionate about Teaching on Life Management and incorporating coding in day to day life ,,I would like to cover my travel and accommodation(s) Expenses,15 minutes,C,Talk,,,,,,,,
Keisha S Perkins,Keisha S Perkins,kperk14@gmail.com,"I'm a self-taught freelance designer and developer from Baton Rouge, Louisiana. I love programming as a tool for solving small problems for big results.",,@KeishaSPerkins,"Cisgender, Female",Black or African American,,"Baton Rouge, LA","I fell into coding as a way to do more for my graphic design clients. I'm completely self-taught in regard to programming. My day job is as a library technician in Baton Rouge, but I have been freelancing as a graphic designer and web developer on the side for a few years now.

I teach coding to local middle and high school students on the weekends, and volunteer with some local non-profits to help introduce coding to the youth in my area. I'm very passionate about equipping others with the tools to solve their everyday problems, and code is just one tool for doing that.

My focus is always to introduce people to the tools they didn't know they had and the skills they didn't know they could learn. I have a heart for showing young people of color how technology can give them not only financial resources, but a means of taking control of their professional lives in a way that is often not possible.",Other,"I've been freelancing off and on for the past few years. While coding isn't all I do professionally, much of my work includes it.","""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,My Coding Journey,,T063: Programming Without Coding: Using Automation Apps to Learn Programmatic Thinking,Other,I will include demos of apps I use to automate my various workflows,"1. Programming != Coding 
  -- Coding is just a means by which we program, just as English, Japanese, and ASL are just means of communication.
  -- Programmatic thinking can be acquired through many avenues and practices, including something as non-threating as an automation app
  -- Many of us are already programming in our daily lives without even knowing it
2. Automation Apps as Programming Platforms 
  -- This section is just a couple very quick demos of how these apps work with practical examples of programming everyday tasks.
    i. Tasker (Android)
    ii. Automate (Android)
    iii. IFTTT (Cross-Platform)
    iv.	 Shortcuts (iOS)
    v.	Automator and Task Scheduler (macOS and Windows, respectively)
3. Resources relating to automation and relating to each app","My talk shows that programming is not just big blocks of code, but a way of thinking and problem-solving. Many of us feel daunted by the prospect of coding because we think of some ""hacker"" in a movie with fingers flying across a keyboard. I think many would like a new view of programming that shows it's not always highlighted text on screen, and even that we may already be doing it. ",I want the audience to start exploring ways that they can incorporate programming into their everyday lives to solve the little problems and pain points they face. Getting into a problem-solving mindset is greatly helpful in most people's lives and I want them to start looking at tech skill-building in a new way.,"I want the audience to leave inspired to go automate some stuff and feel less pressure to have a rigid definition of coding. I want them to realize that the way complete a task doesn't have to fit into any one mold.

I didn't realize until years into building websites that I already had been using apps like the ones I'll touch on in my talk to program in everyday life. I'd been programming long before I ever thought of coding anything, and I want the audience think about how skills necessary for coding can be built outside of an IDE or command line.",I will incorporate a few stats on these apps.,"This talk is one that I'm always giving. In casual conversation, I find myself saying ""You could use this tool to make that happen automatically"" or ""That sounds like something a quick script could fix"" when people tell me about a small pain point. I love speaking and have been doing it since I was a kid. I also love to teach. So giving a talk to teach people about a new thing is right up my alley.",It's gonna be great!,"I am a freelancer funding my own trip. I do not need childcare, but any help the conference could provide for my flight and hotel would be appreciated.",15 minutes,C,Talk,,,,,,,,
Gurtej Singh,Gurtej Singh,gurtejsinghmrt8@gmail.com,"Passionate Learner with high ambition
Active Learner | Technical Speaker |Python Programmer | Digital Marketing @GOOGLE | R&D work | IT-Trainer",https://www.linkedin.com/in/gurtej-singh-cse/,@Gurtej_Singh08,Male,Prefer not to disclose,,India,"★Passionate Learner with high ambition...
I’m truly passionate about my work and always eager to connect with other professionals.Innovative, forward-thinking executive offering over 1 years of success in various leadership roles in the areas of Computer Science consulting.
Analytical, results-driven Technical Person eager to utilize skills and knowledge gaining through education and experience to assist organizations in developing and executing Technically and marketing strategies to drive business growth. Exceptional communication skills and strong ability to lead teams through demanding situations. Advanced technical knowledge of Computer Science.
★Technical Sessions // Technical Speaker (INDIA)
1) IT-Trainer at R.D Public School
2) Technexttalk Speaker at GMA City Public School
3) Technical Speaker of Hour of Code 2018 at Army Public School
★Competitions/Hackathon
1) Got Selected for World Biggest Software and Hardware Completion Smart India 
    Hackathon 2019 Grand Finale.
2)Rank=1 at Code War Gamathon-(Programming Hackathon 2018)-LPU 
3) Online Hackathon Festivals (Dare2Compete)-2018
    ||18 Different Competitive Code Challenges||
    Max. Rank 5 against NIT Durgapur
4) Secured Rank 162 in Drupal (99.60 Percentile) -TechGig.com
5) TECHKRITI 2018 (Boeing National Aeromodelling Festival)-IIT Kanpur

So i have both the skills ( Technical Speaking + Coding Experience (Participated and won many Technical Events),apart from this i am 2nd year Undergraduate Student and  I am  sure i can motivate and inspire more audience there.


Portfolio Link: http://gurtejsingh.strikingly.com/

__ GURTEJ SINGH__
http://happenings.lpu.in/journey-with-computer-science-engineering/",Curious about tech and coding,,"CS degree,Online learning platforms",,My Coding Journey,,T064: TECHO_CODE_19,"Code samples,Demo of working code",,"Session will be starting with my own Journey with Computer Science (Coding) such that i can Motivate the audience and draw their attention towards Coding and moreover  i will show them How Coding Can Change the World? including Demonstration of Sample Code and Explaining them real Problem. 
Talk will End with Some Motivational Quotes and Personally Directed them on right Path and Big Thanks to Codeland 2019 CFP - Talk.","My Personal Journey with Computer Science (Coding).
How Coding Can Change the World?
How is programming used in everyday life?
Attendees will get excited to listen because i will be dealing with all real life Problem as well as my experience which will draw their attention towards my talk and it will be very Productive talk.","Things i want from audience are-
1)Audience should also inspired and motivate others (Children's, Friends ,relative 
   etc).
2)They should start exploring new things and implement them.
3)They should give guidance and proper path of lightened to those who really 
    want to do something new or who think out of the box.","They all will feel Energetic and vision will be clear.
After that Coding will be part of there Life -""No more Fear from Coding now ""","1) My Personal Story (http://happenings.lpu.in/journey-with-computer-science-engineering/)
2) World wide current static of Technology.
3) Normal Talk about Future with Technology(Focusing on Coding and 
    Programming)
4) Personal Experience of various Hackathons (Product based and Competitive 
    Coding) and guiding them how to start with Hackathons 
5) we are living in 21st Century and money factor is somewhere important for all of 
    us-Therefore if we are good at Computer Science Domain (Coding and other 
    Technical Stuff) it can lead to high paid job not only but a respectful life in world 
    and great exposure to work with Top MNC like - Google,Facebook ,Microsoft 
    etc.

Portfolio Link: http://gurtejsingh.strikingly.com/","Past Experience
#Technical Sessions // Technical Speaker (INDIA)
1) IT-Trainer at R.D Public School
2) Technexttalk Speaker at GMA City Public School
3) Technical Speaker of Hour of Code 2018 at Army Public School
# Head of Public Relation at RTRA (University Club) having more than 1.5 year of 
   Experience.
#Five Factors/Quality which make my Strong relationship with Audience
1. Confidence
2. Passion
3. Introspection and Self Awareness
4. Being Yourself
5. Engagement with your Audience",,"As I am a undergraduate student, I can't afford to pay for Travelling right now ,i wish Codeland will take care for flight, hotel, daycare, etc.",15 minutes,C,Talk,,,,,,,,
Rocky Fine,Rocky Fine,rockycodes@protonmail.com,"I’m a junior engineer based in NYC with a background in education and social work. I graduated from The Grace Hopper Program at Fullstack Academy last May, worked for them as a teaching fellow for three months, then got hired at Etsy and have been here for about six months now!",https://www.linkedin.com/in/rachelefine/,https://twitter.com/rockycodes,female,White,,Brooklyn,"I'm a queer woman born and raised by a single mom in the Mission District of San Francisco. I have a bachelors degree in Theater (with a Math minor), a Masters of Social Work from Hunter, and ten years of experience in Social Work and Education. Before learning to code, I was the Program and Academic Director for a youth development program in Oakland. I'm passionate about equity and am especially interested in the ways in which technology can be reimagined to go beyond good intentions and empower new groups of people.",Employed as a full-time developer for less than a year,,In-person bootcamp,,My Coding Journey,,T065: I Just Can't Git Enough,Code samples,,"This talk will cover some basic and incredibly useful git commands and techniques I've learned since working at Etsy -- things that 1) would have been helpful to learn during my bootcamp and 2) have made me much more confident in my ability to navigate git. 

I'll start by sharing a minute about my own coding journey: how during my first week at Etsy, I accidentally tagged half of engineering on a code review for a practice code lab I was doing. Git still feels pretty scary and opaque to me but I've been working to demystify it for myself. I was inspired me to give this talk so I could share my learnings, but also because teaching is the best way to solidify your own knowledge!

I will specifically cover getting comfy with:
* git status
* git diff
* rebasing
* git log
* git show
* git commit --amend

If there's time, I will also talk about setting up aliases in git and my particular git flow at Etsy.

I'll end by encouraging folks to learn more on ohshitgit.com and develop their own git presentations!","Git is intimidating, especially for new developers. My talk addresses both the feelings of inadequacy that git often triggers, and also provides some concrete tips for how to get to know git better.",I would like for the audience to come away with at least one git tip they can easily employ in the future.,Empowered!,"I'm using various Git resources to research - OhShitGit.com, documentation on git-scm.com, and other git explanations I find around the internet.","I'm the right person to give this talk exactly because of my lack of expertise. As a new developer and a career changer, I can speak to practical advice that has been helpful for me in beginning my journey to master git and will be helpful to others who are just beginning to git.",Thanks for providing the opportunity for new developers to give talks!,None.,5 minutes (Lightning Talk),C,Talk,,,,,,,,
Oluwashola Akanni,Oluwashola Akanni,sholaakanni25@gmail.com,"Electrical electronics Engineer, work in IT, programmer. ",,,Male,Black or African American,,Nigeria,"Lower class family
Recent graduate of engineering
I love gaming and writing",Currently looking for my first full-time developer role,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,My Coding Journey,,T066: Overcoming the first hurdles in your coding career,"Demo of working code,Code samples,Live coding",,"I'm aiming to teach the basics of overcoming the first difficulties in learning to code, breaking the road blocks",Most young developers soon become frustrated with the seeming lack of progress as they seem unable to break past certain barriers in starting to learn coding. I plan to break these down. ,A new way of learning to go around the hurdles of learning to code,Resolved to overcome these hurdles,Interviews,Because I had to overcome these issues over the years and now know things I wish I knew earlier,,Flight and hotel... ,15 minutes,C,Talk,,,,,,,,
BJ Burns,BJ Burns,burnsbj23@gmail.com,"BJ Burns is a Full Stack .Net Developer, Certified SCRUM Developer, Certified SCRUM Master, Meetup Organizer, and 1/2 of the Complete Developer Podcast. BJ first became interested in computers with his first experience in fourth grade using DOS prompt to play Oregon Trail in the computer lab at my elementary school. He began programming in high school when he took a class on QBasic. For him coding was a hobby, something he did for fun until a few years ago when he left medicine and decided to pursue a career as a developer.",https://www.linkedin.com/in/bj-burns/,@bowtiebeej,male,White,,Tennessee,"I grew up in a small town in middle Tennessee the son of a preacher. I have a bachelor's degree in psychology, have worked in psychiatric hospitals as well as in the community. I attended medical school for several years before going through several consecutive emotional traumas causing me to realize my dream of being a doctor was more about the prestige and less about doing the work itself. It was during this darkest time in my life that I came back to coding and rediscovered a love for it I'd had in high school. It was an emotional journey that I've spoken about some on my podcast. I have a small amount of speaking experience. Most recently I've spoken at CodeMash. I've also spoken at Music City Tech, Barcamp Nashville, and DevSpace. In May I'll be speaking at WeRockIt Conf.",Employed as a full-time developer for 1-3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Other",Mentor and apprenticeship,My Coding Journey,,T067: Med to Dev: My Journey Through Depression,Other,This is a story of encouragement with some audience participation and discussion.,"Would you be devastated if your vehicle was stolen? You go to bed at night and it's still there but in the morning your only source of transport is just missing. Many people would consider that to be the worst day. This happened to me a few years ago and it barely phased me. I'd been through much worse but was back on the upswing.

I. My Background
  A. Growing up as a preacher's kid.
  B. Learning computers in high school.
  C. Discovering medicine and the college years.
II. Love and Loss - The med school years.
  A. Acceptance and getting started in school.
  B. Love and marriage.
  C. Illness, surgery, and poor grades.
  D. My father's arrest.
III. Divorce and Suicidal Thoughts
  A. Divorce papers arrived just days before board exams.
  B. Deep despair and emotional pain.
  C. Checking into a psychiatric hospital.
IV. The World Keeps Turning
  A. No longer in school, hyper focused on my problems.
  B. Coding games and lessons were a place to put my focus.
  C. Apprenticeship with a close friend.
  D. Interviewing and finding my first job as a developer.
V. Encouraging Others On the Journey to Development.
  A. Telling my story via podcasting.
  B. Involvement with Code Newbie the Developer Launchpad.
  C. Tips for encouraging new developers and those struggling to learn.","This is my personal journey about how becoming a coder helped save my life. It addresses depression and despair, feelings that many of us get especially when learning to code. This talk is to set up an understanding of that feeling then show how to survive it and encourage others who may be facing it.",Inspiration in their own journey and some ideas on how to help others along the path as well. ,Encouraged and Inspired,During the talk I plan to list out the different resources that helped me from tutorials to blog posts. As part of writing the full presentation I plan to review psychiatric journals and blogs on depression and encouragement. I will also be interviewing a psychologist I know about his book and strategy Potential Not Pathology.,Since this is my personal journey it would be awkward for anyone else to give this talk. As far as the psychological components go I have a BS in psychology and a few years of graduate school as well as years working in the field.,This will be a difficult talk to give as it will dredge up old memories both good and bad. It's a powerful story that I've been encouraged by many people to share publicly.,While I'm able to treat conferences as training time my work does not pay for my travel or accommodations. I would appreciate help with these costs and am willing to share a room with another speaker if necessary.,15 minutes,C,Talk,,,,,,,,
Jeff Lunt,Jeff Lunt,jefflunt@gmail.com,Senior Software Engineer and Rubyist.,https://www.linkedin.com/in/jefflunt,@normalocity,male,White,,Chicago,"Demographically I'm decidedly not the diversity you may be looking for, and if my talk is rejected for no other reason than because you don't need more white dudes talking at your conference, that's 100% fine. :)

The thing that makes me a little different is that while I had some college CS background, I'm primarily self-taught/learned on the job, which is very much a bootcamp kind of background, but before coding bootcamps were a thing. Before becoming a programmer professionally I worked in Enterprise IT for a decade, which gives me an ops and infrastructure perspective that many developers lack. I've also been a manger and ran a small company, yet decided that engineering really was my favorite thing and went back to it. I also dabble in photography.",Employed as a full-time developer for over 3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Gaming,,"T068: Porting an Apple IIe game to a modern language, and what it taught me about early programming environments","Other,Code samples",Comparison between current languages and Applesoft BASIC,"* The Apple IIe, its memory layout
* Applesoft BASIC
  * line-number based programming
  * how you declared variables, and how they were stored
  * memory addressing, and PEEK and POKE
* The game I ported from the Apple IIe
  * Couple sentences about what the game is about
  * How much less featured the port is
  * How much more memory it takes up compared to the original
* Why this comparison? What does it teach us?
  * Different ways of thinking
  * How much you can do with simpler tools (not that you should jump back to writing code on the Apple IIe, but this is good for perspective)
","It's a comparative talk that I've given within my own company, and people found it very interesting and entertaining. This talk definitely doesn't solve a problem.","This talk does not advocate for ditching our modern tools, but it does serve as a reminder of how many things we've layered onto programming, and perhaps get people thinking about how they might simplify things.","I'd primarily like to entertain. If that's a disqualification, I understand.","* Documentation on the Apple IIe computing architecture
* Programming in Applesoft BASIC","I originally found my love of programming as a child while playing games on the Apple IIe. This talk comes with a ton of personal enthusiasm for simple systems, without waxing nostalgic for them (I would never go back to the Apple IIe as a programming environment).",I think that's all! Thanks for taking the time to consider this talk!,"I'm happy to pay for my plane ticket to NYC, and my lodging. Chicago -> NYC is fairly inexpensive.",15 minutes,C,Talk,,,,,,,,
Brittney Ball,Brittney Ball,brittney.ball07@gmail.com,"Through hard work and determination, I’ve proven that your past doesn’t define your future. Six years ago, I was a single mom living in a shelter. Now, I’m a self-taught software engineer, public speaker, event organizer, and mentor.",https://www.linkedin.com/in/brittney-ball/,@Brii_toe_knee,Female,Black or African American,,Charlotte NC,I am a self taught single mom who currently works as a Software Engineer.,Employed as a full-time developer for 1-3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,My Coding Journey,,T069: How Tech Changed My Life,Other,Slide show,"How I started coding, obstacles I faced, where I am now in my career.",Diversity and Inclusion ,Don't Ignore hidden talent,"My goal is to pay it forward and help people see that you don’t have to go the traditional route to be successful. As long as you want it, you can achieve it!
",Reports,This talk will be about my personal experience.,,"Flight, hotel",5 minutes (Lightning Talk),C,Talk,,,,,,,,
Luke DeWitt,Luke DeWitt,luke.dewitt@redspace.com,"With over a decade of experience, Luke is no stranger to the ins and outs of the web. He has experience across a number of different web technologies on both the front and back end. At REDspace, Luke oversees the company’s web department. Luke has worked on and led a number of prominent sites and projects for a large list of international clients, including Turner, MTV, Sony Pictures, IBM, and Nickelodeon.",https://www.linkedin.com/in/lukedewitt/,@whatadewitt,male,White,,"Halifax, Nova Scotia","As a seasoned Developer and a leader in the industry, Luke travels to speak at international conferences and inspire younger developers how to push technologies for optimal web performance with the experience he’s gathered throughout his successful career.","Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,CS degree,,Career,,T070: We All Live in a Yellow (Serverless) Submarine,"Demo of working code,Other",Will also provide a Github link,"The term “serverless” is finding its way into everyday development, but is it more than just a buzzword? In this talk, you’ll dive into the idea of serverless, and how it can be useful to modern day web developers. You’ll also see real examples of where REDspace, an award-winning software company building the future of television and entertainment, has managed to be successful with it. This talk will help shine a light on where the future our industry is headed.","The web today is growing and evolving. There’s so much for developers to know. This talk is designed for anyone with basic JavaScript knowledge who is interested in the severless revolution. It will help the audience understand what the serverless web is all about, and how it can be useful.","Audience members will get a quick history of “serverless” as well as investigate the potential use cases.

It’ll dive into an overview of what is serverless and the benefits of going serverless, as well as discuss the potential pitfalls of this approach. We’ll also take a look at “what’s next” as the serverless ecosystem grows.","Ready to discover the possibilities that come with severless? This talk will help better prepare developers to understand the options of severless as it becomes more and more important—both the good and the bad. In this talk, you’ll get a better understanding of how severless can help you progress forward and continue to focus on front end without needing to learn all of the ins and outs.","A lot of my research comes from experience as well as the broader development community (I frequent Twitter, GitHub, blogs, podcasts, etc.). I'm also lucky to work with developers who are consulting on severless for some of the world's biggest brands and have learned a lot from them. ",I love sharing my excitement about our industry with developers—both new and old—in an effort to get them excited about the next phase of their career. Expect a lot of passion as well as some bad jokes and as many baseball references as I can cram in.,,Anything helps.,15 minutes,C,Talk,,,,,,,,
Katy Farmer,Katy Farmer,katy@influxdata.com,"Katy lives in Oakland, CA, where she works as a Developer Advocate. She worked as an editor for seven years before transitioning to tech. Talk to her about videogames, switching careers, and all things sugar.",https://www.linkedin.com/in/katyfarmer/,thekatertot,female,White,,"San Francisco, CA","I changed careers to tech two years ago. I slept on the floor until I was twelve, and I left home as quickly as I could. I spent most of my life working various jobs to pay my bills, knowing I'd never pay off my student loans. This past year, I paid off my student loans, spoke at my first tech conference, gave my first keynote, and wrote two javascript videogames. I feel really proud of how far I've come.",Employed as a full-time developer for 1-3 years,,In-person bootcamp,,Gaming,,T071: Game On,"Demo of working code,Code samples",,"I can trace my love of videogames back to a GameBoy original. My whole family shared one, and every chance I had, I played. Playing games was one of the first forms of self-care I ever learned, so it was no surprise that as soon as I learned to code, I wanted to make games.

In this talk, I’ll walk through the foundation of making games. The examples will be in Javascript, but you won’t need to know JavaScript to understand the code snippets. We’ll discuss how iterative coding works perfectly for building games, as well as how the narrative (or lack thereof) can help us express ourselves as developers and artists.

Building games can be complex, but it doesn’t have to complicated. It can be challenging without being impossible. In the face of difficult problems, we’re the ones who say: game on.","This talk brings down the barrier to entry on building games. Games are such a great way to express ourselves and invite other people into our experience, and more people should build them so that we have a broader swath of games to choose from.","I want people to build their own games, and know that they don't need any particular expertise to get started. ","I want the audience to feel capable of starting their own game project, and I want them to feel optimistic about the outcome.","I've been building web games for the past year and a half, so I plan to use anecdotal evidence as my primary advice. I will also be referencing other developers' tutorials, as well as Game Programming Patterns by Robert Nystrom.","I turned to making games not because I thought I could, but because I needed them for my mental health. I barely knew how to code the first time I attempted to build a game, and I definitely couldn't make the art. But I persisted past the challenges to make something worthwhile and that I was proud of. Now, I make games as part of my job, where I get to show off my company's products by playing games.",,,15 minutes,C,Talk,,,,,,,,
Evelyn Lucas,Evelyn Lucas,evelynlucas@pursuit.org,"I'm a career-changer who is currently a fellow at Pursuit, studying to become an Android developer. I'm a latina from Queens who finally sees a successful future ahead!",https://www.linkedin.com/in/evelyn-lucas-52839b174/,https://twitter.com/edotlucas,Female,Hispanic or Latino,,NYC,"I'm a first-time speaker and would love this opportunity to engage with the coding community. I don't see many people like myself (older at 38, latina and female) in the tech industry and I want to change that.",Currently focused on developing my coding skills,,"In-person bootcamp,Online learning platforms,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,My Coding Journey,,"T072: Hey Ho, Let's Code! How Pursuit changed the life of a latina from Queens ",None,,"This talk is a lightning talk on my coding journey. From how I never thought I'd have anything but a dead-end job for the rest of my life, to the point where I took a chance to apply to the Pursuit training program, got in and now am currently learning how to make Android mobile apps. ","The problem my talk addresses is self-doubt, especially for latinas and older people who thought their time to try something new has passed since I thought the tech world seems to be centered around young white men.",I want people to see that coding can change lives. Especially to those who always thought they had some kind of potential in them but that it was never realized.,I want them to feel inspired and hopefully be more welcoming of diversity in tech!,I do have a few statistics from a report that shows that latinas are one of the smallest demographics in tech right now. Since the lightning talk is only 5 minutes long I'm not sure I'll have enough time to include statistics since my story is more personal.,I am so enthusiastic about coding for people who have never coded before. I am passionate about diversity and about women taking stronger leadership roles. I want to add my voice into the mix!,I'm so happy that a conference like this exists for people new to tech and I love to read the codenewbie twitter! Thanks for all that you do.,None,5 minutes (Lightning Talk),C,Talk,,,,,,,,
Jo-Wayne Josephs,Jo-Wayne Josephs,jowayne.josephs@gmail.com,"My name is Jo, I am a junior self-taught developer with an academic background in the liberal arts. I have been at my first developer job for less than  a year.",https://www.linkedin.com/in/jowaynejosephs/,@jojosephs1992,female,Black or African American,,"Boise, Idaho","I am an immigrant from Jamaica, who is also an asylee. I came to the US for college, then applied for asylum after graduating based on my status of being an LGBT woman from a very homophobic country. I was recently granted asylum, and am currently almost one year into my first web development job. ",Employed as a full-time developer for less than a year,,"In-person bootcamp,Online learning platforms,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,My Coding Journey,,T073: My Winding Journey Into Tech ,Other,Photos,"Beginning-Exposure to Code (2014)
-Spent a semester in DC during jnr year working for LGBT non profits in the area.
-Saw a fellow volunteer change some very basic HTML and thought to myself ""Why can't I do that?""
-Started learning on codecademy

Graduation(2015)
-Too late to change major to Comp Sci (plus, I liked my major, and did not like Math)
-Graduated, waited months for OPT (Optional Practical Training-for International students)
-Finally able to work-got job at a Call Center

Middle (2016)
-OPT ran out, applied for Asylum.
-With asylum app pending, could not work, drive etc.
-Continued learning to code, met fellow codenewbies online.

Received EAD in Summer- Able to Work Again (2017)
-Started Support position with Google Fiber
-Started attending an in person bootcamp with the help of a partial scholarship from Lesbians Who tech

End (2018)
-Applied for a couple jobs
-Prepared assiduously for job interview(researched the company, had many questions to ask them as well-this was important)
-Got position(Lead Tech Support Administrator)-responsible for web edits of customer sites",Problem: Learning to code as immigrant with limited resources. This talk highlights how to leverage the resources you do have as a minority person in tech.,Learning to code can change your life. ,"Uplifted, motivated.",Stackoverflow-yearly surveys,"I believe I'm the right person to give this talk as my story is pretty unique. When we talk about minority people in tech (POC, LGBT, Womxn) immigrants are usually left out of this conversation. I believe it is important for for immigrants to be included in these conversations and outreach efforts, as the immigrant community (especially immigrants of color) are one of the most vulnerable groups in the US.  I strongly believe that if more immigrants learn to code, we can create more tools and web content dedicated to navigating the very complex and ever changing US immigration system. ",Thanks for reviewing my application!,I would need flight+hotel. ,15 minutes,C,Talk,,,,,,,,
Omayeli Arenyeka,Omayeli Arenyeka,aomayeli@gmail.com,"Omayeli is an artist and technologist from Nigeria currently based in San Francisco. She is currently working at LinkedIn as a Software Engineer. Her work outside of work aims to use writing, data, code and satire as tools to foster disillusionment with our current realities.",https://www.linkedin.com/in/oarenyeka/,@Yellzheard,female,Black or African American,,San Francisco,"I left the CS program at my school in my freshman year to transfer to the ""make your own major"" school where I created a major around Art and Code. I started out working mostly with creative coding tools like p5.js and Processing, then transitioned to Front-end development and then after starting full-time as a Front-end developer, returned to using those tools (and whatever else works for the projects) to create personal projects that explore satire or data. I've been writing code professionally for over a year and including school, for about 4 years. Front-end development is the only field I would consider myself intermediate.",Employed as a full-time developer for 1-3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",CS degree",,Other,social impact and data analysis,T074: Building a Gendered Dictionary,"Code samples,Demo of working code",,"Beginning
The problem: No dataset of gendered words. 
What exactly is a gendered word? (lady / gentleman, prince / princess, ballerina, prince charming, actor)

Middle
------------------------------------------
Where and how to get data:
- APIs
Finding APIs and making API calls in Python.
- Static Datasets 
Using JSON, CSV, Panda to read and write data.
- Web Scraping.
Basic DOM structure
Using urllib.request and BeautifulSoup to read contents of a page.

Filtering data:
Filtering list of words to only be gendered words using regular expressions, part-of-speech tagging and web scraping. 


Getting the semantic similarity of words using word2vec and Gensim.
Finding word equivalents (wife -> husband) using Gensim and word2vec and regular expressions.

------------------------------------------

End
- Exploring the gendered dataset
- Current issues and future work","My talk addresses two problems:

1. The problem of unavailable data: You have a question or a hypotheses but there isn't any data to back it up. This problem is important because we all have questions and for some of those questions there is no data to help answer it, but that doesn't mean our questions / hypotheses should be abandoned.

2. The ""problem"" of gendered language. When you think of the word “superhero” what do you imagine? For a lot of people, they would imagine a man. Language reflects and reinforces social norms. The issue of gendered language comes up everywhere from words used in job listings (ninja, superhero) to translations with Google translate to using ""guys"" in the slack channel. However, there’s no dataset of gendered words and no way to explore what language says about women, men and those who do not fit in those binaries.It's a problem that's important because everyone uses language in some way or form and a lot of us grew up using gendered language and are only now (maybe) beginning to think about it more critically.","I want them to use the data gathering and analysis techniques I presented to create data to answer the questions that they have about the world. Secondly, I want them to see a paywall or an API limit and think (ethically) ""can I get this data programmatically?"" Lastly, I want them to think more about their everyday gendered language.",I want them to feel like they can create datasets of their own to answer questions they have. I want them to be able to see unavailable data as an opportunity and not an end point.,"Resources about gender bias in data, it's effects and what's been done to address it: 
- https://qz.com/1141122/google-translates-gender-bias-pairs-he-with-hardworking-and-she-with-lazy-and-other-examples/
- https://textio.ai/gendered-language-in-your-job-post-predicts-the-gender-of-the-person-youll-hire-cd150452407d
- https://arxiv.org/abs/1607.06520
- https://github.com/uclanlp/gn_glove
- http://bionlp-www.utu.fi/wv_demo/","I started thinking about gendered language in 2016 and creating data to be able to back up the idea that language can be sexist. From an empty array, using the process I will describe in the talk, I created the dataset of about 2500 gendered words. I worked on gathering and filtering the data for about 4 months during a sabbatical, changing directions multiple times when met with a paywall or an API limit. I'm really passionate about the idea.

Also, for work, I do web development so the world of Python was new to me. The process of getting the data with Python and working with machine learning tools was new for me at the time so I would be able to approach it from the perspective of a newbie.",It describes the process of getting the data to create this: https://genderedproject.org,Flight (if my company decides not to pay),15 minutes,C,Talk,,,,,,,,
Jenny Tong,Jenny Tong,j.tong89@gmail.com,"I am a Computer Science and Psychology student and software engineer apprentice at a financial technology company. Before I was an apprentice, I worked as an SDET (Software Developer in Test) for a year and a Software Test Engineer for 2 years.",https://www.linkedin.com/in/jenny-tong-68b40194/,sylphiae_moonfl,female,Asian / Pacific Islander,,San Francisco,I am an Asian American woman who is undocumented and I also have bipolar. I think I would bring a unique perspective as an immigrant DREAMER who is invisible in terms of both status and mental illness. No one can tell from looking at me that I am out of status or that I have any mental illness. I do believe that my stressful and uncertain experience as an undocumented immigrant contributed to my bipolar episodes.,Employed as a full-time developer for 1-3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms,Other",Some CS classes,Career,,T075: Surviving an Apprenticeship: Tips On Getting Through the Journey,Code samples,,"I.) What is an Apprenticeship
    A.) Historical roots of apprenticeships: guilds and contrast with modern day software apprenticeships
    B.) Who offers apprenticeships
    C.) The structure of my particular apprenticeship at my company
How I got the apprenticeship
6 months long, assigned a mentor, assignments during apprenticeship, apprentice project, 3 presentations
II.) Tips for Survival
    A.) Pros of the apprenticeship
Lots of dedicated time with a mentor
Extremely challenging and learning new things all of the time
    B.) Cons of the apprenticeship
Time management was brutal, especially while also taking classes (and moving, and getting married)
Feeling isolated - I am now the only apprentice and feel like I’m on an island
Imposter syndrome
Public speaking anxiety
Depression
    C.) How I dealt with apprenticeship cons
Rely heavily on scheduling and support
Reach out more to support network
Changing cognition
Taking a public speaking class
Sought treatment from mental health professionals

III.) Demonstrate my apprentice project
    A.) What is functional programming, briefly
    B.) Clojure syntax in a nutshell
    C.) Explain what my project is for and show code",My talk demystifies what an apprenticeship is like as well as its advantages and disadvantages. This is particularly relevant to those new to programming because they might be considering apprentice programs or are currently also dealing with the challenges of an apprenticeship. ,"I believe the audience will leave my talk armed with tips and tools to handle an apprenticeship and especially its negatives, which touch on anxiety, time management, imposter syndrome, and depression. My tips are from my own personal experience and will incorporate psychological techniques from CBT (Cognitive behavioral therapy) and DBT (Dialectical behavioral therapy). 

One possible example for handling thoughts involved in imposter syndrome: mindfulness, or staying in the present and not worrying about the future or the past. Observing the train of imposter thoughts rolling by and letting them go by, then snapping back to the present and going on with what you were doing.",Encouraged and inspired.,"Since I will be drawing upon knowledge in the psychological realm, I will cite papers and reports regarding CBT and DBT. I will also find quotes or interviews about functional programming so as to best explain it succinctly.","I am a self-taught programmer who is currently in an apprenticeship, so I would be giving this talk from personal experience. I am also a psychology student who has learned therapeutic skills in a partial hospitalization program. I am very passionate about helping other people not have as hard of a time as I have had, and I believe that I bring a unique, empathetic, and compassionate perspective.",I am a first-time speaker.,"As I am currently a student, I am short on funds and would require flight as well as hotel accommodation. Thank you.",15 minutes,C,Talk,,,,,,,,
Alwina Oyewoleturner ,Alwina Oyewoleturner ,aoyewole2586@gmail.com,"Alwina is currently learning to be a web developer at Flatiron School while also working full-time as a Legal Administrative Assistant at a law firm in New York City. She’s worked in the legal industry for over a decade but is really excited about the tech industry now. As a digital nomad, she wants to use tech to help others experience different cultures in an immersive and meaningful way.",www.linkedin.com/in/alwinaoyewoleturner,@msjisola,female,Black or African American,,"Long Island, New York","I’m transitioning from the legal industry into tech. I decided a few years ago that I wanted to do something different while making an impact as my passions are to serve and help those that need assistance. Also, my parents are from Sierra Leone and Nigeria and I was born and raised in NYC. My parents always encouraged me to do my best in my school work while growing up. Even today my father encourages me to chart my own destiny and make things happen. Which is why I continue to persevere through my online program to completion. ",Currently focused on developing my coding skills,,"Online learning platforms,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,My Coding Journey,,T076: Test Driven Development Makes Me A Better Developer,"Live coding,Code samples,Demo of working code",,"Red - Learning to code using Test Driven Development
- How I went from looking at an error like ERROR, WHAT???!!! to Ok, cool I got this, I can figure it out.

Green - How I read errors to get a working solution
-I determine if I’m working with an error provided by the programming language or an error based on a test written for the lab I’m working on

Refactor - How I learned to write tests to make my project better
-I watched a webinar on RSpec by Jesus Castello - https://www.rubyguides.com/
-I read A Gentle Introduction to RSpec & TDD by Paweł Dąbrowski  http://pdabrowski.com/blog/newsletter/
-I also read Effective Testing with RSpec 3: Build Ruby Apps with Confidence by Myron Marston & Ian Dees - http://rspec.info/
-I plan to show how I incorporated best practices from these resources into my Sinatra final project and how I will build my Rails project with RSpec.","How to navigate through errors in your project and write tests so that future bugs don’t keep your project from running smoothly. As I’ve learned and continue to learn, tests allow me to think about how to approach each feature in my project. For example, when we work through code challenges, we read the question, pseudo code a solution and then actually write out the solution. The same process happens when we set up our project with tests: we think about the features we want in our project, we write tests with expectations for the resulting code, and then write the code to pass the tests. ","I want attendees to be able to confidently read and write tests for their program so that they can have clean code, and approach tests like their trusty sidekick, like Black Panther and Shuri.",I want the audience to be enthusiastic about TDD and know it’s not hard to write tests for their program.,"-I watched a webinar on RSpec by Jesus Castello - https://www.rubyguides.com/
-I read A Gentle Introduction to RSpec & TDD by Paweł Dąbrowski  http://pdabrowski.com/blog/newsletter/
-I also read Effective Testing with RSpec 3: Build Ruby Apps with Confidence by Myron Marston & Ian Dees - http://rspec.info/","'- As a newly minted developer, I have a fresh perspective on reading (and writing - work in progress!) tests for my programs and I recognize the immediate impact it has on writing clean, reusable code. This experience comes from learning to code through Flatiron School. As I work through each lab in the program, I have to write code to pass the tests. Every time I see green, it’s a win for me because I understand what the tests are asking and I thought through the errors to write a working solution. 

- Honestly, when I first started to code, I struggled with understanding errors and making my way through tests. Sometimes I question if I even understand what I’m doing and if I should continue learning to code. I’ve gotten better at reading through the errors and feel more confident when I persevere through the labs. ","I like running and ran two marathons (talk about perseverance!) and traveling with my sister to explore the world. I’m passionate about service and giving back where I can. Most recently, I traveled to South Africa to support a mission that works with children impacted and/or orphaned by HIV/AIDS, and hope that my journey through tech can help me to do more to support causes like this.","I live in Valley Stream, NY, which is just outside of Queens. I commute daily to the city for work and the cost is nominal to travel to the conference. My only cost would be my ticket for the conference.",15 minutes,C,Talk,,,,,,,,
Amanda Sopkin,Amanda Sopkin,amsopkin@gmail.com,"Amanda is a Seattle transplant from Denver, Colorado with a great love for coffee and a bit less love for rain. She is a full-stack software engineer for the rentals team at Zillow who attends hackathons as a coach for Major League Hacking in her spare time. She enjoys writing, speaking, and obsessively reading about sharks.",https://www.linkedin.com/in/amandasopkin/,,Female,White,,Seattle,"I have been working as a software engineer for a few years. I have worked at a variety of companies, including doing government work before becoming a software engineer for Zillow. I have spoken on engineering subjects a few times before at conferences of varying sizes. I also work as a coach for Major League Hacking, attending hackathons at schools across the country to help students make the most of their experiences. My experience as a coach has taught me a lot about different types of people and the different things they bring to the table as developers. My experience writing, speaking, and doing my job as an engineer has given me unique perspectives I try to share through my writing and speaking.  This talk is based on my personal experiences and research in these capacities.",Employed as a full-time developer for 1-3 years,,CS degree,,Career,,T077: Broken Pipeline: How Bias in Interviews Hurts Tech Companies ,Code samples,"For code samples, specifically code samples from interviews","(Introduction: 5 minutes)
Technology companies struggle to fill open roles, often spending weeks or months interviewing candidates and then competing against other companies to win over the candidates that make it through. Demand for good engineers continues to grow at a breakneck pace, but our inherently biased interview processes makes it difficult for engineers from non-traditional backgrounds to break into the space. I will discuss the ways that standard hiring processes hurt non-traditional candidates and focus on attracting a particular “type” of engineer. I will focus on the problems with traditional algorithms-based interviews using a whiteboard or coding interface. To demonstrate problems with the typical process,  I will provide results published by interviewing.io, a platform that collects data on typical technical interviews and their outcomes. In particular, their data demonstrates that only 25% of interviewees consistently receive the same outcome, indicating the randomness of this style of interviews. 
(Better strategies: 3 minutes)
Then we will look at new strategies for interviewing that have successfully overcome some of the issues that prevent talented engineers who may be a bit rusty on algorithms from getting through the pipeline. Studies show that a “work sample test” is one of the most effective ways to ensure a candidate’s ability, but there are other ways of testing engineers. In particular, Stripe conducts different kinds of coding interviews including a problem that allows candidates to work with an engineer on finding the bug in a piece of code and an interview requiring candidates to add functionality to existing code. These tests are designed to more closely mimic the job function for engineers who, like most of us, spend very little time actually implementing algorithms. We will also look at Amazon’s interview process in which candidates work on a coding problem for most of the day and then talk through their approach with an engineer. 
(5 minutes: Tips for making any style of interview more compassionate)
Alternative interviewing strategies like the ones above can require more “upkeep” and wide support since companies might need to come up with new problems for implementation and debugging, so I will also talk through some ways that engineers can make the standard technical interview more compassionate. First, studies show that prefacing the interview by reminding the candidate that the focus of the interview is their thought process and not a complete solution helps candidates to relax. Even designing interviews that are explicitly expected to be too difficult to solve within an hour can help the candidate focus on articulating their thought process over writing quick code. Second, having interviewers score candidates on different aspects of their performance including communication ability encourages them to view candidates more holistically, rather than assigning a singular score.  Finally, coaching interviewers to view the process as pair programming helps make the process more collaborative. This gives candidates the opportunity to truly showcase their strengths and allow the interviewer to take care of other areas. 
(Conclusion: 1 minute)
I will briefly conclude by reiterating the importance of interviewing compassionately. It maximizes the time of everyone involved so that companies can find qualified candidates more quickly and eliminate some of the bias towards interviews from algorithms-focused backgrounds.","Interviews and their shortcomings are frequent topic of discussion in many corners of the tech industry, from threads on Twitter to conversations at networking events. Many people lament the process and its bias and those of us who reenter the interviewing pipeline are reminded all over again how tedious it can be to studiously memorize sorting algorithms and practice algorithms we never use day to day. This is an often recognized problem, but one that I think we still have a lot of work to do to fix. I hope to provide both alternative interview styles for people looking to overhaul their processes and compassionate strategies for those that hope to make the best of whatever strategy they currently use.",Attendees will walk away with strategies for improving their pipelines and interview processes in both the short and long term. ,I want attendees to feel more empathetic towards the candidates they see in interviews and  re-inspired to make their interview processes better.,"I plan to include results from studies conducted by interviewing.io, which is a technical interview platform that has published at length about their findings on the results of technical interviews, information from Stripe which has a different kind of interview process and has released results on its findings, and publicly available information about Amazon, which relies on both standard interviews and its alternative coding based challenge. Finally, I will provide my own experiences as an interviewer and interviewee as well as work I have done at Zillow to evaluate and improve our interview process.","I have written about technical interviews at length and created guides to help candidates prepare effectively. At my current company, I worked on a project to calibrate our own interview process by having engineers interview each other to more accurately determine what is necessary to be successful in our roles and what is not. I find that many software engineers believe the technical interviewing process is broken but struggle to find viable alternatives. Without an accurate baseline, interviewing is often highly subjective because engineers have different ideas of what knowledge is “essential” to be successful in their roles. Attendees will walk away from this talk with actionable adjustments to their interviewing processes that can be made in both the short and long term. ",,Flight and hotel,15 minutes,C,Talk,,,,,,,,
Amanda Sopkin,Amanda Sopkin,amsopkin@gmail.com,"Amanda is a Seattle transplant from Denver, Colorado with a great love for coffee and a bit less love for rain. She is a full-stack software engineer for the rentals team at Zillow who attends hackathons as a coach for Major League Hacking in her spare time. She enjoys writing, speaking, and obsessively reading about sharks.  ",https://www.linkedin.com/in/amandasopkin/,,Female,White,,Seattle,"I have been working as a software engineer for a few years. I have worked at a variety of companies, including doing government work before becoming a software engineer for Zillow. I have spoken on engineering subjects a few times before at conferences of varying sizes. I also work as a coach for Major League Hacking, attending hackathons at schools across the country to help students make the most of their experiences. My experience as a coach has taught me a lot about different types of people and the different things they bring to the table as developers. My experience writing, speaking, and doing my job as an engineer has given me unique perspectives I try to share through my writing and speaking. The talk I am submitting are based on my personal experiences and research in these capacities.",Employed as a full-time developer for 1-3 years,,CS degree,,Community,,T078:  Programming Language Culture: The Community of Languages,Other,"I plan to show the websites and codes of conducts from various programming language sites, as well as documentation.","(Introduction: 3 minutes)
Modern programming languages inspire their own communities of evangelists that use the language in new interesting ways, teach others best practices, and even contribute to the source code itself. These communities often have highly varied cultures, with some more focused on openness to beginners and a culture of learning where others inadvertently scare engineers away with their strict paradigms. We will examine the cultures of three prominent technology groups: Python, C, and JavaScript and discuss how the culture surrounding each one impacts the language and its future development. 
(Python: 3 minutes)
Developed with an unusual set of precepts that read more like a strange poem than programming language features, Python was designed with simplicity in mind. I will review the core philosophy from “The Zen of Python”  to introduce the language. As a result of these idealistic beliefs, the Python community is welcoming, open-minded, and supportive to its users in a way that many languages aspire to achieve. In addition to its philosophical tenets, the creators and supporters of python have taken specific steps to achieve this enviable culture. I will discuss the Python Diversity Appendix announcing and upholding a commitment to welcoming all users of Python, the Python community awards which encourage user groups of all flavors, and community outreach efforts like Python Weekly which aim to keep the community connected. 
(C: 3 minutes)
As one of the foundational programming languages, C suffers from many of the same problems that plagued the early tech industry. Widely viewed as a core programming language, beginners often shy away or struggle to identify as C developers even when they have substantial experience. The language’s explicit memory management also requires an earlier understanding of concepts that are conveniently abstracted for beginners in languages like Python. For these reasons, it’s often not considered beginner friendly or welcoming. Some even consider the language more “manly” than others even though many of the first low-level computer programmers were female.  As one of the original programming languages, C also did not have the same opportunities to improve from a clean slate as other later languages. We will discuss how these factors have influenced its community or lack thereof, in addition to concrete things like not having a central website with a code of conduct. 
(JavaScript: 3 minutes)
As one of the most influential and yet controversial programming languages, JavaScript is a community worth exploring for any developer. As one of the core technologies of the World Wide Web, it is a vital part of our ecosystem as developers, but is still considered by some to be “not a real programming language.” It’s a popular language that requires backwards compatibility across all versions in its 23 year old history and is supported by all popular modern web browsers. Maintaining these features is quite a feat. We will discuss the complicated history of JavaScript and the battle to standardizing it across the web. The ubiquitous nature of its use on the web and many frameworks it has inspired both influence its developer community. We will also discuss the code of conduct by the JS foundation and the different flavors of communities inspired by various frameworks based on JavaScript.
(Conclusion: 3 minutes)
I will conclude by talking about the practical steps that can be taken to make communities more welcoming, from outreach to providing easily accessible information online and an enforceable code of conduct.",Often the easiest way to understand the culture of a language community is by experiencing it firsthand. It can be difficult to specifically explain why these different cultures arise without looking at their histories and the steps taken by dedicated community members to make them more accessible. I hope to shed some light on this subject that will provide attendees with concrete actions that can be taken to make a language community (or any technical community) more welcoming. ,"Attendees will leave with a better understanding of the history of some of the most important languages we use as software developers. This talk will also give actionable steps that can be taken to increase the influence of a particular language, tool, or framework.  "," I want the audience to feel more informed about the history of popular languages and if they are involved as developer evangelists in some capacity, inspired to make their communities more welcoming to others.","I will include research on the histories of all three languages (C, Python, and JavaScript), screenshots from the websites that are available, and research from the documentation of these languages.  ","As an active member of the Python community, I attend many Python-themed events and am always excited by the energy I experience. Attending Python conferences, doing community outreach like providing mentorship on talk submissions, and learning about open source contributions to the language have impressed upon me the importance of actively developing a community for a language. This inspired me to research the communities of other languages to see what they do to build a similar community (or what they are not doing but could).",,Flight and hotel,15 minutes,C,Talk,,,,,,,,
Amanda Sopkin,Amanda Sopkin,amsopkin@gmail.com,"Amanda is a Seattle transplant from Denver, Colorado with a great love for coffee and a bit less love for rain. She is a full-stack software engineer for the rentals team at Zillow who attends hackathons as a coach for Major League Hacking in her spare time. She enjoys writing, speaking, and obsessively reading about sharks.  ",https://www.linkedin.com/in/amandasopkin/,,Female,White,,Seattle,"I have been working as a software engineer for a few years. I have worked at a variety of companies, including doing government work before becoming a software engineer for Zillow. I have spoken on engineering subjects a few times before at conferences of varying sizes. I also work as a coach for Major League Hacking, attending hackathons at schools across the country to help students make the most of their experiences. My experience as a coach has taught me a lot about different types of people and the different things they bring to the table as developers. My experience writing, speaking, and doing my job as an engineer has given me unique perspectives I try to share through my writing and speaking. The talk I am submitting is based on my personal experiences and research in these capacities.",Employed as a full-time developer for 1-3 years,,CS degree,,Civic Tech,,T079: Government Technology and What We Can Learn from It,Code samples,,"(Introduction: 2 minutes)
Many developers come to associate government with bureaucracy that it is incompatible with the efforts we take as engineers to ship quickly and work flexibly, but this is quickly changing. Government technologies have their own unique challenges foreign to newer technology companies, including the necessity of ensuring uptime and compatibility with outdated systems. At the same time, while technology companies might struggle to find niche markets where technical solutions do not already exist, many government branches stand to experience rapid improvement with even more basic technical solutions. We will explore the ways that government institutions all over the country are applying technology in novel ways. 
(Smithsonian Digitization: 2 minutes)
The Smithsonian recently took on an initiative to digitize over 137 million artifacts to make them more useful to the public. They successfully completed the effort in 6 months as well as creating a format for completing future transcriptions. The team that took on this project developed a platform for creating digital records from historic files by crowdsourcing volunteers. This format allowed them to get help with the tedious work of transcribing difficult to read but essential historic texts.  This project is fascinating not only because of its historical importance, but because it resulted in the creation of a platform that can be used for other volunteer-based tasks. 
(Opportunity Project: 2 minutes)
In an effort to increase access to valuable tools at lower level branches of government, the Census Bureau recently built out a suite of accessible tools for data processing. The platform, called The Opportunity Project, invites developers and data users around the country to use their applications to complete projects of any scale. The CitySDK makes it easier to build products with open data from the government, designed with compatibility with these kinds of systems in mind. Ongoing projects using the SDK include a tool for sharing data related to the opioid crisis, a platform for connecting veterans to apprenticeships, and a tool for helping businesses and individuals evaluate their disaster preparedness based data on geospatial threats. I will discuss the benefits of creating openly available software geared towards government systems and how this project ensured the adaptability and easy onboarding of the software it produced. 
(Conclusion)
After walking through the unique challenges of building software intended for government use, I will conclude with some takeaways for non-government workers. First, the CitySDK project is a testament to the importance of good documentation for prolonging the life of a piece of software. Second, I will discuss the potential for government projects to leverage citizen volunteers (like the Smithsonian project) and what this means for the tech industry in general. Projects like Mechanical turk or survey monkey rely on users’ desire to feel useful as well. Finally, we will talk about backwards compatibility and how these projects ensured their own success by building simple systems that can be easily maintained.",As engineers it can be easy to view government technology as antiquated or more slow-moving than the kinds of systems we have grown accustomed to at private technology companies. This is a problem because it causes talented technologists to often rule out government careers that could be meaningful for them.,Attendees will walk away with more knowledge of the ways that government branches are applying sophisticated technology. , I hope the audience will be inspired to research technical government initiatives. , I have done research on successful applications of technology at both the local and national level and will include information about the projects that are mentioned above from this research. I relied upon case studies published on profiles of innovative projects in government to find these projects and conducted further research by visiting the platforms that were created directly.   ,I have worked in government for the Bureau of Land Management and Sandia National Laboratories which is a federal research and development laboratory. Since then I have worked in the private sector for the last few years and often find that my coworkers have misconceptions about the applications of technology in government. I hope to shed some light on the innovative uses of technology in government and the unique challenges that are handled at this level. ,,Flight and hotel,15 minutes,C,Talk,,,,,,,,
Amina Adewusi,Amina Adewusi,amina.adewusi@gmail.com,"Amina Adewusi is a Junior Developer at Error, a remote agency creating websites for the arts and academia sectors in the UK. She taught herself how to code whilst on maternity leave and secured her first junior developer role within three months.",https://www.linkedin.com/in/adewusi/,https://twitter.com/a_adewusi,Female,2 or more of the above,,"London, UK","Amina was born and brought up in London and has a diverse background. She is mixed race - her mum is English and dad is Nigerian and both her parents are Muslims. 

Amina’s experience as a self taught developer shows that it really is possible to teach yourself how to code and with a basic level of understanding and prove that you are a great addition to a dev team. Amina became really passionate about coding when she learnt about open source. She is excited by the opportunity to connect with people from all over the world to solve important problems. In her spare time she practices meditation.",Employed as a full-time developer for less than a year,,"Online learning platforms,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Career,,T080: Get your first dev job using open source,Other,I'll be showing a variety of real GitHub repos,"Here is a summary of my talk. I include the time I will spend on each section.

00:00: introduce myself and describe my problem and solution
My name is Amina and I am a Junior dev at Error, we are 4 devs and 1 designer working in the arts and culture space using Ruby on Rails! (Cover slide 1)
Last year I started teaching myself how to code, but a lot of the junior dev roles required experience (Slide 2 shows typical junior dev JD requirements) which I didn’t know how to get. 

A mentor suggested I could prove all of these skills through contributing to open source repos on GitHub (Slide 3 GitHub homepage screenshot). This worked for me and now I’m a strong believer in ensuring open source is welcoming to first time contributors.

In the next 4mins we’ll learn what open source is, go on a journey of the first time contributor and describe the practical tips you need for contributing for the first time! 

00:30: explain GitHub and open source very briefly so everyone in the audience understands
First, let’s explain what open source is, what repos are and give a quick whistlestop tour of GitHub (slide 4 GitHub repo screenshot).

01:00-04:00
30 secs x 6 slides: Key tips on contributing to a GitHub repo for the first time.
Finding the right project - using GitHub’s amazing advanced search function.
Reading the ReadMe 
Installation instructions and how to solve common installation problems
The importance of contribution guidelines
Using issue tags to find the right one for you
How to get help

04:00 summarise the main points I’ve made

04:30 conclusion
Remind audience of how exciting and empowering open source is
Summarise the key tips I’ve offered

Remind them of my personal story and how they can follow the same path as me to get their first job by contributing to open source

Finish by offering help to anyone interested and that they can contact me through twitter","This is the story of how I struggled to get my first Junior Developer role and turned to Open Source projects looking for help. Often people who are new to coding don’t know how to get the experience required for their first job. 

Contributing to open source really is the answer to a lot of the requirements asked for in junior dev job descriptions; for example experience using test driven development, putting code into production, undergoing code reviews and writing technical documentation. In this talk I’ll explain to code newbies and junior devs looking to increase their skillset how to go about using open source projects to do this. 

I’ll describe what to look for in a repo before choosing which one to contribute to and how to go about doing this to maximise their chances of contributing successfully and creating a great relationship with other contributors and maintainers. We’ll learn why developers early in their coding journey can struggle to get to grips with a new repo and how attendees can avoid these stumbling blocks.","I want developers early in their career or people completely new to coding to know that engagement with open source projects is an amazing way to improve their skill set and embed themselves in the tech community.

After my talk they will come away with practical tips on what to look for when searching for an ideal repo to contribute to and they will feel confident when starting to contribute to a new repo for the first time. ","After my talk I hope listeners will feel super excited, because they will understand that a whole world of opportunity, learning and people ready and willing to help them - all for free - is available to them. They will know how to search for repos that resonate with their passions or that will provide the best learning experience they need. They will feel empowered to take action and start contributing to open source projects.","I am going to include data from GitHub on the number of open source repos, the number which are active and also the number of issues tagged as appropriate for “first time contributors” and “help wanted”. 

I have started interviewing a number of experienced developers about this topic including @EddieJaoude, who is a huge proponent of open source in the UK and one of the top 500 GitHub contributors @torgo, is co-chair of the W3C Technical Architecture Group and sits on the UK Government’s web open standards committee. 

I also plan to share my draft presentation with other code newbies to understand different perspectives and experiences of contributing to open source as a new developer.","I live and breathe the life of a first time contributor! I started teaching myself computer programming at the end of last year when I got bored on maternity leave. I got my first dev role in the New Year this year and still feel like I’m very much at the beginning of my journey. I’m in a good position to talk about helping first timers, because I am one!

There are an increasing number of people in my position. The dev industry is highly attractive and bootcamps are lowering barriers to entry. It’s easy to forget what it’s like to know nothing and there aren’t many people on the speaker circuit who are still at the earlier stages of their career. This talk will address that growing audience of new people entering the industry. It will also help those at the ripe stages of their career who have the power to welcome new people into their communities and benefit from increased contribution. 

Public speaking is one of my strengths. I’m personable, I speak clearly and I know how to respond to an audience. I will be able to deliver my message powerfully and succinctly in the five minutes allotted.

Speakers that look like me are positive for the dev community, because it helps other women and non-white people know that they are welcome and belong here. It’s also great to have code newbies on the stage, because it sends the message that whatever your level as a developer, you can contribute meaningfully. ",,"Return flights from London, a hotel stay and daycare for my 1 year old who I will bring with me. I am flexible, so very willing to discuss my requirements as it would be a dream come true to be with you all. Thank you so much.",5 minutes (Lightning Talk),C,Talk,,,,,,,,
Loren Klingman,Loren Klingman,lklingman@bignerdranch.com,"I started programming through tutorials and books in middle and high school.  Completed an undergraduate degree, worked for two years, and then came back for my masters.  I was a team lead at Home Depot and am currently a consulting web developer at Big Nerd Ranch.",https://www.linkedin.com/in/lorenklingman,,male,White,,"Atlanta, GA, USA","I'm a fairly senior developer.  Full time for 5 years, but part time for 5+ years during college and high school.  I'm self taught through tutorials and such for almost all my web technologies.  I've worked for companies with tiny (<10 people) IT departments and for Home Depot which has a very large IT department, which has really helped shape my views on testing and code reviews and what things look like with them and without them.",Employed as a full-time developer for over 3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Career,,T081: What should I test on my front-end?,Demo of working code,,"1. Intro to testing tools/selecting tools that are easy for the reviewer to run after `npm install`
2. Front End Unit Tests - Let's test functions and see how they change state (with working code demo)
3. Front End Unit Tests - Generally not the HTML content
4. Front End E2E Tests - How does this work when it's run in full?  (HTML content) (with working code demo)",Many companies ask for sample code or coding projects and request tests to have been written for the code.  Testing for frontend frameworks tends to be much less straight forward than for backend so this talk will provide a brief overview for testing.,"To take the tools and ideas back to their code and apply them, which will help them write better code and hopefully get better jobs.",Prepared and ready to test their front-end code.,I will include links to the documentation of the various testing frameworks.,"I love helping people succeed in what they are doing and seeing tools improve process.  While working at Home Depot, my fellow developers became my users, and I became passionate about improving the burden of testing code.  This led to diving into front end tests and really considering what we should and shouldn't be testing in each part of that process.",I've also proposed this as a workshop where we would actually write the code for the tests.,"My company generally does not cover travel for speaking at conferences so I will need travel covered.  (Since it's a short flight from Atlanta, I'm happy to fly both ways on Monday to avoid the need for a hotel.)",15 minutes,C,Talk,,,,,,,,
Chris Lorenzo,Chris Lorenzo,chiefcll@gmail.com,"Chris has worked at Comcast since 2007 -- currently as a Distinguished Engineer. He enjoys building/motivating teams and ramping up new projects including XFINITY Home and XFINITY xFi using the latest patterns and web primitives. Besides coding in Javascript, he loves spending time with his wife and two children and helping out in the community.",https://www.linkedin.com/in/chris-lorenzo-3323667/,chiefcll,Male,White,,Philadelphia,I'm your standard privileged white male computer science college grad whose been working as a developer for 15+ years. I've been doing speaking for 3 years and have learned a lot about tech industry. For the last few years my passion is getting new diverse candidates into the tech industry.,"Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,CS degree,,Career,,T082: Getting In and Out of Tech,None,,"Advice on getting into tech from a career change perspective. 
1. Focus on a specific coding language
2. Go to meetups
3. Apply for jobs even if you don't think you are qualified
4. Get feedback and don't be afraid of rejection. Might take 100 interviews to get in.

Once in.
Learn as much as possible - get a mentor, pair program
After a year, GET A RAISE
After two years, apply elsewhere. 
Start learning soft skills (they will increase your career)

Getting out
Working in tech is a lot of work.
Check out the FIRE movement (Financial Independence Retire Early)
Save as much money as you can, live frugally. 
You want to be in a position where you're working because you want to.","Lots of career changers need to hear about how hard it is to get into tech to encourage them to keep trying. Once they are in (which is the hard part) - they need to make sure they are being paid what they are worth. Lastly, you'll get burned out working 80 hours a week all the time. So save as much as you can so you don't have to work forever","Encouraged - excited - able to keep asking for more interviews and breaking into tech. And I want them to be paid what they are worth. Lastly, making lots of money, you need to know what to do with it.",Like a 4 year old who has a banana split ice cream placed in front of them,Tons. If selected I usually spend months prepping and organizing material. Usually my slides contain links to get more details and go deeper on specific things.,I love this topic. I've been hiring career changers - Tech needs more diversity. I've been wanting to talk on this topic for year+,Codeland conf is amazing. I know the quality that you want from your speakers and I'm willing to put in the work to do a great job.,"John Riv and I also submitted a workshop. Hopefully both will get selected and then Comcast will pay for our hotel. I'm submitting this talk as a personal one. So if this is selected alone, I'll need a hotel for the night. Thanks!",15 minutes,C,Talk,,,,,,,,
Dorothy Phoenix,Dorothy Phoenix,contact@cloudyheavengames.com,"I am a game developer at my company, Cloudy Heaven Games, and a computer science tutor. Prior to self-employment, I worked for six years as a software developer and tester at IBM and a local startup. ",https://www.linkedin.com/in/dorothy-phoenix-0694a55,@cloudyheavengms,female,Black or African American,,Washington DC,"I initially came from a more formal computer science background. I took AP Computer Science in high school (around 2000, back when it was C++ rather than Java). I studied Computer Science and East Asian Studies at MIT, and then got a second degree in Game and Simulation Programming. For five years, I worked as a software engineer on government projects at IBM. This work included repairing and migrating Flash-based educational courseware to an online Army learning system, and then working on enterprise Java websites for government clients. I worked for a year as a software developer in test for a small startup, writing a bit of C++ code for a modem, as well as doing documentation. I’ve always been the team member who does writing and documentation; it seems a lot of software engineers don’t want to do that role or are not as equipped. While doing these jobs, I was attempting to work on my own video games on my own time, but not finishing. In 2014 I released a mobile game and started my company, Cloudy Heaven Games. A few months later I left my full-time job to focus on the company. Over the past year, I have been to a few conferences to demo my next game releases. I have also been spending a lot of time focusing on tutoring and teaching, including writing books about how I developer my first game, and a compilation of computer science study tips. I got into computer science because I knew from a young age that I wanted to be involved in game development. I would make my own little instruction manuals for games I made up (this was starting back in the late 80s and early 90s, when video games actually came with paper booklets, rather than an online manual!). I never left home without a game book, or game music, or something related to games. I was pretty much obsessed, and I’ve found a way to make it into my profession.",Other,"Currently self-employed as a game developer/programmer and computer science tutor, after 5+ years working full time as a developer for other companies","CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Career,,T083: How I Gave the Best Whiteboard Interview Ever,Code samples,,"Back when I worked at IBM, one of the contracts on which I was working was about to end, so I needed to find a new one.  My manager recommended me resume to a team on another contract, and I was invited to come interview.  During that interview, I faced the inevitable whiteboard portion, where the team gave me a programming problem to solve, and I had to talk through and write up my solution on the whiteboard, to demonstrate my problem-solving and Java skills.  While many developers dread this part of the interview, the team told me afterwards that mine was the best whiteboard solution they had ever seen!  High praise coming from a seasoned team at a highly regarded tech company!

In this talk, I’ll discuss how I was able to give such a great performance, including tips for how to master the technical side, as well as how to stay calm and even enjoy the process!

The question was how to determine if two strings of text are the same, without using Java’s String class equality methods.  

Step 1: First, I made sure that I understood the question.  This particular question might seem straightforward, but there might be some cases that might be obvious.  For example, does case matter?  What about punctuation or whitespaces, can we just ignore those?  Ask for clarification if you need it.  A good idea is to ask for sample inputs and the expected outcomes.  Starting from this point, as I went through the interview, I always made sure to clearly state what my understanding was of the problem, and made sure that the team and I were on the same page.  If you’re hired as part of a coding team, an important part of your daily work will be to clearly communicate and resolve any possible misunderstandings, so this step demonstrates that you are able to seek out and accept feedback when needed.

Be sure you’re also paying attention to what the expected return is at the end of the problem.  For example, if the two strings are not equal, are we supposed to return “false”?  Or is it sufficient to just print out to the screen that the strings were or weren’t a match?  Little details like this are essential when you’re working on a coding team, and can make or break your code in some cases.

Step 2: I briefly outlined the basic thought-process I’d use to solve this problem in real life, if I wasn’t coding.  If someone gave you a sheet of paper with words and asked you to pick out the identical ones, without using a computer, how would you do it?  You know that two strings that are equivalent must have the same characters in the same order, so you can deduce that you’ll be comparing the characters in each word, one at a time.  You would just keep comparing each pair of letters until either: 
You get to the end of each word, and all of the compared pairs have been successfully matched.
You find a pair that does not match.
Also consider some less-obvious shortcuts that might help make your solution more efficient.  For example, if I can look at two words and see at a glance that they are two different lengths, then obviously they are not the same, so we immediately know the answer.

It’s important to make sure that you’re really talking out loud and sharing your thoughts with the interviewer, even if you’re not sure at first of the complete solution.  Don’t just mumble or not say anything, talk it through so that the interviewer can see how you think.  If you realize that an assumption you made won’t work, it’s ok to say something like “I see that my original thought wasn’t quite right, here’s why, let’s go back and figure out another approach.”

I also like to write down notes and assumptions as I work.  It’s a good way for everyone to keep track of the “conversation” so far.  If you’re not able to do this interview portion in person, ask if you can do the interview with some sort of screensharing, or at the least, still keep written notes for yourself, and let the interviewer know on the phone that you’re writing as you go.

Step 3: So now you’ve figured out your basic approach, or at least the first stab at it.  Now try converting it to pseudocode.  You want to start adapting the “human” approach to how the program will actually be set up.  At this point, you don’t necessarily need to use the exact syntax that you would in your target programming language, especially if you are already nervous or not as comfortable with these types of interviews.  Get the basic structure and process down first.

So how might that play out for this specific question?  First off, we said that if the two strings don’t have the same length, we can immediately make a determination, and if they do have the same length, we’ll need to do further comparison.  So right off, we’ll probably need some sort of if/else structure. You know that you are going to have to do some kind of iteration, character by character, for each comparison between the word pairs.  Sounds an awful lot like you’ll need a loop, and at this point, you’ll be taking into account the string length, so you’ll need some sort of variable to serve as a counter in that loop. (Here in the talk, I would also show an example of the pseudocode).

Step 4: Now you can start substituting in actual language syntax and constructs for the target language.  By doing the pseudocode step, you will hopefully be more comfortable making the transition to the target language, because most of the hard work of the process is already written out.  Note that at this point, there will probably be some steps that were implied in the pseudocode that you will need to actualize in the code.  For example, if we see that the two strings are of equal length (and here you’ll need to think about how to determine the length), we still need a way to get each individual character, in order, one at a time.  This is where it really pays to know the basic tools of your language.  For example, in Java, there are ways to get the character at a specific position in a String, as well as methods that convert a String to an array of characters, which you can then loop through.  Bear in mind:
There’s usually more than one way to solve a problem, like I just mentioned.  If you can see different ways, discuss that as part of your solution.  I mentioned both of these approaches during my interview, and it really helped the interview team see that I was able to be find the pros and cons of different solutions, and that I could justify my choices.
In many cases, you can just focus on the solution itself, and not any implied extra code.  For example, all I did was write the method to solve the problem, stating my assumption that it was in a class that I already constructed.  I didn’t have to write out the whole class, main method, etc.  
What if you don’t remember or know about specific methods or language constructs that will help you solve the problem?  So for example, what if I didn’t know the Java methods for finding characters at a position or creating a character array?  In that case, I would have clarified that I didn’t know off the top of my head, and suggested what I would do to find out.  I know that Java has very thorough documentation for each class, as well as official tutorials, so I would have suggested that my first step would be to check those resources.  Alternatively, in some cases you might know how to write some sort of helper method that will do the required subtask, even if there’s already something in the language that will do it for you.
At this point, I would show my code solution.

Step 5: Time to test the solution!  At the beginning of the whiteboard exercise, I asked the interviewers to give me some sample inputs and expected outputs.  I then chose a few of these, and manually performed the steps in my program to the examples, proving step by step that the solution worked.  During this time, it’s a good idea to make sure you show/write your test steps on the board.  For example, I crossed off each pair of characters in the two Strings on the board as I compared them.
You might find that your solution doesn’t work, or that it does for some cases, but not all.  I would recommend trying more than one test case, so you can find patterns of when it does or doesn’t work.  And that’s ok, because in real life, your first stab at a program often won’t work.  The key is to show that you can analyze the problem and figure out where it might be failing, and then make proper adjustments.

The biggest factor for me was that I was very vocal about what I was doing at each step.  Even if I had to take a moment to think about something, I explained that, rather than just lapsing into a prolonged silence.  I know that often, some people (including myself) are more introverted and really get “into their head” when thinking about a problem, but make an effort to keep the interviewers informed and involved in your thought process.

It might feel like you’re rambling at times, but they’re really looking for your ability to think, and it’s ok that you’re working through the solution out loud.  I’ve actually been a technical interviewer myself, so I’ve been on both sides of the table, and I’ve found that candidates who are able to at least let me know what they’re thinking give a better showing even in situations where they might be stuck.

In many interviews, you have the opportunity to ask the interviewers questions as well.  You might use that as an chance to ask how would they solve the problem (AFTER you’ve finished your attempt, of course).  It shows an interest in learning from other developers, and gives you a chance to see where you might have done things a bit better.  Always look for opportunities to show you’re open to learning and feedback, and that you actually have an interest in the subject.

You might be nervous, and that’s ok, but you can help yourself by preparing.  Look over the basic and most used skills in your target language or technology (hint: working with strings and text, math, loops and conditionals, lists and data structures, searches, and maybe file input and output are some good areas that cover a lot of ground).  If you have a textbook or access to practice problems, instead of just solving them in your code editor, pretend like a teacher has called you to the chalkboard, and practice explaining your process like you’re teaching it to someone else.

Don’t put anything on your resume that you wouldn’t feel comfortable explaining or demonstrating.  Do you have a vague memory of an obscure library that you used on a project years ago?  If you mention it, make sure that you’ll be ready if the interviewer gives you a problem related to it!

Above all, don’t be afraid to make some mistakes.  You won’t be a perfect programmer in the real world, but work on feeling confident in your knowledge and resourcefulness.  Practice, practice, practice!","For many people, one of the most difficult parts of interviewing for a job interview is the whiteboard test. People get nervous, and don't always approach the problem in a calm, organized way. Therefore, even if they are skilled programmers, they risk not giving the best possible impression at job interviews. ","I want people to have steps that they can go back home and practice in anticipation of any potential job interviews. Solving whiteboard problems is a skill, and I want the audience to have the right tools to build that skill. ","I want the audience to feel more confident about what it actually takes to solve problems like this in an interview. Approaching it in fear is usually the first step to low performance. By having a game plan and a calm, organized approach, even if you don't know how to completely solve a problem, you're maximizing your chances of giving a high performance. ","I will research what the most desired traits are that interviewers look for during these problems, and how these steps display those traits. Better to hear it from people who are in the position to administer these tests and make hiring decisions! ","I have been through these interviews before, and have done well. After one interview, I was told that I gave the best whiteboard answer the team had ever seen, as far as walking them through my process. I have also been a team member that interviewed candidates and asked them whiteboard questions. Even though the resumes showed a lot of experience, unfortunately the answers usually were very unguided and not very organized. In the cases where candidates didn't know, I could sense their awkwardness about it. As a tutor, I have worked with students who approached coding problems with dread, and once we did this process, I was happy to see the complete change in their feelings as we went through the problems in less time than they might have expected. ",,"I would need a train ticket to and from DC, and a hotel accommodation. ",15 minutes,C,Talk,,,,,,,,
Sarah Mogin,Sarah Mogin,mogin@work.co,"As a lead developer at Work & Co, Sarah Mogin has partnered with clients including ALDO, Apple, and Virgin America to develop and launch digital products and services that millions use every day. She has experience working on large, complex projects in Angular, Ruby on Rails, React. ",https://www.linkedin.com/in/sarahmogin/,https://twitter.com/sarahmogin?lang=en,Female,Prefer not to disclose,,NYC,"Sarah, who studied physics at Carnegie Mellon University, followed her dream of becoming a software developer after two career switches. 

She is a graduate of coding bootcamp App Academy. 

Sarah is passionate about helping women and underrepresented groups enter the field of technology. In addition to speaking to aspiring coders, she mentors
with Codebar (www.codebar.io), a non-profit initiative that helps the under-represented learn programming.",Employed as a full-time developer for over 3 years,,"In-person bootcamp,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Other","Hands-on experience -- through mentorship, code reviews and other means",My Coding Journey,,T084: Making the Leap: What Career Changers Can Expect from their first Role as a Developer ,Demo of working code,,"Sarah Mogin will share her firsthand experience of transitioning industries and learning to become a developer in order to help the audience pursue their career interests in technology. This talk will also help attendees quickly assess where they are in the process and some actionable ways to move forward. 

Among the topics she will discuss: 

MAKING THE LEAP
It can be daunting to change gears to learn a new skillset, but liberating to discover you don’t necessarily need to drop everything and go back to school for years to get the skills you need. There's plenty of paths into
engineering, such as bootcamps, self-learning, and internships. Sarah will raise the benefits of each option as well as her own decision-making experience of joining a developer bootcamp and how it's helped her.  

INTERVIEW PREP 
How can you draw on your prior experience and apply it to your new field? Get tips on how to translate your past into sound training for your future role, and maybe go one step further -- using it to your advantage to help stand out from other candidates with more formal training. 

JOINING A COMMUNITY
Creating a strong local network has multitudes of benefits for learning and for support. Hear about how Sarah got involved in her local community and ideas for allies you can seek out as you chart your career. 

WHAT TO EXPECT -- AND NOT EXPECT FROM THE FIRST ROLE
The reality is that your first job as a developer might not be what you envision at the outset. But it will be rewarding, and most importantly, it will bring an unmatched period of learning and growth opportunities if you are open to it. Learn how to adopt this mindset to ensure you get the most out of your big move. ","One of the barriers to recruiting more diverse talent -- and importantly, more diverse perspectives -- into software engineering is the notion that a lack of prior experience is a barrier. 

In reality, students who have been studying a different field and don't have a CS degree or formal training can forge a highly successful path by leaning on a variety of nontraditional resources. A broad range of experiences, skills and personality traits can make for a great fit for someone to find an enjoyable career as a developer. 

The goal of this talk is to show that making a switch is possible. The ideal audience would be people who are interested into breaking into software engineering but need practical advice to underpin a strong start. ","Following the session, attendees will be welcome to reach out to Sarah for advice and guidance for how to forge a successful path in the field of engineering. The talk will help them better identify the various options for learning how to code, which might be the best first language for them to learn, interviewing tips and pitfalls, as well as what the ideal first role might be for them. ","Attendees will gain an intimate snapshot of what it takes to enter the field of software engineering, balanced with an actionable and encouraging plan for how to successfully chart out a career path. ","Here's a previous talk Sarah has given on transitioning
careers: https://www.dropbox.com/s/ykg4jykce92zndi/Intern%
20Night%20Talk%20-%20Sarah.pdf?dl=0","It takes someone who's been there to know firsthand the challenges and rewards of successfully breaking into the field. While the head of a bootcamp for example, could point to statistics and other promising metrics for graduates, Sarah can personally point to what it felt like to go from foreign fields -- physics, publishing -- into becoming a fast-rising front-end developer. ",,,15 minutes,C,Talk,,,,,,,,
Amanda Doyle,Amanda Doyle,adoyle@planning.nyc.gov,"Amanda started her career as a geospatial data analyst working in the transportation sector.  She went to earn her MS degree in Applied Urban Science, and over the years her career evolved from analyzing spatial data to building core geospatial data products for the Department of City Planning.  Over the past year she has lead NYC Planning’s Data Engineering team, which modernizes legacy data sets, develops new data products, and builds data pipelines using free and open source technologies.",https://www.linkedin.com/in/amandadoylenyc/,@AmandaDoyle212,Female,White,,New York City,"Amanda is a native New Yorker where she attended the United Nations International School, which gave her a global perspective at a young age.  She earned her BA degree in Geography and International Studies from the University of Richmond.  After college, Amanda worked as a geospatial data analyst for ESRI in D.C., which was her dream job until she realized that D.C. was smaller than Brooklyn.  This realization prompted her to move back to NYC to earn her MS degree in Applied Urban Science from NYU’s Center for Urban Science and Progress.   Upon graduation Amanda went to work as a data engineer with the NYC Department of City Planning (DCP) Capital Planning team.  After recognizing how DCP was responsible for creating some of the City’s core datasets, but lacked a team dedicated to developing these foundational data products, she pitched the creation of a data engineering team, which she has been leading for the past year.",Employed as a full-time developer for over 3 years,,Other,Self taught on the job,Civic Tech,,T085: Why you should have a data engineering team and what it can do for you.,"Code samples,Demo of working code",,"During this talk I’ll introduce Data Engineering at NYC Planning, a new team focused on modernizing legacy data sets, developing new data products, and building data pipelines using free and open source software to make sure that what we build is open, transparent, and reproducible.  The data we make are ultimately used in analyses to inform decisions that ultimately shape NYC, so it’s imperative that analysts have access to clean and high quality datasets that are well documented. 

We’ll highlight one recent project (PLUTO/MapPLUTO) to demonstrate our work in action by explaining how how we moved a legacy data product’s development process off of the mainframe and into PostgreSQL/PostGIS and made sure that the data matched previous versions.  We’ll highlight the technologies we use and the software we build, and discuss why it is important to us that the code to build any dataset is available on GitHub (it supports the philosophy of open algorithms).  

Lastly, we’ll discuss where we’re going as a team and how we’re building communities around core data products to increase data literacy and make these datasets most useful to users.","Frequently, teams accept to maintain legacy products or if they modernize their infrastructure they just migrate their data from their legacy system into their new system, so they still have the same likely problematic data as before.  This talk will be an example of how modernizing data infrastructure is just as important as any other part of the development stack and provide an example of how to approach re-engineering / reverse engineering a foundational legacy product.","1) Data engineering is a foundational component of data science that should not be overlooked.  2) You too can reengineer legacy processes using modern software 3) Don’t ask what your data products are, rather, ask what they could and should be","Motivated to ask more from their data, expect better quality data, and desire more transparency around how data were created.  Informed about the discipline of data engineering and excited to start data engineering teams of their own (or become data engineers).","Most of this talk will focus on one of our primary projects to demonstrate how data engineering can be approached, and we'll explain our philosophies to provide inspiration to others working in this space.","I founded the data engineering team at NYC Planning, lead the PLUTO modernization process, and am currently working to expand data engineering's role by demonstrating the importance of transparency in open data.","If possible, I’d like to co-present with Biayue Cao, a stellar data engineer.",None,15 minutes,C,Talk,,,,,,,,
Alexandra Millatmal,Alexandra Millatmal,hello@alexandramillatmal.com,"Alex is a programmer with a passion for work that has real-world impact. At Newsela, she writes software that helps students read and teachers teach.",http://www.linkedin.com/in/alexandrajmh,@halfghaninNE,cis-woman,2 or more of the above,Afghan,NYC,"I am queer, biracial woman who came to coding from journalism.

After graduating from Omaha Code School in 2015, I returned to the school as an instructor and developer for the attached consultancy. I went on to build curriculum for Girls Who Code and work as a consultant in NYC, and joined the Newsela team in November 2018. It’s been great to enter the edtech space and return to some of the questions (around content and reader engagement) that prompted me to pursue coding in the first place.


My background has always led me to view code as a tool for engaging with real world problems; and as a result I tend to geek out about “human issues” in tech, more than tech itself. Additionally, as someone in the mid-level phase phase of their career, I’m able to speak to multiple perspectives, empathizing with both the junior looking for opportunity and the manager who is concerned about building a balanced and productive team.",Employed as a full-time developer for 1-3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",In-person bootcamp",,Career,,T086: The secret to technical interviews: We’re all bad at them!,None,,"2 min: The universality of the horrible technical interview -- An introduction of the problem that can be understood by engineers on either side of the table
- Real-life stories of technical interview pitfalls
- It’s something virtually all of us experience
- The truth is: the people on the decision-making side of the table (if that's not you yet, it will be soon!) don’t know what they’re doing either

3 min: Companies often don’t have good answers to the fundamental human-centered questions about their processes -- Shed light on the gaps that exist in many interview processes and ask the main questions that will be used to evaluate common practices
- What do companies do to prepare to evaluate a candidate?
- Why are companies asking what they’re asking?
- Do the questions they ask actually address what they’re looking for?

5 min: What are some common technical interview formats and how do they answer each of the fundamental questions above? -- Illustrate that some formats lend themselves to a better interview without much extra consideration, but that any format can be great if used thoughtfully; emphasize that candidates should analyze the interview as a means of evaluation from their perspective 
- Algorithmic whiteboarding
- CS fundamentals talk interviews
- Code review
- Pairing sessions

5 min: What can devs newer in their careers do to be better at their part of the equation? -- Summary and next steps forward
- Restatement of the questions presented above as a means to evaluate current interview processes
- Code is language, interviews are arguments
   - It’s all about communication
   - Focus on the argument you’re trying to make
- Create opportunities to provide feedback
   - In-interview
   - Two-way feedback with candidates
   - Interview evaluation
- Technical interview training resources that aren’t awful, and are useful for both interviewers and interviewees
   - The humble “let’s grab coffee” and how it aids technical interviewing
   - Algorithmic training events for newer devs
   - Pramp.com, exercism.io","This talk addresses the problem of the dreaded technical interview. A lot has been opined about how engineers should level up their technical interviewing skills in order to “crack” the coding interview. Answers to those concerns are out there, but I wonder -- are we asking the right questions?

In my experience interviewing for technical roles, I found that I made the most interviewing improvements as a candidate after I had the opportunity to be on the decision-making side of the process, and understood how the reality of the process diverged from my perception of it. Ideally, a candidate should not have to have this insider knowledge to do a great job, so how can we engineer technical interviews to be more honest? And why are they so bad to begin with?","I want a room full of #CodeNewbies to come away knowing first-and-foremost that the coders on the other side of the interview table are often just as “bad at” and unprepared for technical interviews as they are!

Buoyed by this knowledge, I want the audience to leave with a new framework with which to think about their technical interviews, practical ways to play the interview game, and -- maybe -- the enthusiasm and energy to rewrite that game all together.","I want the audience to leave feeling reassured, driven, and empowered.","This talk is largely based off of first-hand experience going through various technical interviews as a junior engineer, preparing junior engineers for technical interviews as an instructor at Omaha Code School, two job searches and their myriad interviews as a mid-level engineer in NYC, and experience conducting interviews at two very different tech companies. 

It’s also inspired by the work I’m doing at my current company, Newsela, to both improve my own technical interviewing skills and audit our interview process. To date, this has involved my shadowing various technical interviewer pairs, but could be expanded to some kind of qualitative research about interviewer preparedness and gauge of interview skill level across the types of technical conversations we conduct.","As someone transitioning to the next stage of my career, I’ve both been focusing on how to improve my interviewing ability as well as been asked increasingly by newer devs about how they can succeed at interviews. My current employer has helped channel my interest in this area by making space for me to: shadow strong interviewers on our team; seek out extra training for conducting technical interviews; and audit and make recommendations to improve our process. I’m hoping to create maximum impact for these efforts by broadening the conversation outside my existing networks, and think the Codeland/CodeNewbie community would be a great place to have this conversation with the people most-impacted by its outcomes.","I’m trying to develop this presentation to be one that can be given to audiences on “either side of the interview table.” I value the space that Codeland carves out for new devs, and hope this talk can be a medium for bringing conversations I’ve had one-on-one to a larger audience.",No financial requirements.,15 minutes,C,Talk,,,,,,,,
Aneesha Kommineni,Aneesha Kommineni,aneeshack4@gmail.com,"Aneesha Kommineni is an engineer at Microsoft building responsive web components in React for Fabric, an open source front-end framework. She is passionate about making tech accessible & making our industry inclusive.",linkedin.com/in/aneeshak,aneeshack4,female,Asian / Pacific Islander,,Seattle,"One of my high school teachers recommended I apply to a local summer camp, called First Bytes at The University of Texas at Austin, that introduces girls to CS. At the camp, one of the university's female CS professors guided us through a week long project using the Arduino platform to program christmas lights to dance to music with our personalized choreography. During this experience, I realized I love building things with code and decided to study CS in college. I ended up going to the same university & even had the same professor for my Operating Systems class!

I worked really hard and won a lot of scholarships that added up to a full ride to college. One of them was from Google and it included admission into their summer Computer Science Summer Institute, an exclusive program to give minority students going into CS a head start. Summer after graduating from high school, I spent about a month in the Bay Area at Google HQ learning web development and getting a head start on data Structures & algorithms. I felt prepared enough from this experience that about 3 weeks into freshman year, I interviewed for Google's intern program and got an offer! So I went back to be an intern there for 2 summers, even took an extra semester off to intern at Apple as well. I was pretty sick of the SF Bay Area after over a year total of working there so I decided to try Microsoft in Seattle for my last summer before graduating college. My manager there was the first female engineering manager I'd had out of all the places I had worked and it was the first time I was given an opportunity to work on a11y (accessibility) which was very motivating. I also had a female mentor and lots of other female, black, and latinx coworkers which I value because diversity and inclusion are a priority for me. So when it came time to decide where to go for full time, it was easy to come back to Microsoft! 

I've since worked at Microsoft for about 2 years on the same team I interned on! I feel very lucky to have joined the company at a turning point with Satya becoming CEO. And this team specifically, Office Core Experiences, has given me the opportunity to ship features to hundreds of millions of users. By far, my favorite has been helping build the Single Line Ribbon which got raving reviews from our users as well as the press. It was a great feeling to wake up one day and see my work featured in The Verge, Tech Crunch, CNN, etc... After shipping this, I realized I wanted to get back into web dev so I moved to a parallel team called Fabric, a fully open sourced front end framework built with React and Typescript. I had done a lot of web dev since I was first introduced to it at that Google summer camp because my second team at Google was a web dev team and so was my team at Apple. But when I got back into it last year professionally, it had been 2-3 years and a lot had changed. All the JS frameworks, the onboarding to React, everything was overwhelming to say the least. I felt like a beginner all over again and with that came a lot of anxiety. Moreover, I had never worked in a fully open sourced component library. The sheer amount of incoming issues and PRs is still stressful some days. But I've been steadily conquering that and it has been a rewarding experience coming back to web dev and getting into the world of open source web frameworks and design systems.

The saying goes that the only constant is change, and it's especially true for tech and even more so for web dev. There's always a new framework, a new component library, a new design pattern, etc... and it can feel like we're constantly playing catch up. My experiences starting over in web dev and being a newcomer to open source have taught me a lot of empathy. I'd love to share the lessons I've learned from the mistakes I've made to make it smoother and less painful for other beginners.",Employed as a full-time developer for 1-3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,My Coding Journey,,T087: Making a theme designer for a component library,"Code samples,Demo of working code",,"The essential parts of a good theme designer for a component library:
1. Color pickers
2. Generating a meaningful palette from the pickers' theme output
3. Using semantic theming slots to allow users to further customize and make more targeted changes with the components they choose.
4. Accessibility checker to showcase if their choices meet color contrast ratios, etc...","There are a lot of component libraries and design systems out there. It's common to have examples, codepens, etc... that showcase their usage and power but theming is not as well addressed. It's invaluable to have a theme designer that lets consumers of your library easily customize themes and see how they apply to the components they're interested in pulling from your library.","The audience will leave knowing what makes a good theming designer to highlights a component library's power. They can then create/better their own theme designer to offer better customization and flexibility to their users. Even if they don't work on a component library, they likely consume one at some point in their web dev journey and having this knowledge will help them choose one that best serves their needs.",I want the audience to feel equipped and empowered about theming and customization with front end design systems. ,My research will be of other component libraries and their customization offerings. I will include documentation of these as well as that of the component library whose theme designer I'm building. ,"I'm building the theme designer for a large, widely used open source component library and front end framework myself and I want to share all the lessons I'm learning. It's pretty intimidating to set out to build something like this because it's where users come to figure out if they should use a component library or not. And it's also overwhelming as a consumer to choose from the many frameworks and design systems out there and figure out which one is the right fit for your use case. So my talk will illuminate what makes a good theme designer which is useful for both makers and consumers of component libraries.",,I will likely need some travel assistance but I have been able to get conference travel refunded in the past by my team's budget so I can ask about that if I get accepted. ,15 minutes,D,Talk,,,,,,,,
Christopher Cole,Christopher Cole,christopher.cole@supportcast.org,"I am currently a software and web developer who lives in the metro Atlanta area working as a webmaster at Kennesaw State University. I started a company, Support C.A.S.T. (Community, Arts, Sports, Technology), to provide consultation and resources for small businesses and communities through the arts, sports, and tech.",https://www.linkedin.com/in/christopher-cole-a9310633/,,male,Black or African American,,"Atlanta, GA",I am a non-traditional college graduate who has learned through multiple avenues. I earned my Associates in the IT Programmer/Analyst program and Bachelors in Computer Science. I also have started my Masters program in Software Engineering. I also got hands-on experience through internships and full time positions while in school. I've worked with small start ups and interned with state government agencies as well as large companies. I have engineering experience as well as management experience. I love music. I also struggle to manage depression and anxiety. I am committed to giving as much positive energy as possible in hopes that it will spread and we treat each other better on a micro and macro level.  I am very passionate about helping others gain and maintain confidence in their ability to achieve any goal they may have. ,Employed as a full-time developer for over 3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,My Coding Journey,,T088: I stopped asking permission and made my own project (WordPress theme and plugins),"Code samples,Demo of working code",,"This talk will start with some background information of my coding journey. I would like to incorporate some engaging anecdote that is not time consuming. When I get to the part of my journey that led me to my current position, I will talk about how my need to be engaged led me to making my own project. I also needed a portfolio to get another job or more clients. So I took the need and turned it into something tangible I could use in my current job while teaching myself and applying my skillset. I will walk through the process of designing the website, how I researched converting it into a WordPress template, show some code examples for context and show the end result. ","There were multiple problems I needed to address. I was required to use a Content Management System but it was fragmented. To increase security and make maintenance efficient, it was best to make a custom them and plugins. I also felt that I was stagnating. In order to put my skillset to use and create a portfolio to show prospective employers and clients that I was capable, I needed to make projects that I would actually complete and were relevant. This can be applied to attendees who work for a company or are looking to freelance.",I want attendees to think about research and problem solving from a different perspective to achieve goals whether they be for the company they work for or for their personal journey.,"I want attendees to feel confident in changing their situation if it does not suit them. I want them to feel comfortable researching resources, taking existing problems and creating solutions that will help them learn skills and utilize the skillset.","I plan to use information from interviews, blogs, and podcasts about the benefits of making projects and portfolios and resources of examples and learning opportunities.","This is important to me to share this information because I hard to work hard to get out of my own way and learn how to do this. It's important to share so others have confidence in themselves to exercise and build their skillset, to make opportunities for themselves, and how important it is to continue learning and sharing. I firmly believe there is always a way; you just have to find it or make it.","The Code Newbie podcast helps when I have imposter syndrome or want to learn something new on my commute and has enjoyable, useful content. I appreciate that. I just wanted to say thank you for sharing.","I will need the flight and/or hotel expenses covered. It may be covered by work, but it is a process and not guaranteed. ",15 minutes,D,Talk,,,,,,,,
Sofia Crespo,Sofia Crespo,soficrespo91@gmail.com,"Sofia Crespo is an artist with a huge focus in Bio-Arts and Technologies. One of her main interests is the way organic life uses artificial mechanisms to simulate itself and evolve, this implying the idea that technologies are a biased product of the organic life that created them.",,https://twitter.com/soficrespo91,female / non-conforming / genderqueer ,Hispanic or Latino,,"Berlin, Germany","My original background is in Art Direction, currently attending Computer Science classes at the university (1st year), but over the past year I've also been exploring machine learning techniques and worked on creating a project called ""Neural Zoo"" which is fully generated with a Convolutional Neural Net. I've presented this project at Retune Festival 2018 in Berlin, and at Scope Sessions at SomoS gallery in Berlin.",Currently focused on developing my coding skills,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Art/Creative Coding,,T089: Neural Zoo & Artificial Remnants ,Other,"showing repositories, sharing inspiration","I'll start with a simple story about my childhood and then move on to the questions this experience led me to ask myself. Eventually guiding the audience towards my explorations with Machine Learning techniques, and ending with the more artistic part of how humans have developed these surrealistic/science&fiction scenarios. 
I'll be showing them visuals from the main books that served as a huge inspiration to me, like the 'Codex Seraphinianus' for example. ","I won't be presenting a problem, I'll be sharing a personal journey of trauma, inspiration, biology, neural networks.",To continue growing the Neural Zoo I'm going to show them! ,I would like for them to feel inspired and energized to start working on their own artistic projects involving creative coding and machine learning. Also I aim to visually inspire them to create bio-arts!,"I would like to share about how I got interested in Neural Arts, and what drove me to use them to create digital artwork inspired in the biological world. I'm fascinated by how these two worlds are intertwined. ","I feel like I fit the main goals and energy of the event, maybe this is a rather abstract way to put it, but I have the feeling that I resonate with the core values/topics from the conference. I am also highly motivated to continue sharing with people the tools I use, and love receiving feedback, answering questions, interacting with people. ",,"Flights from Berlin, regarding accommodation I can manage on my own staying by friends.",15 minutes,D,Talk,,,,,,,,
Guedis Cardenas,Guedis Cardenas,guedis.sc@gmail.com,"As a software developer at iCIMS, a leading provider of cloud-based talent acquisition solutions, Guedis Cardenas helps build a better recruiting experience for both job seekers and employers. 

Passionate about the U.N.’s Sustainable Development Goals, Guedis is an advocate for tech inclusivity, leveraging technology for positive impact, and making mentorship more accessible to all.",https://linkedin.com/in/guedis,https://twitter.com/holaguedis,Male,Hispanic or Latino,,"Holmdel, New Jersey","Raised in humble beginnings, as Latinx, when I felt underserved and underprepared, the community helped me. This gratitude fuels my compassion and purpose. As such, I speak at local events like Girls Who Code, Hour of Code and mentor those new to tech.

I understand why technology must reflect its population. Let’s ponder on Ada Lovelace. Luis von Ahn. Grace Hopper. Anita Borg. Alan Turing. Pioneers who were underrepresented because of their gender, sexual preference or race. Turing said it best, “Sometimes it’s the very people no one imagines anything of, who do the things no one can imagine.” By empowering an individual, we empower a family, community, and generation. Putting technology into the hands of the people, for the people, for a common good. It doesn’t matter where they come from, who they are, or what they’ve done. Do they love technology? Curious about its potential? Then by all means, we must support them.

As a developer, I love what I do. As such, I champion for those also wanting to do the same. The joy of teaching logic to a six year old through a click-and-drag Big Hero Six game on Code.org. Using MIT’s Scratch to teach an eleven year old loops. Sharing the wonders of IDE’s and the CLI to a thirty year old. Their faces of curiosity galvanize me. I actively mentor those switching/entering software development careers. I strike up conversations with whoever wants to talk. Wrapping up with a call to action that if they know anyone interested in STEAM, I’m happy to chat and help. 

I’m a believer that a candle loses nothing by lighting another candle. This event will fuel my flame of knowledge and kindle new relationships. Working side by side, we fill our communities with warm solidarity, a blazing spirit for innovation, and a passion to move forward together.",Employed as a full-time developer for over 3 years,,"CS degree,In-person bootcamp,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,My Coding Journey,,T090: FARTing my way to tech,None,,"Question #1
Do I belong here? (In different contexts)
- In college, in the major, in the industry

Introduce FARTing framework
What FARTS stands for and how I started applying this framework

Question #1 Continued
- Action steps: took ownership, proud of roots, be the change I wanted to see and be role model to next generation

Question #2
Am I good enough?
- Due to classroom setting, exams, and more
- Action steps: embody a Growth Mindset, mentality of always room to grow

Question #3
Am I passionate enough?
- In computing in general, in research, all the different area explored (from finance to consulting and sales)
- Actions steps: deep reflection, combining what enjoyed about all roles to merge into a super role, finding North Star of goals

Wrap up with change your FARTS, change your life","Sometimes, when we're starting our coding journey or continuing it, arrive to a point in which ask oneself, ""Do I belong here in tech? Am I good enough? Am I passionate enough code?"" 

Asking such questions are common (just not talked about enough). Use it as fuel for growth, learning, and accomplishments.","- It's normal, common, and in fact good to be asking yourself, ""Do I belong here? Am I good enough? Am I passionate enough?"" as it relates to your coding journey
- If you feel that way, others may have too, you're not alone. Celebrate it.
- Use those questions and experiences as fuel/energy keep moving in your coding journey. Be that role model, that mentor/sponsor, that team mate, and fellow technologist that you wish you had or know you can be.","- Relief that others at some point, to some degree ask themselves these questions, it's okay!
- Inspired to keep on going with their development journey.","- Snippets/blurbs from interviews with other technologists
- Data on impostor syndrome
- Growth vs Fixed Mindset research
- Research on Grit","I've personally asked myself all of these questions. I have explored different paths, sought out the advice of diverse/different perspectives in different fields, career paths, etc. 

As a developer, I want to inspire others too keep on growing as technologists, and rely on my empathy to share the ups/downs so that others could relate and feel empowered as well.

I've spoken at organizations/events like Girls Who Code, Hour of Code, Hackathons, and more with the aim of galvanzing others to merge tech with their others interests and to keep learning more.",,,15 minutes,D,Talk,,,,,,,,
Guedis Cardenas,Guedis Cardenas,guedis.sc@gmail.com,"As a software developer at iCIMS, a leading provider of cloud-based talent acquisition solutions, Guedis Cardenas helps build a better recruiting experience for both job seekers and employers. 

Passionate about the U.N.’s Sustainable Development Goals, Guedis is an advocate for tech inclusivity, leveraging technology for positive impact, and making mentorship more accessible to all.",https://linkedin.com/in/guedis,https://twitter.com/holaguedis,Male,,,"Holmdel, NJ","Raised in humble beginnings, as Latinx, when I felt underserved and underprepared, the community helped me. This gratitude fuels my compassion and purpose. As such, I speak at local events like Girls Who Code, Hour of Code and mentor those new to tech.

I understand why technology must reflect its population. Let’s ponder on Ada Lovelace. Luis von Ahn. Grace Hopper. Anita Borg. Alan Turing. Pioneers who were underrepresented because of their gender, sexual preference or race. Turing said it best, “Sometimes it’s the very people no one imagines anything of, who do the things no one can imagine.” By empowering an individual, we empower a family, community, and generation. Putting technology into the hands of the people, for the people, for a common good. It doesn’t matter where they come from, who they are, or what they’ve done. Do they love technology? Curious about its potential? Then by all means, we must support them.

As a developer, I love what I do. As such, I champion for those also wanting to do the same. The joy of teaching logic to a six year old through a click-and-drag Big Hero Six game on Code.org. Using MIT’s Scratch to teach an eleven year old loops. Sharing the wonders of IDE’s and the CLI to a thirty year old. Their faces of curiosity galvanize me. I actively mentor those switching/entering software development careers. I strike up conversations with whoever wants to talk. Wrapping up with a call to action that if they know anyone interested in STEAM, I’m happy to chat and help. 

I’m a believer that a candle loses nothing by lighting another candle. This event will fuel my flame of knowledge and kindle new relationships. Working side by side, we fill our communities with warm solidarity, a blazing spirit for innovation, and a passion to move forward together.",Employed as a full-time developer for over 3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",In-person bootcamp,Online learning platforms",,Art/Creative Coding,,T091: Merry Motivations with Markov Chains,"Code samples,Demo of working code",,"Note, currently at 10:30 minutes. Certain sections may have more time to explain more code samples and show demo code.

# 1 min: Markov chain applications 
- Where do we use Markov chains today? Such as PageRank, LZMA data compression algorithm, MamaDroid malware detection.

# 1 min: What are Markov chains (high level introduction)
- If time allows, may spend 30sec explaining other type of Markov chains (which we won't be covering but are built on this basic Markov chain)

# 2 min: What are the important properties
- Explain relationship between Markov property, Markov process, and Markov chains
- Why are irreducibility and aperiodicity important

# 1:30 min: What is the state transition matrix and diagram
- Use a predicting the weather example to illustrate matrix and diagram

~~~ Now moving into example of using Markov chains to generate motivational phrases

# 30 sec: How can Markov chains be used to generate text
-  Different ways, but in this case, via dictionary
-  Specifically, how to generate motivational phrases

# 1:30 min: Training the model
- Explain the gathering data phase 
- Walk through code that createes dictionary 

# 1:30 min: Generating the text
- Step through code explaining how it generates the text
- If time allows, show diagram of it

# 1 min: Fun, amusing challenges that goes in text generation
- How accounting for tokenization, longer combined phrases, and more makes the phrases more legible

# 30 sec: Show examples","'- Markov chains are a powerful, useful tool/concept to know. Most introductions are math heavy (and can be deterring to some, it was to me originally). 
- I want to explain them through visuals, concepts, code so that more approachable and applicable","- What are the fundamentals of Markov Chains
- How can they create and use them
- Markov chains are fun!","- Knowledgeable about Markov chains
- Excitement that now better understand them and can use them",- Use cases of where/how Markov chains are used in real applications,"Raised in humble beginnings, as Latinx, when I felt underserved and underprepared, the community helped me. This gratitude fuels my compassion and purpose. As such, I speak at local events like Girls Who Code, Hour of Code and mentor those new to tech.

I understand why technology must reflect its population. Let’s ponder on Ada Lovelace. Luis von Ahn. Grace Hopper. Anita Borg. Alan Turing. Pioneers who were underrepresented because of their gender, sexual preference or race. Turing said it best, “Sometimes it’s the very people no one imagines anything of, who do the things no one can imagine.” By empowering an individual, we empower a family, community, and generation. Putting technology into the hands of the people, for the people, for a common good. It doesn’t matter where they come from, who they are, or what they’ve done. Do they love technology? Curious about its potential? Then by all means, we must support them.

As a developer, I love what I do. As such, I champion for those also wanting to do the same. The joy of teaching logic to a six year old through a click-and-drag Big Hero Six game on Code.org. Using MIT’s Scratch to teach an eleven year old loops. Sharing the wonders of IDE’s and the CLI to a thirty year old. Their faces of curiosity galvanize me. I actively mentor those switching/entering software development careers. I strike up conversations with whoever wants to talk. Wrapping up with a call to action that if they know anyone interested in STEAM, I’m happy to chat and help. 

I’m a believer that a candle loses nothing by lighting another candle. This event will fuel my flame of knowledge and kindle new relationships. Working side by side, we fill our communities with warm solidarity, a blazing spirit for innovation, and a passion to move forward together.",,,15 minutes,D,Talk,,,,,,,,
Guedis Cardenas,Guedis Cardenas,guedis.sc@gmail.com,"As a software developer at iCIMS, a leading provider of cloud-based talent acquisition solutions, Guedis Cardenas helps build a better recruiting experience for both job seekers and employers. 

Passionate about the U.N.’s Sustainable Development Goals, Guedis is an advocate for tech inclusivity, leveraging technology for positive impact, and making mentorship more accessible to all.",https://linkedin.com/in/guedis,https://twitter.com/holaguedis,Male,Hispanic or Latino,,"Holmdel, NJ","Raised in humble beginnings, as Latinx, when I felt underserved and underprepared, the community helped me. This gratitude fuels my compassion and purpose. As such, I speak at local events like Girls Who Code, Hour of Code and mentor those new to tech.

I understand why technology must reflect its population. Let’s ponder on Ada Lovelace. Luis von Ahn. Grace Hopper. Anita Borg. Alan Turing. Pioneers who were underrepresented because of their gender, sexual preference or race. Turing said it best, “Sometimes it’s the very people no one imagines anything of, who do the things no one can imagine.” By empowering an individual, we empower a family, community, and generation. Putting technology into the hands of the people, for the people, for a common good. It doesn’t matter where they come from, who they are, or what they’ve done. Do they love technology? Curious about its potential? Then by all means, we must support them.

As a developer, I love what I do. As such, I champion for those also wanting to do the same. The joy of teaching logic to a six year old through a click-and-drag Big Hero Six game on Code.org. Using MIT’s Scratch to teach an eleven year old loops. Sharing the wonders of IDE’s and the CLI to a thirty year old. Their faces of curiosity galvanize me. I actively mentor those switching/entering software development careers. I strike up conversations with whoever wants to talk. Wrapping up with a call to action that if they know anyone interested in STEAM, I’m happy to chat and help. 

I’m a believer that a candle loses nothing by lighting another candle. This event will fuel my flame of knowledge and kindle new relationships. Working side by side, we fill our communities with warm solidarity, a blazing spirit for innovation, and a passion to move forward together.",Employed as a full-time developer for over 3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",In-person bootcamp,Online learning platforms",,Community,,T092: Open sourcing mentorship/sponsorship on the JAMstack,"Code samples,Demo of working code",,"This talk shares the rollercoaster journey of open sourcing mentorship (and how it relates to anyone starting an online community).

- Can we open source mentorship/sponsorship?

- Striving to make mentorship accessible to all, I realized there was no all-encompassing guide I could effectively write, even after hours of collecting perspectives and experiences from mentors and mentees.

-But you know who could? The community at large! In fact, this was the better approach: a living, breathing site written by the people, for the people, for a common good.
 
- Discuss the tech hurdles and trade-offs. Why not a Github page, or a wiki, and decided on the JAMstack. What is the JAMstack, specifically Netlify, Gatsby, and serverless fucntions.

- Discuss the process hurdles. Why keep it low-key at first, versus blasting it immediately through social media. Where do discussions take place?

- Discuss the people hurdles. How do you encourage participation, raise awareness, and foster a welcoming, helpful community? 

- As of March, ""mentorship.guide"" is dormant. Come July, it'll join the many, an additional star in the night sky, helping illuminate a path for a more inclusive, equitable tech community.

- Here's how you can contribute too!","How do we improve mentorship/sponsporship amongst the community. People are doing in isolation, some initiatives are trying to make it more widespread. But how do you aggregate, compile, and collect all of the different viewpoints, perspectives, strategies, and experiences surrounding mentorship and sponsorship.","'- If you want to build your own online community, you can too using the JAMstack. These are the common obstacles and here's how to remedy them.

- Repository to make make OSS contributions (let's grow this together!)

- Mentorship/sponsorship has varying definitions, ideas, and that's great. Now that they're in one place, these are what they are.","- Feel solidarity to move forward together

- Feel connected to help one another and ask one another for mentorship/sponsorship",- Research on the mentorship/sponsorship,"Grateful to my mentors, sponsors, and community at large. I've been awarded for my community building efforts and one of my favorite things is helping others and connecting people to opportunities and others. This is a bridge of the things I enjoy, community + OSS + tech. ",,,15 minutes,D,Talk,,,,,,,,
Guedis Cardenas,Guedis Cardenas,guedis.sc@gmail.com,"As a software developer at iCIMS, a leading provider of cloud-based talent acquisition solutions, Guedis Cardenas helps build a better recruiting experience for both job seekers and employers. 

Passionate about the U.N.’s Sustainable Development Goals, Guedis is an advocate for tech inclusivity, leveraging technology for positive impact, and making mentorship more accessible to all.",https://linkedin.com/in/guedis,https://twitter.com/holaguedis,Male,Hispanic or Latino,,"Holmdel, NJ","Raised in humble beginnings, as Latinx, when I felt underserved and underprepared, the community helped me. This gratitude fuels my compassion and purpose. As such, I speak at local events like Girls Who Code, Hour of Code and mentor those new to tech.

I understand why technology must reflect its population. Let’s ponder on Ada Lovelace. Luis von Ahn. Grace Hopper. Anita Borg. Alan Turing. Pioneers who were underrepresented because of their gender, sexual preference or race. Turing said it best, “Sometimes it’s the very people no one imagines anything of, who do the things no one can imagine.” By empowering an individual, we empower a family, community, and generation. Putting technology into the hands of the people, for the people, for a common good. It doesn’t matter where they come from, who they are, or what they’ve done. Do they love technology? Curious about its potential? Then by all means, we must support them.

As a developer, I love what I do. As such, I champion for those also wanting to do the same. The joy of teaching logic to a six year old through a click-and-drag Big Hero Six game on Code.org. Using MIT’s Scratch to teach an eleven year old loops. Sharing the wonders of IDE’s and the CLI to a thirty year old. Their faces of curiosity galvanize me. I actively mentor those switching/entering software development careers. I strike up conversations with whoever wants to talk. Wrapping up with a call to action that if they know anyone interested in STEAM, I’m happy to chat and help. 

I’m a believer that a candle loses nothing by lighting another candle. This event will fuel my flame of knowledge and kindle new relationships. Working side by side, we fill our communities with warm solidarity, a blazing spirit for innovation, and a passion to move forward together.",Employed as a full-time developer for over 3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",In-person bootcamp,Online learning platforms",,Community,,"T093: Rethinking the What, When, and How of Mentorship ",None,,"'- Barbershop story, of mentorship
- About me
- Thank you mentors for all helps/support
- ""A lights loses nothign by lighting another candle""
- What are the obstacles in mentoring
- Despite these, why should you mentor?
- It help them
- It helps you
- It helps community
- ""To the world, you may be one person, but to one person, you may be the world""
- Rethinking Mentorship, it can be sharing ...
- What you can, when you can, how you can
- Story of watering a garden

- What to share (what you can) 
- knowledge & experiences
- general & specific type of advice
- challenges experiences & encouragement

- When you can
- Story of the email (time is not equal)
- Leverage async/sync communication

- How you can
- Up to you
- Introduce the mentorship onion
- I go to them
- They come to me

- It's a communal effort
- Story of claymaking
- Call to action, what do you do","- We can help make our community more inclusive and innovative with mentorship. It doesn't have to be stressful, time consuming or complicate. It can be about sharing what you can, when you can, how you can. Let's rethink mentorship so we can make mentoring more enjoyable, insightful, and rewarding.","Mentoring is key towards fostering a more diverse, inclusive, tech community. We will debunk myths regarding mentorship. Learn frameworks for getting started and effective techniques. Explore common challenges and how to adapt to them. And redefine what mentoring can be. Together, we’re stronger. Learn how to making mentoring an enjoyable, insightful, and rewarding experience for everyone involved.","- Empowered to help mentor others, especially informally
- Knowledgeable with techniques/strategies on ""sharing what you can, when you can, how you can""","- Research on mentorship
- Interviews and perspectives from different technologists","I am grateful to my mentors and communities. I strive to mentor when I can, how I can. I believe we could do more of it if we clarify it and redefine it. I am both a mentee and mentor and overall just want the community to sharing their knowledge, experiences so that we can all move forward together.",,,15 minutes,D,Talk,,,,,,,,
Blanche-Barbat,Blanche-Barbat,cassandre@10xmanagement.com,"Michael Solomon is an established entrepreneur and the founder of 10x Management ​(​the premier tech talent agency),​ ​10x Agent On Demand,​ ​Brick Wall Management,​ ​Musicians On Call​ and The Kristen Ann Carr Fund​. He remains a sought-after voice in the business technology world and makes frequent appearances on Bloomberg Television, MSNBC, and BBC.",https://www.linkedin.com/in/michael-solomon-9303831/,@10xmgmt,Male,White,,New York,"From working with Bruce Springsteen to founding​ ​Brick Wall Management​ ​and​ ​10x Management​ (a prominent tech agency) with his close childhood friend, ​Rishon Blumberg,​ Michael has turned his passions into reality.
Brick Wall started as a music management company shaping the careers of musicians like John Mayer, Citizen Cope, and Vanessa Carlton. It racked up Grammy Awards and nominations and more than 10 million albums sold.
10x brought Michael’s decades of experience managing creatives to the technology sphere, carving out a place as a trusted, exclusive resource for companies seeking coveted tech experts.",Other,Managing top tech talent,Other,,Career,,T094: How To Get The Compensation Package You Deserve,Other,Slides,"The talk will start with an overview of what is at stake during an employment negotiation because it is not only about getting a better salary. Then I'll move on to the 24 components of a job offer that should always be negotiated, and how these demands should be presented. Moving forward, Michael will give some tips on how to create leverage and how to use it without creating frictions with your future employer. Finally, he will review the different types of equity and explain whether they are worth taking or not. Michael will close the session with a Q&A.",61% of employees don’t negotiate their employment offers. The stats are far worse for women and people of color. As long as we don't make sure that technologists get the compensation they deserve we won't be able to attract and retain top talent in the industry.,"This talk would be very practical and get to the bottom of employment negotiation (how to process an offer and to present your terms, what you can negotiate, when to accept equity, etc.) Michael wants the audience to leave this session knowing exactly what to do during their next job offer negotiation.","Michael wants the audience to feel empowered. It can be very tempting to settle for little when you're a junior developer. It's important to remind them that even for your first job, they must negotiate their employment offer as it will set the bar for their future negotiations.",Michael will include reports and case studies to support his talk.,"Michael co-founded a company called 10x Management. Its mission is to pair some of the best freelance tech talent with innovative companies. Unlike recruiters, 10x gets its commission from the developers they manage and not from the companies. Therefore technologists know that 10x always have their interests at heart. 
When Michael and Rishon realized how much their freelancers needed help to negotiate their contracts, they decided to launch a new service called 10X Agent On Demand through which they help settle on full-time employment contracts for technologists. Through these two companies, and Brick Wall Management before, Michael negotiated many agreements, and he believes that his expertise could be beneficial to developers.",,,15 minutes,D,Talk,,,,,,,,
Julio Cesar Fortunato Filho,Julio Cesar Fortunato Filho,juliofortunato58@gmail.com,"Junior Front-End Developer @ Codeminer42, UI/UX enthusiast, junk food lover.",https://www.linkedin.com/in/juliofortunato/,@fortunatooo,Male,Hispanic or Latino,,Brazil,"It was middle-2017 and I was graduating from my System Development college course. The problem is that, on the past 2 years I had only worked
with hardware and client support, never with coding. I was tired of removing dust from old computers and re-installing MS Outlook 🙄, and decided to give coding a try. As I thought I hadn't the minimum experience to get a Junior Developer spot, I decided to enter in a second graduation in the same area, so I could apply for an internship. This lead me to Codeminer 42, and now I fell much more happier coding than answering support tickets 😃.",Employed as a full-time developer for 1-3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Civic Tech,,T095: The Web for everyone: making your website accessible is not that hard ❤️,Code samples,,"My idea with this talk is to show beginners that designing/coding their app accessible could be really easy. I intend to do that by showing a list of simple things that make a website accessible such as: adding enough color contrast,
designing usable focus states, using labels on form fields, using alternative texts on images, using correct markup and using wai-aria attributes.","There are over 56 million people in the United States (nearly 1 in 5) and over 1 billion people worldwide who have a disability. In 2017, there were 814 website accessibility lawsuits filed in federal and state courts. These two pieces of data alone should convince us of the importance of designing for accessibility.","The idea is that the attendees could leave the talk with the feeling that making their app/website accessible should not be so hard, and by design/coding in a accessible way helps building an web for everyone!","At the end of the talk, I'd like the attendeed to get the importance of caring if their websites are accessible and, if not, that they start working on this kind of stuff","Part of the talk content will be based on some articles that helped me in the beggining of my carreer. It will be based both on coding and design articles. It will also be based on my own experience working as an intern/junior
front-end developer, and the code reviews I had while learning.","I'm kinda a newbie into the coding world and, specially when I started, I often had the called ""Impostor syndrome"", feeling that I didn't knew anything and that my code was ugly. As time passed, I learned with my co-workers that I was evolving every day as a developer, and started being proud about the code I was writing. This made me think that I could pass this feeling to other people that are starting their carreers and fell insecure.",,I'll be travelling from Brazil. Flights can be real expensive here 😧. I'll be in need of flight and hotel costs covering.,15 minutes,D,Talk,,,,,,,,
Nada Ashraf Abdelbaky Salama,Nada Ashraf Abdelbaky Salama,nada.abdelbaky1996@gmail.com,"I'm a junior full-stack developer, and open source contributor, based in Egypt. I have a passion for learning and exploring new topics. 
On another note, I'm also a cake baker and decorator.",https://www.linkedin.com/in/nada-salama-7ab05a134/,@Nada_Ashraf96,Female,Prefer not to disclose,,Egypt,"I graduated last year with a degree in Computer Engineering.
I currently work as a full-stack developer at Pas-Sport, a startup that helps promising athletes get sports scholarships. 
I love working with Ruby on Rails, Python and Django. I am a part of the Rails Girls Summer of Code community, first as a student 3 years ago and currently as a team supervisor. Whenever I get the time, I love to contribute to open source projects.",Employed as a full-time developer for less than a year,,"CS degree,Online learning platforms,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Career,,T096: On going remote: 5 lessons I've learned in my first remote internship.,None,,"This is the outline of the things I've learned in my 3-months internship with a Berlin-based Startup as a backend developer.
1) Github is key:  Having a GitHub profile is so useful especially when applying for a remote job/internship, it helped me showcase my skills and experience.
2) No Lunch Break: Lunch break is usually the time where co-workers get together and talk and discuss their work, with remote work there's no lunch break, therefore it's important to keep communicating with your co-workers and discuss your tasks and ask your questions.
3) Voice over text: Communication is key in remote work, however, not all form of communications are created equal. Some people communicate better in voice/video calls or maybe doing a code live sharing, while others prefer slack. Therefore, it's important to identify the form of communication that works best for you. 
4) Save money(more than expected): Yes, you'll save money on gas, parking or on transportation in general, which is expected in remote work.
But by working from home, you'll also be able to save money on your morning coffee, work outfits, lunch meals...
5) Is it for me?: One big downfall to remote work is feeling isolated or not being able to interact with people one-on-one on a daily basis.
Although, I enjoyed my remote internship, and I love the flexibility it provides. I discovered that I need to be able to interact with people and having an in-office job that offers a remote option currently was a better option for me.
I hope that this point to be considered when deciding to go on a remote job or not.","Remote work is gaining popularity day after day and for good reasons like saving time on commuting, saving money, become more productive but it also has its cons like feeling isolated, having communication problems.
The problem is to be able to decide whether it's currently suitable for us or not and if so, how to have the best experience working remotely.","I want to audience to identify the best form of communication for them, whether it's voice calls, text, video class, screen sharing, to try to improve their GitHub profile and online presence, in general, to help them when applying for remote work.
And lastly to consider the importance of human interaction in the workplace is to them, and to think about whether remote work is suitable for them or not.","I want the audience to know more about remote work from personal experience, things to expect and pros and cons.
I also want to help them decide whether remote work is a good option for them or not, especially for junior developers.","Other than my personal experience, the references I used were:
1) Remote: Office Not Required by Jason Fried and David Heinemeier Hansson
2) State of remote work 2018 report by (buffer.com)","I've been fascinated with the idea of remote work and I still do believe that it's the future of the workplace, however, when I started my remote internship with a Berlin-based startup, some things were a bit different than what I was expecting, especially as a junior developer and because this is my first remote experience, I was feeling a bit lost at first.
Although, I contributed to open source projects before, having a job/ internship was completely different.
I hope that I can help other developers avoid this confusion when starting a remote job and to consider whether it's currently suitable for them or not.",,"I would need help with the accommodation and travel expenses, if possible.",5 minutes (Lightning Talk),D,Talk,,,,,,,,
Christina Truong,Christina Truong,hello@christinatruong.com,"Christina has over a decade of experience as a front-end developer working at agencies, software companies and the non-profit sector. As an educator she has taught and created curriculum for over 1000 students in college programs, coding bootcamps, workshops and many more with her online courses. These days you can find her working on creating more courses or tinkering with her side gig, Nuthin' But a Tee Thang (teethang.com).",https://www.linkedin.com/in/christinatruong/,@christinatruong,Female,Asian / Pacific Islander,,"Toronto, Ontario, Canada","I've been working in tech for awhile and have a lot of experience working in and observing different environments. For the most part, I'm usually one fo the few ""others"" so I feel like these experiences have given me a viewpoint of someone who is both and insider and outsider at the same time. 

Also teaching primarily beginners while also trying to keep up with new technologies has also given me the perspective on being both a beginner and experienced developer.",Other,Was previously employed full-time as a developer for more than 3 years but currently focusing more on teaching and coding casually.,Other,College certificate and collection of resources.,Community,,T097: How to Ask For Advice,Other,Slide presentation,"Beginning:
The benefits of getting advice or finding mentorship such as:
- meeting people in the industry
- being part of a community
- getting guidance or learning about things you may not have known on your own

Middle:
How to communicate effectively when approaching someone for advice or mentorship. Things to consider when reaching out to a stranger:
- remember, it's basically free labour
- things like gender or race should be considered. 
For example, asking a woman vs a man to meet a stranger for coffee may raise different concerns. These types of considerations should be applied to everybody but specific circumstances may effect some more than others.
- how to be clear about your ask
- acknowledge the person's time/effort

End:
Talk about alternatives to in-person coffee dates
- meetups/conferences
- newsletters
- social media","Informational interviews and finding mentorship is something that is often recommended. But for many, “cold calling” someone can be hard. This problem is important to address with attendees so they can learn how to approach people in a way that makes it easier for them to get help and create relationships.",Start applying effective communication techniques when requesting informational interviews and mentorship. Implement these considerations to communicate more effectively in general and being thoughtful with all their interactions with people.,More confident and informed.,"When talking about being mindful of asking for free labour, I can refer to research about how it disproportionately affects underrepresented minorities to highlight why we need to be mindful of these factors when making such requests.",I regularly get requests such as these and have seen many different communication styles and some make it easier than others to fulfill their requests!,,I would require flight and hotel. Cab fare if necessary. Thanks for your consideration!,15 minutes,D,Talk,,,,,,,,
Stephanie Szeto,Stephanie Szeto,stephaniexszeto@gmail.com,"Stephanie Szeto manages large-scale programs in Developer Infrastructure at Facebook, where she builds products, services, infra that enable Facebook developers to be among the most productive in the world. She spends her time thinking about organizational health, cultural change in large organizations, and helping people maximize their potential at work. In her free time, she enjoys devising frameworks to think about life, making spreadsheets, and organizing things.",,,female,Asian / Pacific Islander,,San Francisco,"I studied Computer Science in college after initially thinking I was going to get a triple major in Economics, Business Administration, and Statistics. As I was getting my formal education, I also did a number of separate technical workshops and programs, including Railsbridge (extracurricular workshops to learn how to make web apps with Ruby on Rails), and CodePath (extracurricular mobile development program where I learned iOS). I've always been at the intersection of technical and business and have a very interdisciplinary perspective of the world. ","Casually code, but coding is not the core part of my profession",,"CS degree,In-person bootcamp,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Career,,T098: Managing Up at Work: The Art of an Effective 1:1,None,,"I'll talk through why we do 1:1's in the first place and what types of information managers are hoping to get out of them, and then touch on how many of us naturally recoil from having the awkward conversations that we should be having in our 1:1's with our managers (and that we should feel empowered to raise those if we're not having those discussions already!). 

The meat of the presentation then goes into different types of conversations that someone might want to have with their manager and provides guidance, best practices, some sample phrasing for how to bring up those topics. Those topics include:
- promotions, raises (where you should bring this up at the beginning of the performance cycle and not at the end; you should come armed with data)
- getting feedback (you should make your requests for feedback specific, as opposed to doing a general ask; one possible axis is to break it down by what and what you're doing and whether it's the right set of things to be doing vs. how and how you're getting things done)
- career growth (you should aim for these to happen about every six months or so; these should not just be focused on your next performance cycle, but on the long-term and what skills you want to be developing and if you're getting opportunities to develop those or not)

Outside of the content of the 1:1's themselves, I also want to explore that the style of the 1:1 is also customizable and that people should feel empowered to change how the 1:1 happens to make it more productive for them, whether it's in the way it happens (in a regular meeting room, sitting down vs a walking 1:1) or in the structure of the conversation (structured with an agenda vs a brain dump to talk through something). 

I'll touch on how to think through situations where people have bad / unsupportive managers: (1) give it a try and raise the issue that there isn't trust / you have needs that aren't being met right now, (2.1) if your manager's good, they'll do something about it, (2.2) if they still don't do anything to rectify the situation, it could be a sign that you might just have a bad manager or be at a bad company and that you should leave, (3) gut check that with mentors to get an alternate perspective and take. 

Lastly, I'll mention tactics that people can use beyond the 1:1 to strengthen their relationship with their managers, like doing more asynchronous offline updates.","Most people tend to take a backseat when it comes to 1:1's and their general relationships with their manager, opting instead to let their manager take the driver's seat. Given that many managers are typically self-serving and care primarily about addressing short-term business needs, it's generally not the wisest decision to leave something as important as career growth in their hands. To best guarantee chances of success, people need to learn to become their own best advocates and fight for what they want. 

This message is particularly pertinent for those early on in their career paths, as they have less work experience and haven't learned yet how to do this.","I want attendees to feel like they have ownership and autonomy over their relationship with their managers (and in extension, over their jobs and careers), which starts with being more assertive about getting what they want and need. More specifically, I want them to feel like they are empowered to bring up important topics that they want to discuss, to advocate for what they want (whether it be a different project, a promotion, etc), and to take charge of their upward relationships. ","In addition to feeling empowered, I want the audience to feel confident in going after these things and to not be afraid of making things awkward. ","I plan on interviewing folks in management and leadership positions (managers, directors) at different companies to develop a managerial take on this and to provide an alternate perspective. (The outline provided here already incorporates feedback from a director at Facebook.)","I've had my fair share of managers over the years, both at Facebook and at other companies, and have over time derived these different guidelines and best practices. I've had bad managers and understand how much negligent management can impact the way you think about your work, yourself, your skills, and your career growth; I've also had really good managers that have been incredibly supportive. Regardless of whoever folks have gotten from the managerial lottery, I want to empower others so that they can make the most out of their experience. ","I'm doing this talk at the Hopperx1 conference in Seattle later this week in March, and I'm excited to potentially present it at Codeland in July!","I may leave my job by the time the conference rolls around in July, so there's a possibility that I'll have to self-fund this trip - if that ends up being the case, it'd be super helpful to get travel and lodging assistance!",15 minutes,D,Talk,,,,,,,,
Jennifer Wadella,Jennifer Wadella,jennifer.wadella@gmail.com,"Jennifer Wadella has been writing code since before she realized it was a credible career path. She currently works as a JavaScript Consultant at Bitovi and loves building performant web applications, speaking at technical conferences, and brewing kombucha. Jennifer is an active member of the KC tech community and the founder of Kansas City Women in Technology(KCWiT), an organization aimed at growing the number of women in technology careers in Kansas City. She is the PubConf Sydney 2018 Champion, a Silicon Prairie Champion Award Nominee, Rising Trendsetter STEMMy award-winner, and is apparently Missouri's Coolest Woman according to Pure Wow.",,likeOMGitsFEDAY,female,White,,"Kansas City, MO",Women in tech who's built and run a wit community for the last 6 years with thousands of attendees and a leadership team of 50+ amazing individuals.,Employed as a full-time developer for over 3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Community,,T099: Community Organizing Crash Course,None,,"Welcome to the advanced class on community organizing. You’ve got a decent amount of members in your Meetup.com group, you hold events fairly routinely, maybe you’ve pulled in some legit speakers at your last conference or event … and you want to do more. This talk will focus on community organizing for growth and longevity by building out teams, improving communications, implementing processes, and most importantly will discuss how to maintain sanity in your work-life-volunteer balance. If you’ve ever had to answer the question “Oh, this ISN’T your full time job???” - this talk is definitely for you. If you’re just starting out organizing and don’t want to fall flat on your face, this talk will be very pragmatic for you.

This talk will be a highly condensed version of this blog: https://jenniferwadella.com/blog/10-commandments-community-organizing","Building communities is hard work! Developer communities, meetups, conferences are a crucial part of how we learn, and need to be run sustainably. ",How to build communities that are sustainable as a volunteer and keep work-life-volunteer balance in mind. ,"Inspired, empowered, and ready to build awesome communites. ","6 years of blood, sweat, tears, and experience. = )","I really feel the community organization I've built in Kansas City has solved a lot of problems that other communities have faced. I love to share that knowledge and our way of doing things - from running events to constantly iterating on our content with ""community first"" in mind. ",,flight + hotel,15 minutes,D,Talk,,,,,,,,
Kate Beard,Kate Beard,kate.beard@ft.com,"Kate is a former photographer, writer, barista, and linguistics graduate who found her love of programming early last year. She learned to code at London's nonprofit, peer-led coding bootcamp, Founders and Coders, and now works at the Financial Times as a junior engineer. When she isn't coding silly side projects in her spare time, she's probably drinking coffee, patting her guinea pigs, or thinking about drinking coffee and patting her guinea pigs.",,@sbinlondon,female,White,,London,"I have a 'non-traditional' coding background - I graduated from a peer-led, not-for-profit coding bootcamp in London at the end of last year. I studied humanities in university and felt decidedly non-technical until I decided to apply to the bootcamp, so I feel that I can bring the perspective of someone who is new to coding and always felt that they could never do it due to being bad at math, etc.",Employed as a full-time developer for less than a year,,"In-person bootcamp,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,My Coding Journey,,T100: The Joy of Making Silly Things,Demo of working code,"Screenshots and examples of exciting, 'silly' projects to inspire people","The Joy of Making Silly Things is a talk about my particular coding journey, the obstacles I’ve faced and overcome, and the ways I’ve found that help me to get past these obstacles.

First, I’ll talk about my introduction to coding: losing my job last year, people telling me I should consider coding, and my struggles with thinking I was not ‘logical’ or ‘mathematic’ enough to do it, even though I’d enjoyed doing HTML and CSS when I was much younger. In doing the prerequisite work for the coding bootcamp I eventually joined, I learned the basics needed to get onto the course, but it wasn’t always easy.

Next, I’ll talk about how going through the prerequisites and then the pre-course work, I found that when I hit obstacles and got frustrated, I found that if it was someone else’s tutorial or just dry documentation I was following, I always gave up more easily. It was when I began building things I was interested in and passionate about, even if they were ‘silly’ projects (i.e. not a weather app) that I began to learn more and overcome frustration and obstacles better. I’ll talk about how this has carried through and become something that has helped me grow throughout my coding course and now as my career has begun.

Lastly, I want to really drive home the inspirational message of my talk and leave the audience feeling good. I’ll share some of the projects I built in those early days, and some more recent ones; and then showcase other interesting, exciting, amazing ‘silly’ projects I’ve found by devs. I want people to walk away feeling excited to go build whatever comes into their head, whether they know how to yet or not, because that’s where the real learning happens - where you’re passionate and excited to build something.","When I first started coding, some concepts were super hard to get my head around. There are endless tutorials on the internet for whatever it is you want to learn, so often I would turn to them. But inevitably, things would be going well, and then maybe I’d get to a part in the tutorial that didn’t make sense, or wouldn’t work on my computer… and because it was someone else’s project I was following, instead of building something *I* wanted to build, I would lose interest and not follow through. It was only when I started building random things just to satisfy my random silly ideas or creative urges that I got so into a project, that I would stick with it through the difficult and frustrating bits to finish. I always ended up learning a lot more, even if it was things I didn’t think I’d end up learning. When you’re a learning dev/junior, everything is worth learning, so I found this really helpful and important.

I think a lot of people run into this ennui with tutorials and not following through sometimes when the going gets tough. I want to show people a way around it.","I want them to walk away feeling excited to code the silly ideas that pop into their head, and feel proud to share them with the world. I want them to realise that sometimes it’s better to take a step back and just build something instead of focusing in on a particular thing to learn. When they’re enjoying what they’re building, it feels less like hard work and can give you the determination you need to learn difficult concepts.",I want them to feel inspired and empowered to do the things that they need to do to progress in their learning or careers.,"The current version of this talk is a work in progress and I hope to find more concrete research regarding diffuse thinking and motivation for learning. But currently, I plan to reference Daniel Pink’s book about motivation, Drive, which talks about how focusing on a particular goal or reward can narrow our focus too much and limit our creativity in problem solving. I find this relevant to the material because I always find that when I code projects for passion and not to learn a particular thing, I have more fun, invest more time and thought into it, and end up learning more in general than if I narrow my focus on learning one particular thing.","I’m the right person for this talk because I’ve lived this experience over and over since deciding to learn to code. First it was in preparing for the bootcamp I applied to, where the pressure felt so high that I was solving endless algorithms and katas and following tutorials. I had to teach myself at first how to code for fun - to learn that it was ok to do things that weren’t on the curriculum or that felt frivolous. I ended up learning a lot from them and they gave me the motivation I needed to tackle other parts of coding that I was less excited about. Now that I code for a living, I still have to remind myself to do these joyful side projects and I always love it when I take the time to do them, and I always end up learning something useful.","I gave a lightning talk version of this at a local meetup and people really enjoyed it and said they felt inspired to go work on projects that they had been thinking of starting. It felt great to hear that, and I'd love to bring that to a larger audience. Also, slides for this talk come with a guarantee to include cute photos of my pets.",Coming from Europe so I think $700 would be the maximum needed (flights + 2 nights hotel),15 minutes,D,Talk,,,,,,,,
Anabella Spinelli,Anabella Spinelli,anabellaspinelli@gmail.com,"I've been working in the software industry for over 9 years, slowly making my way from QA to software development. Throughout this time, I've been a self-taught coding student, learning from free online courses, articles and projects I came up with to apply my new skills. About a  year ago I started working as a full-time front-end developer.",https://www.linkedin.com/in/anabellaspinelli/,@deutschevita,"Female, lesbian.",Hispanic or Latino,,Barcelona,"I'm originally from Argentina, but I've been living in Barcelona with my partner for the past year or so. I started working as a QA Engineer almost by mistake: I had dropped out of classical music school and I desperately needed a job. While working in the software industry I discovered that I really liked this programming thing and started learning a lot about it using free resources online. Last year, after achieving my lifetime dream of getting a job in Europe, I also got the opportunity to finally step into a developer role and I find that I'm loving it. Not only do I get to code all day, and feel my experiences and best practices become applicable, I find that I also love the social aspect of it: interacting with product owners, designers, business people, etc. And when I thought I had it all, 2018 ended with me giving my first talk ever in a conference. It was a thrilling experience and I found that it was something I want to try to explore more this year.",Employed as a full-time developer for less than a year,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,My Coding Journey,,T101: The path and the destination: lessons from becoming a developer with no preparation or experience,None,,"My talk will being with a brief intro to myself with a summary of my path to give some context: I'm from Argentina and when it all started I was a music student in college, but then I had to drop out due to some economic struggles in my family and I got a job as a game tester. Thus, I came into this industry by sheer chance. During the following years I changed jobs multiple times, always as QA and always trying to find new challenges and keep growing. At some point I decided I wanted to become a developer, but I couldn't find a way to make the switch. Finally, I accepted yet another job in QA, but this time in Barcelona, the city of my dreams. And it was there where a mixture of fortunate and unfortunate events with a lot of willpower finally landed me in the role that I wanted: a frontend developer.

The thing is, even after all that, I don't believe I have any golden key that will help people achieve their goals. I don't feel there was a solid strategy that I took to get to where I wanted to be. Even though I don't think of myself as an imposter at my job, I know that there was a lot of bad and good luck (and privilege!) involved in the way my story developed. And this is where I would get stuck: what can I share about my story that will valuable to people listening? 

Then I realised that by going into tech more by coincidence than by vocation I had to deal with a lot of common situations (interviews, salary negotiations, new positions, role changes) with zero preparation and almost no experience. Throughout those years I focused on learning, on improving for the next time and reflecting about each time something went well or bad, to get an idea of what worked best for me. And that those learning could be useful or relatable for people in positions similar to me back then. So these are some the lessons I learned along the way.

- Finding a job with (almost) zero experience
I did this a lot, specially during the first years. The most valuable lesson that I learned is that it's mostly about being in the right place at the right time. Your opportunity is out there, you just have to be there when it shows to get it. So don't filter yourself out, apply to whatever seems like it could be a fit for you. You're not expected to match all the ""requirements"", you'll see you can get an interview (and even a job!) without actually meeting a lot of those requirements. Avoid quitting a selection process because you feel unqualified, leave that for the people in charge of the hire. They know best.

Here I'll share anecdotes about failed and successful interviews and what we can learn from them.

- Starting in a new job.
The one thing that always repeats itself when I start on a new company is that the thing that I think will be the main challenge in a new position always ends up being a pretty tiny step to climb. The real challenge is always unknown, and this is great. Challenges are great because they keep you on your feet. Being underchallenged is way more scary in a job than that. Also, if you focus on the fact that the real challenge will probably be unknown until you're in the midst of it, then you can convince yourself to not get stressed about something you don't know. Instead, focus on doing whatever is necessary to keep your feet moving to the rhythm. Whenever I get anxious about future challenges I just tell myself: ""when you hear the music, start dancing"".

I'll also illustrate my points with my own experiences of starting in new, challenging jobs.
- Your CV is your own full-page ad
Building a CV is hard. It involves designing, copywriting, summarizing and all of that to sell yourself. I used to think the only thing that mattered was describing my experience, the better the experience, the better the CV. So I would just share my LinkedIn pdf export. I seriously did that. But the thing is, selection processes are not managed by machines. They're managed by humans like you and me. This means the more beautiful and engaging your CV is, the more chances you have of being picked from the lot. If you feel like design is your weakest suit, ask help from a chic friend. Decide on a look and a tone. A palette and a font. And only include information that's relevant for the positions you're looking for. Try to make your path make sense, give it logic, make them see your progress. 

- Junior devs as just as valuable as experienced seniors
It may feel like companies are doing you a favor by hiring you with no experience, but they're really not. Having a junior dev in a team is an incredibly valuable thing. In the most mundane aspect, you have a person that's excited to learn and do stuff others find repetitive or boring. But more deeply, the whole team grows by doing the tasks involved in contributing to a junior's growth. Coaching, pairing and mentoring are great experiences that will bring all of the team closer together.

- Being a good learner is more important than being an expert.
If you need to focus on just one important thing for your career, make it understanding how do *you* learn stuff. You'll need to stay up to date with new technologies throughout your whole career, so it's a great advantage to know yourself and what works best for you. Experts are great for tackling deeply complex issues, but having someone who can easily adapt and acquire new skills is also a very valuable and desirable profile. Try different learning methods and approaches and make sure you incorporate your own strategies into the learning process. Become a lifelong learner.

- Filter which potential employers will be a good fit for you
It's expected that the first jobs in your path will just be whichever positions you get offered. This is naturally how you build experience. But as you do, keep track of the different company profiles and workplace experiences you go through (by working there but also by only applying for jobs there) and learn to recognize them from the interview stage. Understand what suits you best and as you grow your career, start to target yourself into the kinds of jobs that you want.

Even though I feel I have achieved many of the things I've always wanted, like I said before, I don't believe I have the magic key to success: my story is full of dead-ends, roadblocks and being lost without a map. For the past year I've been trying to find a purpose for telling my story and struggling to find what was the takeaway, how did I get to where I wanted to be. But I realized that the path, and what we learn from it, is a lot more valuable than the destination and whether or not we reach it. So I hope that sharing my learnings as an unprepared junior technologist will help people going through similar stages to feel more confident and prepared for their challenges.","New and growing developers (like myself) and people changing careers and/or just coming out of a coding bootcamp usually find it hard to figure out how the tech industry works. I'll be sharing the things I learned by making my way into a developer job with nearly no experience or preparation. I'm not a decades-long expert but I think the attendees will be able to relate to the things I'll go over and apply them to their first interviews, jobs and challenges in the world of tech.","I wish they'll be able to take home at least one of the things I'll enumerate in the talk and use it to make their way into the next level on any of the subjects that I share. Either about finding a job, starting on a new position, finding their learning style or choosing their employers the same way they're chosen as employees, I hope there's something from my talk and experiences that inspires them to take a step forward in whatever they want to progress next.","I don't feel there's a magic secret about how I got to where I wanted to be. There were a lot of detours, roadblocks and dead-ends. I don't want to share a perfect recipe for success but some lessons that they can use to feel better about the first steps in software development. I hope they'll feel more confident about their new career and their position as ""beginners"".","Though this list comes from reflecting from my own experiences I don't believe I came up with these concepts and suggestions alone. I'll do a research on articles to further read on every subject: interviewing with no experience, starting in a new job, learning to learn, the value of having juniors and choosing employers. This way, I'll also be able to share a more thought-through commentary on each topic.","I feel I'm the right person to give this talk because it has been over 10 years since I joined the tech industry without having any experience, or related studies or any people around me to help me figure it all out. I've done a ton of interviews where I was clearly under-qualified for the position, I've started in over 7 new jobs in those 10 years, and every time it has been a different challenge, I've accepted positions that I knew weren't going to be good for me and I've tried about any learning path I've come across in my attempts to become a developer. But from all of that, I managed to learn something from every experience and be more prepared for the next time.","I'm excited about this talk because, like I mention above, I feel I've finally found a way to tell my story and give it value without having to pretend that there was a main reason, or some sort of discovery that finally got me to where I wanted to be.

Thank you so much for reading this!","My company may be able to pay for some or all of my travel expenses, but I'd have to ask them if one of my proposals gets accepted. I would need a flight from Barcelona and accommodation for myself.",15 minutes,D,Talk,,,,,,,,
Nicole Archambault,Nicole Archambault,nicole@lavieencode.net,"I'm a Boston area front-end web developer, coding career change coach, and EdTech entrepreneur. I'm also the founder of La Vie en Code, dedicated to new self-taught web developers.

My entire career is centered on optimizing the experience of those who choose to teach themselves programming skills in lieu of a more traditional academic setting, or bootcamp. ",linkedin.com/in/nicolearchambault,lavie_encode,Female,Other,Black/Native American,"Boston, MA","I'm a first-time speaker, and a self-taught coder. And I'm just about as intersectionally diverse as they come! I am a 33 year old queer Black, Native American woman (Wampanoag/Pokanoket).

I am also a veritable cornucopia of neurodivergence and mental illness. 🤣I have Asperger's Syndrome (Autism Spectrum Disorder), Bipolar 2 Disorder, and—get this—learned to code with a Non-Verbal Learning Disability. I've had to overcome so much to get where I am, and I'm extremely proud to be in tech. I was meant to be here.

I attempted a Computer Science degree in 2003 at Wellesley College, but was discouraged from continuing the major because I was struggling so much. I hadn't yet been diagnosed with the NVLD, which made abstract concepts incredibly difficult for me to wrap my head around them. Additionally, I was NOT a good fit for classroom environments. Still, I pushed forward.

Years later, after graduation, the recession, and a stressful career in Customer Service, I had a moment of serendipity. I lost my job, and decided to teach myself to build websites. When you love something, you always come back to it.

Now, with my coding skills, I've become an entrepreneur. I help others achieve their dreams via my online course + career change coaching program, 30 Days to Web Development. This talk actually fits in perfectly for me, because I love challenging myself to provide metaphors, analogies and examples. Because I needed them, and I've met many others that do too.",Other,"Previously employed as a full-time dev, now focused on online courses for coders","Online learning platforms,CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",In-person bootcamp",,Gaming,,T102: MUD to OOP: An Introduction to Object-Oriented Programming in Online RPGs,Other,"Video/GIFs of actual MUD interactions, lots of images and diagrams in plain english/JS","View formatted version here: https://docs.google.com/document/d/1XUm2skomr9nCdnAf8cW05i9gz-ypMTYKJvpOvB43QZ4/edit?usp=sharing

OPENING
- Welcome and thanks for attending my talk!
- I’m Nicole, self-taught front-end dev, EdTech entrepreneur, coder career change coach… and giant old-school online gamer nerd
- I love this industry, as well as #CodeNewbie!

TOPIC INTRODUCTION
- I played online roleplaying games as a young kid—one character just turned 20!
- Learned about the concept of OOP before I even knew what it was in a programming sense
- Basically, objects are the entire core of ALL types of games
- Hell, we ARE objects (omg meta)—we are, and we do!
- I’m going to highlight different in-game object types in online roleplaying games specifically, and model them as a JavaScript object with properties and methods, depending on what they can do!
- By the end of the talk, you’ll understand how objects work in a real-life (well, technically fantasy) sense—helpful especially if you’re brand new to OOP/coding in general

OBJECTS IN GAMES
- Main reason I love this topic: I had a role as a “builder” in a few games—got to use all of this first-hand, and understand it
- I used commands to create rooms, items, non-player characters, and generally interactive components to have properties, and do things
- The commands I used were abstract from the ACTUAL OOP, like “create [prototype/class] [subclass1]” etc
- [show example of a few different “objects” in RPGs (weapons, non-player characters, etc)]
- How are they objects? Like I said, literally everything in the game is built off of a prototype, or class
- It keeps going deeper and deeper the more specific an item gets—as it gains more specific properties and specific methods (ex. 1-handed vs 2-handed sword)
- The cool part is how these objects interact with one another; a concept that was difficult for me to understand until I realized what to compare it to
- A weapon causes damage to a player, food increases a player’s health, spellpower, or energy
- But objects in games also serve an important purpose: to provide not only interactivity, but also structure and consistency across the different elements of the game.
- Also solves the problem of recreating the wheel (DRY)
- MUD admins can use existing prototypes to build off of rather than having to set the attributes of each item object

LET'S MODEL SOME OBJECTS IN JS
- First object: A sword
- [show example of sword item]
- Class: Weapon
- Ask yourself: What do all weapons have in common?
- When I create a sword, I technically create a weapon—but with additional elements that make it a sword specifically
- [show simple example of Weapon class object in JS with basic prop/methods]
- Audience participation: What makes a sword a sword, versus a mace or an axe? [show images of each cuz not everyone is a nerd like me]
- Ask yourself: What do swords do? (cause damage, maybe have a particular weight, perhaps become damaged over time as well)
- Characteristics of the sword are its properties—they cut, for example, not bash
- The actions of a sword are its methods—inherited basic attack obj interaction from ""weapon"" class
- However, ""sword"" has modifiers that deal different damage modifiers to different types of armor, etc
- They will be different from the properties/methods of the “weapon” class, BUT sword inherits those properties and methods as well!

- Second object: Food
- Class: Consumable (not food, surprise!)
- Audience participation: What do all consumables have in common? (they affect the player’s properties positively or negatively—bread vs poison, disappear after use)
- Piggybacking on sword example: How is FOOD unique compared to just being a consumable?
- What happens when you consume food? Object interacts with player object (health/energy), then is destroyed
- Food object interaction with player object—example of how objects interact with one another
- Method handles increase/decrease in health or energy, properties of player object are modified

CLOSING
- Sooo many other fun examples of how this works
- View the infographic on my site, join the newsletter
- Hope you’ll look at roleplaying games differently, and how we can learn from them!
- Have a great conference! <3","Many new programmers struggle to understand how objects work, and how to create and manipulate them with Object-Oriented Programming. Sometimes, they don't understand why they're necessary, or what they look like. I had difficulties understanding the concept of classes and protoypes, because they were fairly abstract to me with a non-verbal learning disability.

Additionally, objects serve an important purpose in online gaming in particular, and solve issues surrounding recreating the wheel with in-game object attributes that should instead be inherited.

Because virtually all new coders going through front-end and back-end programming from the beginning will encounter Object-Oriented Programming, understanding how it works in simple terms is incredibly important. I hope to solve that problem with the examples in my talk!","Attendees will gain valuable knowledge of how Object-Oriented Programming works, with a fun, unique, and fantastical context! I'll be deconstructing different types of objects, which will effectively work as context AND example in one.","I want attendees to feel enlightened by a fresh, unique perspective on both online roleplaying games (which they may have already had interaction with) and the Object-Oriented Programming principles behind them. Maybe even excited to check out online roleplaying games themselves!","I'm planning on having a ball with my research! 😊

First off, I will be doing a deep-dive revisit of objects in JavaScript. JavaScript is my primary language, but due to the nature of my work (focused lately on coaching and course creation), I'm veeeery rusty. I want to make sure I know what I'm talking about. I'm VERY good at independent researching, and plan on leveraging both online resources as well as input from the MUD community. (I know an admin who's been running a MUD for 23 years)

My talk wouldn't be complete without some quick videos to describe the games I'm discussing. I haven't played the MUD I was referencing above, Lensmoor, in years. I announced that I would be returning to do a little research, and a friend brought to my attention that my character was TWENTY YEARS OLD. 😱😱","I'm the PERFECT person to give this talk, and I'm amped at the idea of presenting such a personal topic to help others understand coding!

I spent the majority of my childhood playing online RPGs, and was floored to realize that object-oriented programming made sense once I began thinking of it in terms of my gaming experience. My expertise is my passion for online gaming, and my ability to connect it to the real-life example of online RPGs in order to help new coders contextualize complex topics—my other passion. :)","I'm SOOOO excited for this year's Codeland and will be there whether or not I'm selected (but please select me, it's gonna be a bangin' talk, I love this topic! 💕)","Hotel/gas needed, I'm driving 3.5 hours down from Boston",15 minutes,D,Talk,,,,,,,,
Estevão Lucas,Estevão Lucas,lucas@work.co,"Estevão Lucas is a Lead Developer at Work & Co, a technology and design firm that partners with companies like Google, Epic Games, Apple, Lyft, IKEA and others to develop core digital product experiences. A native of Brasilia, he spent time working on mobile and web development projects for brands ranging from Fiat to MTV to Sony and BlackRock, before moving to Brooklyn nearly three years ago. He’s currently working on new platform and digital app development for Embraer and Cava Grill.",https://www.linkedin.com/in/estevaolucas,https://twitter.com/estevao_lucas ,male,Hispanic or Latino,,NYC,"Lucas is a self-taught and passionate developer, who started learning HTML reading source-code from random and attractive websites when the major browser was Internet Explorer 6. Has worked for some major digital agencies in Brazil, had experience as a partner for a tech shop and delivered projects for large brands.Proud dad of a 4-year-old boy, who loves to play soccer at home and listen to a different bedtime story every night. Lives in NY having kids-friendly experiences with his family as much possible. Likes to stay around of problem-solvers and strong willpower people which can influence in a positive manner. Always tries to find some free time to give back to the open-source community what has received from it through code contributions.",Employed as a full-time developer for over 3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Career,,T103: Beyond The Hard Lines: Cultivating Communication Skills to Be a Better Developer,Other,Just a deck,"Technical skills, productivity and efficiency are the foundation of being a good developer. 

Blossoming into a great software engineer, however, requires another set of skills that won’t be earned at the end of even the best bootcamp. It requires years of on-the-job experiences and feedback -- some of it personal, even hard-to-swallow -- to learn the human traits that developers can make for XYZ. 

Note: these are not “soft skills”. That would imply they’re less important. 

Some of the practical recommendations my talk will touch on include: 

Speak up to stay on course. 
Your voice is one of your most important tools. If the design feels off, the solution proposed doesn’t make sense — say it. You have the power to help prevent the project going off course. It’s just part of your job, so the sooner you feel empowered to vocalize your questions, the better.  

Don’t estimate to impress. 
Keep improving your estimation. Realizing your estimations are off is actually a good thing. Time-box  and communicate back to your team in order to avoid being a bottleneck, or having to work unnecessarily long hours. 

Ask for help (at the right time). 
While it’s totally advisable to ask for help when needed, there’s also an art of balancing how you do it. Too-quick check-ins aren’t always productive, but neither can an entire day be reserved for getting support. It’s best to explore different alternatives, research, or make a quick POC first. One of the biggest reasons why? This will give you the confidence to be more independent. 

Practice taking ownership.
Always be on the lookout for ways to carve out more ownership within a project.  Ask your team for something you can “grasp the nettle”, take a chunk of work and run with it. Don’t be too quiet or introspective -- be part of the discussions. It will get you out of your comfort-zone.
",Professional experience is teachable. It’s far easier to learn a new programming language than it is mastering communication skills or having the right attitude to work well within a team. It takes real-world learning. Realizing I’d cultivated these was an inflection point in my career. ll developers should see it as a responsibility to share best practices when possible to help propel our collective careers. ,Attendees will walk away from this session with a broader perspective of what makes a developer successful in their career. ,Interested to learn move about communication skills,"blog posts, researches, tweets, etc","Even with some good years in this career, the experiences that I've been having lately in terms of getting out of my comfort zone and trying to improve my communication skill (especially being a non-native English speaker) make me feel empathy with entry-level developers",I'm nervous and excited about this CPF because it can be my first public talk (I'm an introspective person and I've been trying to get out of my comfort zones) ,,15 minutes,D,Talk,,,,,,,,
Nicolas Bontoux,Nicolas Bontoux,nicolas.bontoux@sonarsource.com,"From Cisco Systems to SonarSource, Nicolas always wanted to ‘give a hand’. It started with setting up cool and useful CI tools for his colleagues, then helping build products that are easy to integrate, and that above all make users happy. That’s how he ended up doing technical support at SonarSource, and ultimately joined the Product Marketing Team in order to exchange about code quality with the overall development community.",https://www.linkedin.com/in/nicolasbontoux/?locale=en_US,nicoallgood,Male,White,,"Geneva, Switzerland!","All my experiences are connected to software engineering (Python testing, CI setup, code quality etc.), but I've never aimed for deep expertise in a topic/skill. It has always been about understanding the big picture, helping people integrate the software, helping them use it, helping them maximise the value (and get a smile on their face). Switching from a 70K employees global corporation (Cisco Systems), to a ~100 folks open company (SonarSource) has been an eye opening experience and opportunity. I think I can contribute a perspective on the true power of open product communities, the opportunities that it creates, but also how it shapes the way you will grow your product and communicate about it.","Casually code, but coding is not the core part of my profession",,CS degree,,Community,,"T104: You don’t just build communities, communities build you","Code samples,Other",Real examples of simple yet powerful interactions on a product community forum,"Beginning: the product my colleague work on, predates the company we all work for. That very product is in fact an order of magnitude better known than our company. The community around our product existed before any of us got to work for our company, it shaped how we evolved, how our product evolved.
Middle: here are vivid examples of interactions on our community forum, that speak to the power of open communities, and to how the community is an integral part of product experience. The diversity of profiles and background opens up new perspectives on where to go, on how to grow, all while staying true to your culture.
End: embrace product communities from the get go, build one if you don't have one, choose good tools along the way (we're using Discourse and it opened up so many opportunities), nurture community discussions, and let them impact you and your product in ways you wouldn't have expected.","It's about interacting with your user community, providing as much value as you can to it, beyond the product itself. Any coder is growing thanks to a trove of information available in online forum/communities. That code, that software you're writing, will also end up having its online community. Embrace that community from the early start, and the payoff will be huge.","They'll get back to their coding project, to their product, and they'll think: 'Men, do I interact as much as I can with my users out there?' and if unsure then they will put something in place to gather this community, nurture it, and grow with it.","Excited about the opportunity created by open products in terms of interactions, about the diversity of online communities, about the good vibes that can be shared through it.","I will have to structure this out, but what comes to mind is the standard guidelines/trends that have grown on mass-volume sites like stackoverflow, or true stories behind products like Discourse (https://blog.codinghorror.com/civilized-discourse-construction-kit/ ; https://blog.codinghorror.com/ ). Can look for related research too, granted that the origin of this submission comes from personal story.","I've moved from commercial support to community support, I've led the change to a whole new platform for community discussions (Discourse), with the constant intention to share more good vibes with our community, bring more value to it. It's those same good vibes that I want to echo in this talk.",,,15 minutes,D,Talk,,,,,,,,
Kristen Webster,Kristen Webster,kristenweb@hotmail.com,"I'm a Software Engineer with a rich background in computer science, psychology, and writing. I enjoy bringing all my skills to every project I create. My hobbies include writing, traveling, and playing the piano.",https://www.linkedin.com/in/kristen-webster-developer/,,female,White,,"Seattle, WA","I came to tech a few years ago from a roundabout path.  I already had a degree in English Literature, and a graduate degree in Counseling.  But after I moved to Seattle from Virginia, I was exposed to the excitement of the tech industry.  I took an intro programming class at a community college, just to see if I enjoyed it.  And I loved it!  I still remember the first night of class when I wrote my first program and made an image of a turtle move in a square on the screen.  I was hooked.

I decided to pursue programming more intensely, and I got a postbaccalaureate degree in Computer Science.  While I attended school, I supported myself by running my own book-scanning business.  This is one of my proudest accomplishments.

My diversity of interests and hobbies helps me every day on the job.  I believe I am a more compassionate, empathic, user-focused engineer because I see the bigger picture, and I weave my background - and my life itself - into my work.",Employed as a full-time developer for 1-3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Art/Creative Coding,,T105: Art Meets Algorithms,"Code samples,Demo of working code,Other",Plenty of compelling images and gifs,"Beginning: 
 - Present the problem:  How can art help us understand algorithms?  How can we apply algorithms to create compelling art and user experiences?  Art and algorithms:  a likely pair!
- Show examples from Mike Bostock (https://bost.ocks.org/mike/algorithms/), deepart.io, and Craig Kaplan (http://www.cgl.uwaterloo.ca/csk/projects/tsp/) 
- Show examples of my own Traveling Salesman Problem and minimum spanning tree art (this is my own computer-generated art)
- Tell audience that I will describe and illustrate my own process that I used to create my Algorithmic Art project (and this project helped me land multiple job offers)

Middle:  
- Pictures can be understood as graphs, and pixels are the individual nodes
- When we understand pictures as graphs, we can apply graph algorithms to art
- Overview of Traveling Salesman Problem, with compelling images and diagrams to illustrate the problem and how it relates to art
- Show brief code sample from my own Algorithmic Art project, and more art examples
- Overview of minimum spanning tree, again with compelling images and diagrams to illustrate the problem and how it relates to art
- Show another brief code sample from my own Algorithmic Art project, and more art examples

End:  
Takeaways 
- Art is a useful learning tool in the study of algorithms
- Graph visualization doesn’t just involve numerical data sets - widen your perspective to see data sets in unusual places, such as art and photos
- You can find more ideas by imagining the relationships between algorithms and other artistic fields such as music, writing, dance, etc.
- Challenge the audience to use this talk as an inspiration to look for more opportunities to apply creativity to the study of Computer Science","How can art help us understand algorithms?  
This problem is interesting to attendees because it will illuminate two graph algorithms, and provide inspiration for attendees' own creativity.","The takeaways are twofold:
1.  First, I want the audience to leave with a better understanding of two algorithms - Traveling Salesman Problem and minimum spanning tree
2.  Second, my higher-level goal is to inspire and empower the audience's creativity, to help them use their own life experience and interests to better understand algorithms and Computer Science","Inspired, uplifted, curious to learn more.  Intellectually and emotionally engaged.","'- Examples from Mike Bostock (https://bost.ocks.org/mike/algorithms/) 
- http://www.cgl.uwaterloo.ca/csk/projects/tsp/    
- deepart.io  ","I created an Algorithmic Art project, including an online gallery of TSP art on my website - and it helped me get multiple job offers.  Here is my website, which contains my Algorithmic Art project (with case study and photo gallery):  http://www.kristenwebster.net/ 
Additionally, I feel passionate about this project's potential to help people better understand algorithms!",,"Roundtrip flight (Seattle - New York)
Hotel for three nights",15 minutes,D,Talk,,,,,,,,
Norah Klintberg Sakal,Norah Klintberg Sakal,norah.klintberg.sakal@gmail.com,"I'm a 30-year-old self-taught data scientist and entrepreneur from Sweden living in San Francisco. I'm currently bootstrapping a startup where I am applying artificial intelligence to help cancer researchers understand how their novel drugs are affecting their cancer and stem cells. My passion and mission are to accelerate the development of new technologies that will help researchers and doctors to cure, prevent and manage diseases.",https://www.linkedin.com/in/norah-klintberg-sakal/,@norahsakal,Cis female,Other,"Born in Ukraine, by a Russian mother and a Ugandan father. Raised in Sweden. Skin tone says mixed black.",San Francisco,"I'm passionate about encouraging people from all background especially woman and under-represented groups.  My very first conference talk was a lightning talk at Twitter (San Francisco) last year that sparked me to send talk applications to various Python conferences around the world. 

I am deeply passionate about (obsessed with) artificial intelligence and showing its practical abilities on day-to-day problems. So far I have been given the honor of giving encouraging and inspiring conference talks about AI and deep learning at a number of Python conferences; PyConAU in Sydney (Australia), PyConCA in Toronto (Canada), Swetugg in Stockholm (Sweden), PyCaribbean in Santo Domingo (Dominican Republic) and most recently at PyCascades in Seattle. I'm fortunate and happy to have received amazing feedback (here is some feedback from previous talks; https://s3.amazonaws.com/norah-klintberg-sakal-feedback/norah_klintberg_sakal_feedback.001.jpeg) but I'm still learning, and every piece of feedback helping me improve my future talks and public speaking skills.

I've hade a longer version of this talk at PyCascades in Seattle earlier this spring, the livestream video can be seen here; https://www.youtube.com/watch?v=hAnCiTpxXPg&feature=youtu.be&t=20038",Other,"Self-taught data scientist, started with deep learning 2 years ago and I'm currently bootstrapping my own deep learning startup within cancer research","""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms,Other",Side projects and own startups,Other,Practical artificial intelligence beginner tutorial,T106: Guide to your own artificial intelligence application in 3 easy steps,"Code samples,Demo of working code,Other",Demo of live deep learning algorithm training ,"0. Description
How difficult is it to build your own intelligent application? When you hear “artificial intelligence” you might think of complex solutions as self-driving cars, autonomous drones, and robots or smart assistants as Alexa or Siri - but it doesn’t have to be that complex. You can build a powerful image classification model within a topic that inspires and interests you - with 3 easy steps.

1. First part - what does a furniture ad generating algorithm have in common with cancer research? 
First, find a topic that interests you; it can be something that inspires you, excites you or a super simple day-to-day problem you’re facing. Which of your skills are matching your interests and other topics that excite you? Use that skill set to the next step, which is creating your own data.
My day-to-day repetitive problem was the daily makeup routine; it takes time and its quite uninspiring but when you finally decide to try something new - you literally get over 30 million results when search for “makeup tutorial” on Youtube and beauty being a $400 billion industry indicates that makeup plays a significant part of people’s lives. How do you even know what makeup style will look as good on you as it does on all the YouTubers?

2. Second part - data, data, data, and some more data
Okay so you have an idea, sprung out of your interest, passion or day-to-day problem - but how do you find data to train your algorithm? I'll show you how you can transform and reannotate existing and open datasets by applying your own expertise. (You might think you need thousands of images, but what do you do when you only have ten images in your dataset?)

3. Third part - train your own model within less than 5 minutes
Now you have all the ingredients; an idea, your own dataset and it's time to train your model. I've prepared a network which trains a model and creates an app according to your idea, but what does the neural network actually see in your data? Let's have a look at how a convolutional neural network actually interprets your images; how does an algorithm understand how to interpret images? I've prepared visualizations of what the algorithm actually see while it trains to become an expert of your data.","How difficult is it to build yourself an own intelligent application? When you hear “artificial intelligence” you might think of complex solutions as self-driving cars, autonomous drones, and robots or smart assistants as Alexa or Siri - but it doesn’t have to be that complex. You can build a powerful image classification model within a topic that inspires and interests you - with 3 easy steps - and you don't need thousands of images to achieve state of the art results. 
First, find a topic that interests you; it can be something that inspires you, excites you or a super simple day-to-day problem you’re facing. Which of your skills are matching your interests and other topics that excite you? Use that skill set to the next step, which is creating your own data.",The essence of the talk is to encourage and inspire the audience to implement data science on niches and verticals that aligns with their own interests. The key takeaway is that it is possible to get state of the art results on niches which lack data and that it still exists “low hanging fruits” in numerous verticals.,"This talk aims to encourage and inspire to get new ideas on implementing data science on day-to-day problems. The purpose is also to show how easy it is to build yourself an own powerful image classification model in Python, with your own data, within a topic that inspires and interests you. I’m eager to show how few lines of code can get you a whole application, and the focus with this talk is to concrete and showing code examples while walking through the machine learning parts and giving some basic background to deep learning, and lastly training a model live on stage.

The essence of the talk is to encourage and inspire to implement data science on niches and verticals that aligns with your own interests.
The emphasis of this talk is to inform that it is possible to get state of the art results on niches which lack data and that it still exists “low hanging fruits” in numerous verticals.","- Keras Tutorials

- FastAI videos
- Blog posts
- Lots of feedback on own side projects ","I'm a 30-year-old self-taught data scientist and entrepreneur from Sweden living in San Francisco. I'm currently bootstrapping a startup where I am applying artificial intelligence to help cancer researchers understand how their novel drugs are affecting their cancer and stem cells. My passion and mission are to accelerate the development of new technologies that will help researchers and doctors to cure, prevent and manage diseases. 

For me, it all started 2 years ago; I was doing my regular makeup routine in the morning and searched for a ""makeup tutorial"" on YouTube to get some inspiration. The only problem was that I got more than 30 million results, how would I possibly know which one of these 30 million videos that would show me makeup techniques that would suit my particular face and especially, my facial features? Being passionate about the possibilities of AI, I immediately thought; ""this MUST be solvable using AI"". So without any prior deep learning knowledge, I  built an image classification model in Python which can recognize your eye shape with convolutional neural networks and by that recommend different makeup styles that suits your particular facial features. 

Further down the line, I also discovered that beauty is a $400 billion industry, that indicates that makeup plays a significant part in people’s lives. How do you know what makeup style will look as good on you as it does on all the YouTubers? The model I built is trained on various images that I annotated myself with open and available data. The algorithm is built using very simple convolutional neural networks with a pre-trained model (VGG16) fine-tuned on my annotated data. The results are a model with ~90% accuracy so I decided to take it further and built an app that can inspire others. 

This is how the finalized app works; You just snap a photo with your webcam or smartphone at the web app, and the algorithm tells you which shape you have + suggests makeup styles matching your eye shape to enhances your features. The app itself is built in Flask, a simple Python web server framework, which orchestrates the backend and communicates with the frontend and trained neural network.

After launching the app and having hundreds of people snapping photos of their eyes and getting their most suitable makeup, the most prominent feedback was; ""I have an idea, data and now I'm eager to train an algorithm, but I don't know how."" I was already sharing all my code, both frontend, and backend, in public GitHub repos but I got the urge to build a solution that could be a stepping stone to people curious to training their own AI app within 15 minutes. So I did, and this talk ends with me demoing training a model in realtime, with a minimal dataset to encourage the attendees to apply AI on their own interests, passions, and day-to-day problems.","The essence of the talk is to encourage and inspire to implement data science on niches and verticals that aligns with your own interests. The three steps of the talk consist of first deciding on an interest, passion or day-to-day problem, secondly how to create data based on the interest or experience and lastly training a model. I built this classification model with very little experience, and the emphasis of this talk is to inform that it is possible to get state of the art results on niches which lack data and that it still exists “low hanging fruits” in numerous verticals.","I'm currently bootstrapping my own startup, so I'm funding my own trip; therefore are travel grants much appreciated, but I understand that it is not always possible. I'm beyond excited to join conferences, and I've mostly been funding all my trips myself.",15 minutes,D,Talk,,,,,,,,
Amanda Hasenzahl,Amanda Hasenzahl,hasenzahl@lewiscommunications.com,"I am a self-taught web developer who made the career change from outdoor recreation and customer service to tech and web development about two years ago.  I currently work full-time at an ad agency, Lewis Communications,  in Nashville, TN.",https://www.linkedin.com/in/alhasenzahl/,@alhasenzahl,female,White,,"Nashville, TN","Like I said above in the bio section, I am a self-taught developer and have made the successful switch from outdoor recreation and customer service into tech.  It took a year from when I first started learning code to when I was finally able to get hired at my current job and I have been at my current job for coming up on a year (in May).  My journey so far in tech has been all of two years, but my path to get here was very unconventional and I think my different path gave me a unique set of skills and point of view from everyone else.  I came to tech from working on challenge courses as a facilitator for 5-6 years, working as a summer camp counselor for several summers, working in a natural foods kitchen and juice bar for 3 years.  I used to view these prior experiences as a hindrance because they were in no way related to web development and I didn't have the experience I needed to get hired.  But, now I see them as an x-factor and something that I have that sets me apart from everyone else.  I might not have had all of the tech experience or a tech degree when I made the switch, but what I did have was a well developed set of soft skills from working on challenge courses, the ability to work in a team from working at camps, and the ability to think on my feet and be adaptable from working in a fast paced, ever changing environment of a kitchen.  These are all skills that lend themselves really well to being a great developer and I just want to be able to show the people that may have a similar path to mine that they can embrace their past experiences and use them to be successful too.  I want to be able to show those people that even though it might be hard, it can be done and they can be in this industry too.",Employed as a full-time developer for less than a year,,"Online learning platforms,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Community,,T107: Understanding and Overcoming Imposter Syndrome,None,,"Beginning → Sharing a brief version of my story: How I got into tech and getting my first job.  Sharing my story first allows the audience to hopefully relate to some part of my journey, but also understand why I relate so strongly to the feeling of imposter syndrome and why I chose to speak about it.   

Three years ago, I was a camp counselor in the summer at an all girls sleep away camp in Maine and during the rest of the year, I was a produce manager at a local organic food store.  I was 24 years old at the time and really started wanting to find my purpose and what my career path was going to be.  I was starting to feel lost and like I wasn’t living my best life.

I came across an ad for Skillcrush, an online platform that teaches people a wide variety of tech skills.  First I took their Visual Design class and then I took their Front End Developer class.  After finishing those classes, I started diving into any resources that I could find to help me continue to learn and practice (Codecademy, Free Code Camp, Treehouse, Udacity) . It took me about a year from when I started learning to code to land my first job as a developer (my current job) at Lewis Communications in Nashville, TN.

My first few months at Lewis were eye opening.  It was my first time in a professional development environment, so it was a culture shock for me big time.  I had never worked with another developer before and had to try to learn how their workflow and process worked as a team.  I would sit through our lunch and learns listening to my co-workers give presentations about the inner workings of our custom framework or loading asynchronous code and just think to myself, “I have no idea what they’re talking about right now.”

I have been at Lewis for almost a year now and am just now starting to feel comfortable in my role here and have a better understanding of what it is that I’m actually doing and how everything works.

Middle → Get into Imposter Syndrome: What is it? Why do we experience it? Who does it affect?

What is it?: 

* It was finally given a name in 1978 by American psychologists, Pauline Clance & Suzanne Imes.  
* They defined it as “phoniness in people who believe that they are not intelligent, capable, or creative despite evidence of high achievement.”  
* These people are also constantly living in fear that they are going to be found out or exposed as a fraud.

Who does it affect?:  

* Share cases of imposter syndrome in famous/successful people (Maya Angelou, Michelle Obama, etc.) This can help show that it even affects the most successful and well-known people.  
* Have people in the audience raise their hands if they have ever felt this way before.  This will help to visually demonstrate how many people experience this feeling, especially in our industry.  

Why do we have this feeling?  What causes it?

CULTURE/SOCIETY:
* Our culture has always taught us to play small, not talk too loud, not to reach too high
* We’re taught to have humility and not hype ourselves to others because it makes us egotistical or cocky
* Women and minorities, especially, aren’t used to having a seat at the table and aren’t made to feel comfortable taking up space.  Our culture doesn’t always lend to us having a voice or feeling that our voice matters

COMPARISONS:
* It is such a huge part of our lives, especially now with the overwhelming importance of social media platforms in today’s culture.
* We start comparing ourselves to the highlight reel moments that someone else has chosen to share with everyone
* Even in real life, we compare ourselves to what we think other people are and use that to make judgments about our own worth
* We see other people doing something really well and turn it around on ourselves in a negative way “why can’t I do this as well as they can?” “I’m not as good as them.”
* “Stop being jealous of people in their winning season.  You don’t know what they lost in their losing season.”

INTERNAL/PERSONAL STRUGGLES:
* We have a sense of not being worthy or deserving of something 
* There is a lack of self-confidence and self-worth
* These feelings can be magnified by the comparisons and social media perceptions

How do I overcome this?

Imposter syndrome is something that never goes away, there isn’t a cure or a magic pill.  But there are strategies that can be used to learn to overcome the feeling.

JOURNALING/WRITING
* If that feeling ever arises, stop and take a second to think about why you might be having that feeling and where it really comes from.
* Take out paper and write whatever comes to mind.  Get everything out of your head and onto the paper.
* Having the visual of words on paper and the release of your thoughts from your mind, it allows you to start to dig in and really understand what that feeling means to you individually
* Although imposter syndrome is experienced by so many, it is going to be felt and experienced differently for each person.  It’s not a one size fits all.
We all have our own triggers/reasons why we feel this way, so it allows us to stop our thoughts from spiraling and have more control over them

SPEAKING ABOUT IT
* Imposter syndrome is something that takes place solely in our minds
We create a narrative in our heads that tells us that we’re the odd ones, that we’re the outcast, that we’re in this bubble by ourselves and no one else would understand
* Talking about it out loud allows us to pop that bubble we have pt ourselves in and change the narrative that we play in our heads
* It allows us to begin to relate to those around us on a deeper level
* “No one wants to admit that they feel inadequate or that they fear people see them as a fake, so they suffer in silence and that isolation breeds even more negative feelings.”
* Of the people that have felt this before, raise your hand if you have ever told someone or spoken about your imposter syndrome
* Have them turn to the person next to them and share a time that they felt imposter syndrome with that person

FLIP THE SCRIPT
* Changing the narrative in our minds and changing the ways in which we speak to ourselves 
* Create a mantra or a couple positive words of affirmation
1) Share mine as an example
2) These can be plastered up in your office, in your car, in your house
3) They can be put anywhere that you are going to see them all the time and be able to remind yourself of who you really are, not what kind of person your mind has been wired to tell you that you are
* Does this help or hinder me?
1) Reframing your thoughts and acknowledging the things that are no longer serving you or are no longer aligned with your goals
2) Putting your energy into those that are going to help you and removing yourself from what isn’t
* Breathing exercises and meditation also can be extremely useful in centering our thoughts

End → 
THE ULTIMATE GOAL:
* Although there is no real cure or magic pill to all of a sudden rid yourself of imposter syndrome, the only true way to step out of that feeling is to step into who you are and your authentic self wholeheartedly.
* Disassociating yourself from other people’s opinions and thoughts and allow yourself to just be your authentic self
* Giving yourself permission to be yourself no matter what
* This requires the most work personally to achieve.  It’s not glamorous, it’s dirty, hard, and takes a long time.
* Once you learn to fully accept your authenticity, you won’t know how to be anything but authentic.

LAST THOUGHTS TO LEAVE YOU WITH:
* Get to know yourself, peel back the layers of who you are, why you are that way, and what you want for yourself going forward?  
* What are your goals and are the things in your life aligned with and serving those goals?  
* What about those things is holding you back from being that person?
* You’ll never truly be able to overcome your imposter syndrome until you are able to step into your authentic self and start living unapologetically as your true self in every way.","Imposter syndrome is huge in the tech industry, especially with those that are coming from other industries or are just starting out.  I want to be able to draw back the curtain on it and really try to help people understand what imposter syndrome is, what causes it, and what steps can be taken to help overcome it.  I think it is something that everyone can relate to at some point in their careers and it is something that connects us all together as developers and as humans.  It is often times something that a person feels on their own, but I think this could be a great way to put it out there and show people that it affects more people than they think and they aren't alone in it.","I want people to be able to begin to understand their own feelings a bit better, be able to realize they aren't in this alone, and perhaps a strategy that they can begin to utilize whenever the feeling arises for them that allows them to take control of the situation and their feelings instead of the other way around.  I would really just be happy if at least one person left feeling like they were understood and that they had some tools to help them be a better version of themselves going forward.","I want people to feel like they aren't alone, they are understood, and they have the tools and strategies to help improve who they are as a developer and who they are as a person.  I want people to leave feeling inspired and motivated to work on themselves and to want to be the best version of themselves in every way.  I want people to leave knowing that they are capable of whatever they set their minds to and are willing to do the work to achieve and the only thing holding them back is themselves.","I have been reading both news and academic articles as well as listening to podcasts and interviews about imposter syndrome and different strategies for overcoming it, that I intend to include in my talk.","I feel like I am the right person for this talk because I felt like an imposter when I first started learning code, when I was first hired at my job, and even now.  I have felt this feeling more times than I can count.  I feel like I understand it and the chaos and the turmoil that it can potentially create in your mind if you let it.  I have done a lot of work with myself the past couple of months to try and understand that feeling and overcome it.  So I just want to share my experience and what I have learned and the strategies that I am using to try and overcome it to be my best self with other people.",,"My company is able to cover my flight to and from the conference, but I would need help covering my hotel, if possible.",15 minutes,D,Talk,,,,,,,,
Danica Sapit,Danica Sapit,danicasapit@gmail.com,"Danica Sapit has been a full-stack software engineer at Adobe for the past year working on the website builder Adobe Portfolio. She graduated at Rutgers University in 2017 with a degree in Electrical and Computer Engineering and founded part of the STEAM (Science, Technology, Engineering, Arts/Humanities, and Mathematics) student initiative (more info at steamwith.us). She is a hobby artist.",https://www.linkedin.com/in/danica-sapit-0bb9b983/,,female,Asian / Pacific Islander,,"Brooklyn, NYC","I am a Filipino-American, queer young professional who started out in Chemical Engineering and then switched to Electrical Engineering and Visual Arts. I discovered web development was approachable, visual, and interesting and combined a lot of my loves between the arts/humanities and technical development, so I started to learn more on the side, so I also took on Computer Engineering and learned web frameworks on the side. I’m currently the youngest person in my office in Adobe and have been learning a lot from my team, most of whom come from non-traditional backgrounds (music, art, media studies). I was never gifted in math as a child and was fervently against computer science as a career when I first heard of it, but I grew to view it from an artistic mindset as a form of creation and experimentation.",Employed as a full-time developer for 1-3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",CS degree",,Other,I am not sure if this counts under 'Health' or 'My Coding Journey',T108: Working towards Mental-Health-Accessible Code Development Processes,Code samples,,"Beginning:
======

I’ll set the scene by talking about how I have suffered with severe depression and anxiety, especially performance anxiety, throughout my life and how it has affected my memory and productivity in the workplace. I will also talk about how a recent coworker, who had gotten into a coma a month before starting and had lost all of his basic functional knowledge and long-term memory, had tremendous trouble working on the codebase once he finally came in because of similar, more severe memory and self-worth issues.

Then, I’ll talk about the startling statistics about the prevalence of anxiety, depression, and burnout in the Software World and its common, but rarely-discussed impact on productivity and worker retention/satisfaction. I’ll talk about how main inciters of anxiety during development include: blame, an overabundance of information/rules/responsibilities we are simply expected to know, and, in general, an overall lack of trust and control. This will lead into talking about my current work environment and how we've shifted to help with that anxiety, in safeguards during the development process and the culture it employs. In each step, I will talk about how we implemented it in our codebase and how each thing has helped us with such problems.

Middle:
=======
During Development: 
Gatekeeper Flags - when rolling out big or even small features that could use rounds of functional and design testing, we program behind gatekeeper flags that can be toggled on/off, per-user, or at certain percentages easily, configurable for each environment, and that can be controlled by an internal admin interface we have created.
Also mention: Linting pre-commit hooks, Typing libraries (e.g. typescript), Test Driven Development

Deployment: CI / CD 
We created an internal tool, now used throughout Adobe, called Moonbeam. Rather than have a QA team, we have each developer bake testing into their individual deployment process. It’s an easy to use interface that lists each step of the deployment process in each step (Build, Stage Environment, Integration Tests, Production Environment). It does not merge into master until you ‘Mark as Good’ in the last step, allowing for easy rollbacks if you see anything while testing in production and looking at logs. Moonbeam also links to analytics dashboards to easily point out spikes in errors and other areas of potential concern. A person comes away feeling rewarded for owning an entire journey of code to production and reduces the anxiety of damage control or blame.
I will talk about the process of developing it, how it works under the hood, and how we use it in practice.

Auto-Generated Documentation - 
I will talk about the importance of documentation for large code bases, especially for people with memory issues, to avoid memory silos and to have a persistent place to find answers to questions. I’ll talk on how we implemented auto-generated API types and other documentation using swagger / swagger-related tools. I’ll go into examples of how to implement that in a codebase.

Cultural Shifts: 
I'll do a general overview of how the culture has shaped to be more inclusive of mental health. This includes: establishing vacation time/lunch time/normal working hours is encouraged, Manager/Developer relationships, SPIKEs - Chunks of Time Taken for Investigation for proper estimation, Open Forums / Refactoring Meetings such as our regular “Modernizing Our Codebase” one)


End:
======
I will reiterate the points above and give some resources for dealing with anxiety and looking into employing all of the concepts above, for perhaps your own team. I'll bring home the point that a lot of the time, the safeguards that make development less anxiety-inducing is really just an exercise of empathy and trust in your development team and can only lead to optimality and better output. This is similar to how accessibility features are really just usability features. I'll also talk briefly about how it has helped my own anxiety and how I continue to work on my mental health every day, alongside my team.","When we talk about web accessibility in development, we often think about physical health, such as blindness. However, what about mental health? There is a startling number of developers who battle anxiety, such as performance anxiety, or other mental illnesses that affect memory, concentration, and overall satisfaction in their working environment. This has affected code quality and output as well as worker retention. There are small things we can improve and safeguards we can implement in the actual development process itself to combat fears that arise from it. These include gatekeeper flags, improving CI/CD processes, auto-generated documentation, and cultural shifts to take into account. All of this helps make developing solutions a focused, safer, blameless process.","I want the audience to understand the way that every aspect of our environment can affect our mental health and how we can be active participants in changing and controlling that so that we can be more satisfied at work. I also want them to understand just how prevalent mental health is in the dev community. My hope, too, is that this opens up more discussion for mental health on the user end of applications as well.","I want them to feel inspired, to not feel alone in battling with mental health issues at work, and to be engaged to try some solutions or suggest more back.","https://www.youtube.com/watch?v=eB1P6GjXvuQ Jackie Balzer’s Talk - CI/CD for Humans: Empathy as the Foundation for Effective Deployments 
https://www.businessinsider.com/syndromes-drive-coders-crazy-2014-3  Business Insider’s “The Stress Of Being A Computer Programmer Is Literally Driving Many Of Them Crazy”
https://www.youtube.com/watch?v=Z6x9wmlFz_c Greg Baugue’s Talk - Devs & Depression Talk - Laracon 2014
https://www.npmjs.com/package/tsoa 
https://www.npmjs.com/package/swagger-ts-generator 
https://www.npmjs.com/package/swagger-typescript-codegen","I, my entire family, and my inner circle has suffered extreme mental health issues throughout most of the formative years of my life, such as depression, bipolar disorder, schizophrenia, and memory loss from comas. Making opportunities accessible to those who suffer from mental health, not in spite of it, is a huge passion of mine and one that I rarely see discussed outside of individual ""mindfulness"" tips. Mindfulness, as a whole, seems very antithetical to the programmer mindset of logic, details, and establishing risks and edge cases and is often threatened by systems that pretend mental illnesses don't exist. As someone with experience with mental illness and who is passionate about conversations between humanities, social sciences, and the STEM fields, I would love to open more conversations about actionable things we can do moving forward.","I was wondering if, as things change into July, I would be able to switch out any of the code examples? Some might become more prevalent than others.",,15 minutes,D,Talk,,,,,,,,
Dorothy Phoenix,Dorothy Phoenix,contact@cloudyheavengames.com,"I am a game developer at my company, Cloudy Heaven Games, and a computer science tutor. Prior to self-employment, I worked for six years as a software developer and tester at IBM and a local startup. ",https://www.linkedin.com/in/dorothy-phoenix-0694a55,@cloudyheavengms,female,Black or African American,,Washington DC,"I initially came from a more formal computer science background. I took AP Computer Science in high school (around 2000, back when it was C++ rather than Java). I studied Computer Science and East Asian Studies at MIT, and then got a second degree in Game and Simulation Programming. For five years, I worked as a software engineer on government projects at IBM. This work included repairing and migrating Flash-based educational courseware to an online Army learning system, and then working on enterprise Java websites for government clients. I worked for a year as a software developer in test for a small startup, writing a bit of C++ code for a modem, as well as doing documentation. I’ve always been the team member who does writing and documentation; it seems a lot of software engineers don’t want to do that role or are not as equipped. While doing these jobs, I was attempting to work on my own video games on my own time, but not finishing. In 2014 I released a mobile game and started my company, Cloudy Heaven Games. A few months later I left my full-time job to focus on the company. Over the past year, I have been to a few conferences to demo my next game releases. I have also been spending a lot of time focusing on tutoring and teaching, including writing books about how I developer my first game, and a compilation of computer science study tips. I got into computer science because I knew from a young age that I wanted to be involved in game development. I would make my own little instruction manuals for games I made up (this was starting back in the late 80s and early 90s, when video games actually came with paper booklets, rather than an online manual!). I never left home without a game book, or game music, or something related to games. I was pretty much obsessed, and I’ve found a way to make it into my profession.",Other,Self-employed as a game/software dev and computer science tutor.  Previously worked 5+ years for other companies as a dev.,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Gaming,,"T109: Dad, Do I HAVE To? What Game Development Can Teach You About Software Testing and Feedback",Other,"Game screenshots, sample of what a project feedback survey might look like, a sample bug/issue list","After working as a developer for several companies, I decided to take a risk and launch my own independent game development company.  Of course, I knew that there was a huge difference between developing software for a client and a big company, and making games on my own, but I quickly began to appreciate the true magnitude of the difference.

One of the major challenges was that instead of other people telling me what they wanted me to build and getting their stamp of approval on the product, I had to try and figure out what others wanted in a game, and hope that it would stand out from the competition.  When you’re on a government contract, someone at the organization has identified that there is a need for the product you’re building, and they’re willing to pay for it, sometimes lots of money.  No one “needs” the games that I build, and it’s my job to convince them to download/buy and play them.

As a gamer myself, I understood this concept from the beginning, but it really came to life when I was showing off a game at an expo, and a little boy and his father stopped by my table to see what I had on display.  The father asked the boy if he wanted to play my game, and the boy looked and him, frowned, and said “Dad, do I have to?”  Definitely not the best response when a potential player looks at your game!

This story might sound like a great way to kill my excitement about game development, but it’s actually a great lesson learned.  It demonstrates how important it is to get feedback when you’re working on a software project, and how you can use the feedback and testing to make changes when needed.  Possibly more important, it shows that you must be able to take criticism.  In this talk, we’ll discuss how to do these things, whether you’re working on a project for someone else, or developing something on your own.

Lesson 1: Don’t just assume you know what people want, get feedback early.  One of the most difficult experiences is spending months, or even more, working on a project, and then finding out that no one really wants to play it.  That’s what happened to me when I released my first game.  It was a pretty quick release (only about 4 months in development), because I was very eager to get my game career started and I wanted the game out by Christmas (it was a Christmas-themed game).  I didn’t show anybody the game while I was making it because being a perfectionist, I was unsure about showing a product before I thought it was up to my standards.  But that was a huge mistake; I still should have at least shown off a prototype, with the understanding that it was nowhere near a finished product.  I could have gotten feedback about some of the weaknesses, and maybe even started to gather a following, rather than releasing the game with no established user-base.  Releasing around Christmas was also probably not the best decision, because lots of other developers were also trying to hit that deadline.  After that experience, I made sure to seek out game expos and other events to get early feedback on my games, even in the prototype phase.

When working for someone else, it’s a little bit easier, because you’ll often have some requirements meetings or other process to determine exactly what will be created.  You can make suggestions, but ultimately, the people paying the bills will be calling the shots, for the most part.

Lesson 2: Watch closely as people test and interact with your product.  It’s good to be able to release your game to lots of people remotely, like on the internet, but seeing people play it in person is also a very valuable experience.  A lot of times, people won’t always get back to you with feedback, but in person, you can pick up on their reactions, and often learn things that they might not tell you otherwise.  You can see when and where people are getting frustrated or having trouble, and get a sense for how long people are spending on your software.  If they just walk away after a few minutes, maybe the game is not interesting to them, or it’s too hard.  You can also get a good sense of the demographics that enjoy your game.  I thought my next game was more interesting for children, but I saw some older players that seemed to enjoy it.  And some of the children weren’t as engaged as I thought.  I also learned that a lot of people don’t read instructions, they want a game they can pick up and understand quickly.  Part of that is probably because I was testing on mobile, and mobile players have a different style than those who enjoy more text-heavy and complex games like RPGs or strategy games.

When working for someone else, you’ll often have end users who will be testing the software.  I did a lot of government projects, and we always had people “in the field” who needed to do acceptance testing.  When I worked onsite, I sometimes sat with the government workers to help them understand the product and see where they had trouble, even if sometimes it was a problem that was out of my scope, such as the worker not knowing how to open a web browser.  But even in that case, maybe a solution would be to just create a desktop shortcut that would take the user right to the web portal product, rather than having to navigate to a website.

Lesson 3: Have a plan for your testing.  Try to have specific areas you’d like feedback on.  Know the possible problems and questionable spots in your project, and places you don’t feel as comfortable about, so that after the event or testing session is done, you have addressed your most pressing feedback needs.  You’ll probably need more feedback later as well, of course, but at least you’ll be able to put to rest some of your biggest worries.  And if you’ve traveled to an event and spent lots of time and money to be there, you don’t want to waste all those resources, you want to make sure you get the best return on your investment.  One approach that has worked well for me is to bring a printed survey that people can fill out (if they’re willing), as well as some treats or candy to encourage them to give you some feedback.

This tip can also apply if you’re developing for someone else, but in that case, you’ll have a lot more guidance from the product owner and other stakeholders.  As a developer, you’ll still be able to set much of the agenda for testing, based on what you’ve been working on or fixing, but you might also have a dedicated testing team that comes up with test plans (this last part might be true as well if you’re working on your own project, but with a team).

Lesson 4: Develop a thick skin, and get over your hesitations.  I know it can be hard to put yourself out there and accept criticism, but if you’re serious about putting out a successful project, this is a step you must take.  I’m probably what most would consider an extreme introvert (even though you might not know it, since I’m giving this talk), and it can be very draining to sit at a convention table for eight hours, talking to strangers, and resisting my urge to duck into a private room.  And as I said, I’m a perfectionist, so it is jarring to “show my work” before it’s done.  Hearing a kid basically say that my game is terrible could have been a confidence-crusher, but it wasn’t.  But being a successful game developer is important enough for me to do what I have to, just like helping students and attendees at conference like this as a tutor or speaker is important enough for me.  Getting the feedback will always help me become a better developer and have more success.  And it is cool to see people enjoying my game and other games at these events.  It helps to clarify when my game is a prototype, so that people don’t expect a finished, polished product.  

If you’re working for someone else, you’ll get feedback from the client, but you can also ask your fellow developers and teammates for internal feedback.  You can do code reviews and create test plans.  Just make sure to keep focused and remember that it doesn’t have to be a comment on you as a person or developer.  Even if you’re not as attached to the product itself (it might not be your “baby” as would a creative project of your own), don’t let feedback feel like an attack on your abilities.

Lesson 5: Follow up with the information you learn.  You’ve spent all that time and work, put it to good use and make changes based on what you’ve gathered.  You might not be able to make all suggested changes (and in some cases, maybe it’s just not the game for some players), but if you can identify your top issues, you can greatly improve your game.  If you’ve found that maybe your game or product appeals to a different demographic or need than you first thought, you might take your product in a different example.  For example, Groupon started out with an entirely different business model than its current incarnation.  Had the company not pivoted based on the observed feedback, it might have gone under.  If you’ve gotten email addresses of contact information for willing testers, be sure to send them your updated product, while explaining what the changes are, and asking for further feedback.  These changes can include bug fixes as well as feature improvements (sometimes you might need to add some suggested features or things that would improve the game, or remove features that don’t seem to be working out).  You can even assign priorities to the noted bugs and feature requests, to help you figure out what your top fixes should be.

I take several game prototypes with me when I go to events, to get an idea of which ones people like the most.  Based on what I saw, I chose to focus on one particular game (a puzzle game called Brain Bouncer) that people really got into, and put on hiatus the game that the little boy didn’t want to play.  In fact, I’m pleased to report that I’ve had many cases where people would play Brain Bouncer until they solved all the levels, and people from a wide age-range even came back several times to play the game, and I’m currently working on a level-editor for the game.","It's not always discussed, but one of the most important software development processes is getting feedback, not just to find bugs, but also to figure out if the product is usable, if people like it, and where the frustration points might be.  Especially if you're doing a creative project or something on your own, you need to make sure that you figure out if your game or product will be a success, and what the possible blocks to success will be.","I want people to have ideas about how they can start getting early feedback on their software projects, how to make sure that they're addressing the most pressing areas, and what to do after they get the feedback.","I want them to feel more confident about how to get feedback.  Often, we get so attached to our projects and ""brainchildren,"" that we don't know how to ask for and accept criticism, and we might not even reach out at all.  But the risk is that we create a product that people don't want (or that won't appeal to our intended target).  I want people to feel better able to take this crucial step of getting feedback early.","I mentioned Groupon in my outline, but I want to find and include more stories about games and software that benefited (or didn't) from feedback, so that people see how the process can play out in the real world.","I'm a game developer who is very passionate about my ideas, but unfortunately, others haven't always shared the same enthusiasm.  I've definitely had quite a bit of feedback, positive and negative, and by getting out there and seeing how people react to my offerings, I've gotten on the right track with a game that people actually seem to enjoy!",,I would need hotel accommodations and a train ticket to and from DC.,15 minutes,D,Talk,,,,,,,,
Aaron Kalin,Aaron Kalin,akalin@martinisoftware.com,Aaron Kalin is an openly queer Site Reliability Engineer who works with DNSimple to maintain their fleet of DNS servers. Aaron is also a very active open source contributor and project maintainer for various projects around servers and software who has been in the industry for over 20 years.,,@martinisoft,Male,White,,"Chicago, IL","I'm an openly queer developer that has spoken at a few conferences and events over the years. I've spoken about very technical things and given lightning talks about how to order drinks at a bar because I was a third generation bar and restaurant owner/manager. I can present fairly complex topics very well, at least that is the feedback I have been given over the years and can provide examples.","Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Career,,T110: How to not hide in plain sight,Other,Audience exercises to meet others and introduce themselves to their neighbor,"Beginning:
* Some background about myself and how long I have been a career developer

* Sharing a short and very embarrassing story about my first technical conference and how bad I was at meeting people at the first RailsConf in Chicago

Middle:

* Some ways I changed myself physically and mentally to improve my people skills. Reading books, changing my appearance, writing, and speaking.* Audience exercise to meet their neighbor by introducing themselves and telling the other one cool thing about them. Could be that they love rainbows, ponies, some cool new language, etc.
End:
* Resources in the form of books, meetups to attend, protips on speaking and meeting people","Many developers I have known over the years can struggle with interpersonal skills which can limit their career opportunities. My talk tries to provide my own personal journey and hopefully provide some options and exercises to help them expand their social horizons, even a little bit.",They have met their neighbor during the talk or at least learned one way to help them meet others at the conference in between sessions.,Empowered,Books such as Drive by Daniel Pink and Dale Carnegie's How to Win Friends and Influence People,The last 15 years of my career have been fueled by my desire to improve myself and land myself into new and more interesting projects. It has created benefits personally and professionally so I'd like to serve as an example of how others potentially in my situation can change things with even a little effort.,"I've given a version of this talk as a lightning talk before to tell my story years ago, but I wanted to use the longer format to make it more actionable for attendees so they have a more valuable take away that could help them early in their careers.","If I am selected to speak, my company will provide travel and accommodation.",15 minutes,D,Talk,,,,,,,,
Valerie Sharp,Valerie Sharp,valerie@techbychoice.org,"Valerie Sharp is a technologist who focuses on create user-centered digital experiences as a full-time UX designer & full stack developer. To help spread the finical wealth offered by the tech industry, Valerie founded Tech By Choice, a nonprofit that is working to increase diversity in the tech industry by providing low to no cost events for individuals in protected groups. ",https://www.linkedin.com/in/valerie--sharp/,https://twitter.com/digitalblkhippy,Female,Black or African American,,California,"I am a self-taught developer that has a college degree in Psychology and Art. As a UX designer, having the psychology background made the transition to UX seem as natural as riding a bike, and also helped me with the soft skills required to be a good developer. 

This year marks my 5th year in the technology industry and my first year as a full stack developer. Being in the industry for six years I’ve experienced some hiccups and bumpy roads along the way. Even when things got hard, I kept moving forward because of the access and opposites a developer salary gave my family and me. 

Knowing the access all filled in the tech industry offered, I been a lot of time and effort helping underrepresented individuals get and stay in tech. I’ve taught at boot camp, volunteer at local meetups, and recently launched Tech By Choice, a nonprofit to help support more people during their tech journey.",Employed as a full-time developer for over 3 years,,Online learning platforms,,Career,,"T111: 48 Hours to Learn, Build, and Secure the Job",Code samples,,"Beginning 

For the first part of my talk, I will introduce the problems I faced as a code newbie trying to land a frontend developer role with very little to no coding experience under my belt. I give a bit of background about making my decision to switch careers before I finished college, and how multiple interview rejections lead me to create a learning cycle.

Middle 
I explain the learning cycle; Understand the Problem, Discovery & Research, Take Action, and Share.

I apply the learning cycle to a take-home coding challenge that I received as well as figuring out the best way to highlight my ability to learn quickly to show employers I'm the employee they should invest in. To explain how to solve coding problems with the learning cycle I  walk through the steps I took to complete the take-home challenge, and explain how it helped during the interview process. 
End 
At the end of the talk, I could come full cycle and give an intro of what my role is today, and how the leaning cycle helped my not only land the job but excel in my position. I will cover how this cycle has helped me understand how to give better technical demos, and help me build up my soft skills that made the translate into leadership roles a breeze. I will close out by letting people know this learning cycle used in their life to solve big and small problems. ","As a code newbie, it can be hard to find the best way to land your first developer job. After I failed multiple interviews, I found a system that helped me prove my ability to employees as well as boost my confidence which allowed me to land a senior level developer job as a jr developer. ","I would hope the people who come to my talk will feel inspired to find a learning cycle that would help them land their next job, promotion, or give a fantastic technical demo. ","I intend to make everyone feel as if they can apply the learning cycle I created to solve problems in their life, both big and small. I hope they are inspired and motivated to take on their next big task. ","For this talk, I've gone through some GitHub projects and youtube videos to find the best examples of learning material. I will also cover some psychological learning tips to help support my learning cycle.  ","I've recently had a few significant career shifts that have pushed me to move into community leadership roles as well as looking my first senior-level developer position. During this search I kept hitting the same roadblocks I hit when I first entered tech, despite my experience. Although it's been a few years since my last job hunt, I started to experience impostor syndrome which affects my confidence level and my ability to do well in interviews. The one thing that has helped me through all of this was my ability to go back to this learning cycle and use this to help me reach my next goal. ","I've recently had a few significant career shifts that have pushed me to move into community leadership roles as well as looking my first senior-level developer position. During this search I kept hitting the same roadblocks I hit when I first entered tech, despite my experience. Although it's been a few years since my last job hunt, I started to experience impostor syndrome which affects my confidence level and my ability to do well in interviews. The one thing that has helped me through all of this was my ability to go back to this learning cycle and use this to help me reach my next goal. ",I will need some help with a hotel & a flight. ,15 minutes,D,Talk,,,,,,,,
Chris Burton,Chris Burton,chris.burton@redspace.com,"Full time developer working in Angular. I had no experience coding until I enrolled in the Information Technology — Web Development program at my local college. I completed the program’s work-term and was hired full-time at a local digital studio, REDspace. Everyday, I get the opportunity to work with amazing brands such as Cartoon Network, USA Network and IBM.",https://www.linkedin.com/in/iamchrisburton/,,male,White,,"Halifax, Nova Scotia","Fairly new to my career, I work for a company made up of 170+ developers working on highly technical projects for the world’s biggest brands. With varying backgrounds and expertise, we share knowledge daily and it has allowed me to grow into a more well-rounded developer (who just happens to love Angular!).",Employed as a full-time developer for 1-3 years,,CS degree,,Career,,T112: An Intro to Regular Expressions in JavaScript,"Live coding,Code samples,Demo of working code",,"In this talk, audience members who are not familiar will learn what regular expressions are, how to use them, and some useful tools.

With regular expressions we can do 3 main things: Search for text in a string, replace parts of a string, and extract information from a string.

Regular expressions consist of patterns. Patterns can be simple or consist of special characters. Special characters are where regular expressions get really powerful. There are 39 special characters in regular expressions. The most common of these special characters are: Ranges (example a-z), /, ^, $, *, ?

To see if a string matches a regex we can use the RegExp.test() method, which returns a boolean.

We can use the string.replace() method with regex’s to find parts of a string and replace them.

We can extract information from a string by using groups. Groups can be defined by using round braces ().

We can then use string.match(regex) which will find any matches and add them to an array","Regular Expressions can be very powerful, but they are also complex. My talk helps to demystify regular expressions and break them down in a way we can all understand.",By the end of my talk you will understand what a regular expression is and how they can be useful in your everyday coding life.,To no longer feel overwhelmed by regular expressions.,"As I continue to learn, I tend to look towards the broader development community and then put them into practice. In my talk, I plan to use findings from the following sites:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions
https://flaviocopes.com/javascript-regular-expressions/#introduction-to-regular-expressions","I knew very little about regular expressions except that the few times I used them they were always a pain and something I found quite complicated. I wanted to better understand their use and, after doing some research and breaking them down, I found them much easier to use. I want to share my findings with my industry peers so they can also use regular expressions with ease.","Along with some of my colleagues, I helped start up Halifax’s first Angular Meetup. The goal of this Meetup is to allow Angular developers in our region to share experiences, expertise, and help each other solve common challenges we face.",,15 minutes,E,Talk,,,,,,,,
Jennifer Gorfine,Jennifer Gorfine,jen@curlsandcode.com,"My name's Jen, and I'm best known for my ability to translate interface designs into beautiful, practical, and accessible code. I've been working as a web developer full-time since 2013. At the beginning of this year, I joined the Broadcast Technology team at Blizzard Entertainment, where I help support a variety of e-sports leagues by building operator dashboards.",https://www.linkedin.com/in/jennifergorfine/,@_tentacurls,Female,White,,"Washington, D.C.","I was lucky enough to grow up in New York City, just uptown from the Codeland Conference. A bookworm and a theater geek, I never imagined that I would go on to work in a technical field. After all, I struggled with math, and I held on to the misconception that you have to be good at math in order to be a good programmer. And, yet, I was fascinated by HTML & CSS, the basics of which I taught myself during middle school. As soon as I graduated from high school, I moved to Washington, D.C., and enrolled in The George Washington University. I intended to study English and Theater. Instead, I joined a sorority, performed with the University Singers, studied for a semester in Dublin, and, finally, graduated with a degree in Communication. At that point, I came to accept that I truly love to code, squashed any remaining self-doubt I had about becoming a programmer, and decided to pursue some formal coding training. I completed the Web Design & Development certificate course offered by Boston University's Center for Digital Imaging Arts, which lead to an internship, which lead to a job, which lead to several other jobs...and, now, here I am, hoping to share my passion and experiences in my very first conference talk.",Employed as a full-time developer for over 3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",In-person bootcamp,Online learning platforms",,Career,,T113: 4 Proven Ways to Find A Job,None,,"Here are the ways that have worked for me — and could work for you! — to get a new job:
1) Intern-to-Hire
    - WHAT IT IS: 
      * You work for a company for a scheduled amount of time
      * After that time has passed, you graduate to a full-time role
    - CONS:
      * Salary can be low or nonexistent 
      * Can have similar/same responsibilities/hours as full time employees, without similar/same recognition
      * Not a guarantee (should capture the intention for full-time conversion in writing)
    - PROS:
      * Nice way to gain experience in a particular field/language/technology
      * Low-pressure way to get to know the work, team, and company
      * Low barrier to entry: great for someone with little professional experience to get their foot in the door
    - MY EXPERIENCE:
      * I interned at WeddingWire for 3 months before being hired full time
      * The intention for full-time conversion was conveyed both during the interview and in writing, with my offer
      * My role and responsibilities didn't change much 
2) Staffing Agency
    - WHAT IT IS:
      * You submit your résumé to an organization that helps place you in a role
    - CONS:
      * Limited to the jobs and companies they're working with —and you don't know what they are until you get there
      * Is a very passive experience; no great way to be proactive after initial meeting
      * Might turn you away/not be able to help you if you're not a fit for any of their openings
    - PROS:
      * Someone's on your side —and it's in their best interest to help you
      * Get help with logistics, e.g., salary negotiation and paperwork
      * Can be low or no cost to you
    - MY EXPERIENCE:
      * I worked with a company called Talener
      * I discovered them through one of their postings on LinkedIn
      * They contacted me and invited me to meet with them in person
      * They asked me a bunch of questions about my experience and career goals
      * They talked me through several open positions
      * They set up an initial interview with the hiring manager for the job I was most interested in
      * I didn't have to pay a cent
3) Personal Connection
    - WHAT IT IS:
      * You reach out to a connection (friend/former colleague/mentor/family member/etc.) about a job at their company
      * You ask a connection to refer you to a job at their company
      * A connection contacts you about a job at their company
      * A connection refers you to a job at their company
    - CONS:
      * Maintaining solid connections (""networking"") requires time and conscious effort
      * If you ask for a referral, the person might say no
      * The people you know might not be able to help you, for a variety of reasons
    - PROS:
      * Having someone vouch for you boosts your credibility
      * Might get to skip some of the traditional hiring steps (e.g., writing a cover letter, submitting a résumé)
      * Lots of companies offer incentives for their employees to refer people...so it's a win-win
    - MY EXPERIENCE:
      * I became friendly with one of the technical recruiters at WeddingWire
      * He left the company before I did
      * Several months later, we reconnected at a job fair
      * A few more months after that, he messaged me about a job at his new company
      * I didn't even apply; he just showed my LinkedIn profile and portfolio to the hiring manager
4) Cold Applying
    - WHAT IT IS:
      * You go to the website or LinkedIn page of a company you admire
      * You find their job board
      * You pinpoint a job (or several!) you're interested in
      * You apply
    - CONS:
      * The company might never see or acknowledge your application (even with a rejection)
      * Job posting might be outdated/is already filled/is being filled internally
      * Need to spend time preparing materials: résumé, cover letters, portfolio, short answer questions, etc.
    - PROS:
      * LOTS of opportunities: pretty much every company on the planet has a website, so they're going to need web developers!
      * You might get the job! 
      * If you don't apply, you'll never get the job. (""You miss 100% of the shots you don't take."")
    - MY EXPERIENCE:
      * My friends introduced me to Diablo III, a video game created by Blizzard
      * Curious about their job openings, I went to their website
      * Luckily, they had an open position that I was more than qualified for
      * I applied
      * I got it!","Searching for a new job — especially if it's your first ever, or your first in a particular field — can be daunting. Getting started is one of the hardest steps. My talk will help attendees get over that initial hump by presenting a number of options.",I hope the audience will walk away with concrete ideas for where to begin their job search.,I want the audience to feel both motivated and properly equipped to look for their next opportunity.,"During the ""Cold Applying"" portion of my talk, I want to reference this statistic: men tend to apply for jobs they feel 60% qualified for, whereas women tend to apply only for jobs they feel 100% qualified for (https://hbr.org/2014/08/why-women-dont-apply-for-jobs-unless-theyre-100-qualified). That means both men and women are counting themselves out early!","I've only been working for about 6 years, but I've had many different coding jobs already. (7, in fact!) I've made every move strategically, and with purpose. As a growing developer — and something of a reoccurring newbie — I can completely relate to the Codeland Conference attendees.",I'm completely open to feedback on any part of my talk.,"I'd like to be reimbursed for my train tickets, please!",15 minutes,E,Talk,,,,,,,,
Danica Sapit,Danica Sapit,danicasapit@gmail.com,"Danica Sapit has been a full-stack software engineer at Adobe for the past year working on the website builder Adobe Portfolio. She graduated at Rutgers University in 2017 with a degree in Electrical and Computer Engineering and is a passionate hobby artist. She founded part of the STEAM (Science, Technology, Engineering, Arts/Humanities, and Mathematics) student initiative (more info at steamwith.us).",https://www.linkedin.com/in/danica-sapit-0bb9b983/,,female,Asian / Pacific Islander,,"Brooklyn, NYC","I am a Filipino-American, queer young professional who started out in Chemical Engineering and then switched to Electrical Engineering and Visual Arts. I discovered web development was approachable, visual, and interesting and combined a lot of my loves between the arts/humanities and technical development, so I started to learn more on the side, alongside engineering-minded programming curricula. I’m currently the youngest person in my office in Adobe and have been learning a lot from my team, most of whom come from non-traditional backgrounds (music, art, media studies). I was never gifted in math as a child and was fervently against computer science as a career when I first heard of it, but I grew to view it from an artistic mindset as a form of creation and experimentation.",Employed as a full-time developer for 1-3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Art/Creative Coding,,T114: Creating a Web Virtual Reality Painting Tool,"Code samples,Demo of working code",,"I will go over briefly my motivation for this project: I was inspired by the Virtual Painting tool in development known as Quill and have always been interested in the ways technology and art interact. I also as a hobby artist have been displeased with the lack of tactile feedback in digital painting experiences. 

I will talk about how I broke down this project into its separate features and introduce them: AFrame Editor Tool using MERN stack, Setting up a computer vision program for taking in inputs and exporting them into Aframe.


Middle
======
I will introduce basic functionalities of AFrame and setting up a basic project. I will go over each of the different architecture, such as AFrame Object Components, and how they are instantiated into the 3d space.

Then I will talk about the Computer Vision tool, utilizing Google CloudVision, hosted in AWS, and how it interacts with the tablet input to make a best guess, which is then converted into an Aframe component. 


End
======
I will end with a live demo of what is working at that point as well as past examples. I will talk about different development confusions and hardships (e.g. collision detection, resource intensiveness, inaccurate predictions) that came throughout the process.

Then I will discuss partnerships with artists I have been developing for the tool and where I see the tool and virtual painting/animation/storytelling/technology as a whole going.","A lot of virtual reality development tools often require extensive hardware, such as headsets, and powerful graphics machines, which is inaccessible for a lot of people. However, it is a huge opportunity for artists, storytellers, creative coders and even for scientific research. Online webGL libraries, such as A-Frame, enable web developers to get started in developing with familiar syntax and bringing it to audiences through the essentially ubiquitous computer screen. 

Besides equipment, artists have also criticized the inorganic nature of sculpting virtual art and lack of tactile feedback. So as a personal project, I began work on developing a web Virtual Reality Creation tool that acts similarly to painting tools, such as Adobe Photoshop, with use of a drawing tablet (the future goal being to integrate with paper, like iskn’s The Slate). As I explore this interaction between hardware and web development in the context of VR, a whole host of technical decisions and issues/learnings have come up that would be interesting for those interested in developing similar interfaces or the optimization of Virtual Reality / graphics applications in general.","I want people to see Virtual Reality and Augmented Reality web development is approachable and to get them thinking about the different media we use to create, so that we can continue to think about how we can change up the user experience, especially for artists. I would also like programmers to think more creatively about their craft and the effects of their craft.",I want them to feel inspired and artistic.,"https://taughtbyapro.com/podcasts/animation-podcast-117-goro-fujita-and-the-future-of-vr/ Animation Podcast Interview with Goro Fujita, co-created of Virtual Reality drawing tool Quill 

https://aframe.io/ Aframe documentation

https://www.youtube.com/watch?v=9SgDOtfuYhc WebVR with Aframe - getting started @ JSConf.Asia

Wacom Intous Documentation","I am intensely passionate about exploring ways to create interactive art and no other tool besides programming has been as interesting or immersive to me. I’m especially enamored with Virtual Reality storytelling and, since my job is a web software engineer at Adobe, in web application development and optimization. I would love more people to be involved in thinking of artistic uses for technology and artistic expressions/approaches to technology. ",,,15 minutes,E,Talk,,,,,,,,
Kristen Kagei,Kristen Kagei,kkagei@npr.org,"Japanese + American transplant in Washington DC, also known as your friendly neighborhood barista-turned-developer. Wait, am I a developer after only a year and change of developing? Hi impostor's syndrome, I'm fine thanks, I have async/await. ",https://www.linkedin.com/ ,@mari_sten,female ,2 or more of the above,,Washington DC,I have never been a speaker before! ,Employed as a full-time developer for less than a year,,"In-person bootcamp,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,My Coding Journey,,T115: From Server To Serverless: My Imposterible Trip from The Kitchen to The Cloud... (and beyond),"Demo of working code,Code samples",,"PART 1: Brief introduction! 

I was at this conference last year about to start my first internship after a super intensive coding bootcamp. I'm back! And I'm a full stack Junior Developer at that same company. 

~I'm here to talk about how I got here, and how everything along the way has helped shape who I am as a person, developer, and learner, but most importantly how you can take all of your life experiences up until this very moment and make them work for you in your own way. ~

PART 2: function (brief) journeyGoesHere()
{ TOKYO -> university -> mental breakdown -> restaurant and cafe work -> mental breakdown -> near death experience -> temp job -> job at a software company -> company went under after 3 months -> mental break down -> hmm coding sounds cool -> bootcamp -> mental break down -> graduated -> CODELAND -> internship -> temp -> full time, full stack junior developer}

PART 3: What they don't teach at bootcamp and how the following three things have helped me grow. // with restaurant metaphors 
A. Testing: KNOW WHAT YOUR CODE DOES. Test it. Add nyan cat. This has helped me plan out what to code before I code it. This helps me feel less anxious. It forces me to learn how to understand other people's code. (code sample) [[ try your food before it goes on the menu ]] 

B. Agile: Learn how to create your own rhythm within a logical rhythm. Learn how to communicate with everyone on your team in a different way. Everyone is there for support. Learn how to define your own role so people can come to you, too. (diagram)  [[ Get a good team together, define roles, define goals, meet often, communicate, know what has to be done before the restaurant opens and what you can keep working on after opening day! ]]

C. Serverless+AWS: I won't get into this in detail, but oh my goodness is it the bees knees or what. Take everything you learn about a server and throw it out the window, much like my restaurant career, and let it land in the looking glass! (code sample, but probably diagram). [[ The most ideal Point of Sale system of all time]] 

PART 4: Why I regret nothing. 
I wouldn't be a good learner without being a good barista, or server, or a creative human. I wouldn't be a good teammate without knowing how to interact with people I've never met. I wouldn't be able to solve problems the way that I do without my experiences with Generalized Anxiety Disorder and Depression. 

Part 5: Bring it all together","If you are super new to the industry, it's hard to fight impostor's syndrome and find a way to marry your past experiences with your new ones into the role of ""developer"". It takes more than just code. It takes YOU. ","I want the audience to be able to reflect on their pasts, whatever they entail, and find ways to use their life experiences to keep reaching forward and help shape their dev careers.",EMPOWERED. ,"Will be researching: 
- Statistics of people without CS degrees in tech
- Mental Illness in the USA 
- Bootcamp pros and cons 
- Easy ways to break down serverless, testing (specifically unit tests)","This conference kicked things off for me in a way I couldn't even fathom. I was so nervous to start the internship, totally consumed by impostor's syndrome. I just wanted to do a good job and not mess up. Once I got here, I met so many people and was immersed in so many good vibes that I 
But I think about talks that I saw at this conference also every day. I was so inspired, and I want to be able to provide that same feeling of empowerment to other developers who are starting their journey. I walked away feeling like I belonged here. There is room for everyone to build the future and technology to contribute in whatever way we can. ",,No needs. Work will cover the train ticket and I'll crash with friends :) ,15 minutes,E,Talk,,,,,,,,
Chrissy Ziccarelli,Chrissy Ziccarelli,chrissy.ziccarelli@gmail.com,"Chrissy Ziccarelli currently serves as the Director of Education at Girls Who Code, creating materials, trainings, and support for teachers, librarians, and community members to teach the next generation of coders and close the gender gap in technology. Prior to her role with GWC, Chrissy worked in online advocacy and fundraising, managing email campaigns to change the world with NRDC and M+R Strategic Services. She is indebted to her own mentors for encouraging her to pursue her dreams of working in computer science education and aims to pass that on to aspiring developers and educators she meets through her work.",https://www.linkedin.com/in/chrissyziccarelli/,chrissyzic,female,White,,NYC,"Started college as an engineer, but didn't finish as one. Was working in online communications and got bit by the coding bug. I started teaching others to code and then fell in love with teaching. Though I've never taught in a school or coded full time, I love introducing people to computer science and the practice of teaching.","Casually code, but coding is not the core part of my profession",,"Online learning platforms,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,My Coding Journey,,T116: How I Learned to Stop Worrying and Learn to Code on LiveJournal,None,,"Social blogging platforms like LiveJournal, Xanga, MySpace, and Neopets (yes, Neopets) are often cited by many as their first experience coding in the early 2000s - especially women. Though there were admittedly fewer resources to learn to code 15 years ago, these sites seem to have had a unique pull on a generation of female technologists. What was it about them?

In this talk, I argue it because each of these sites allowed users to personalize expression, see immediate results, and share their creations with each other. I'll explore how the personalized aspects of these sites that encouraged vulnerability and therefore exploration of coding. 

To conclude, I'll provide ideas for projects and activities such as making maze games and intentionally creating bugs, that can replicate the same sense of exploration in code newbies to create lifelong computer science learners.","Computer science is a large and often intimidating field , especially for women. We often self-select out of coding as a course of study or profession because the cost of entry - and cost of making a mistake - feel so high. In order to achieve gender parity in the tech industry, we need to think about how to lower the barriers to entry by providing space for vulnerability and exploration driven by personal interest and expression.","- Identity formation is key to persistence in computer science
- Having a community to share your interests will also build persistence in a new area of study
- There are a few simple ways you can incorporate indentity-affirming content and opportunities for community building into CS curriculum","Inspired, creative, and a little nostalgic","Mindstorms by Seymour Papert, Whistling Vivaldi by Claude Steele","I was doing computer science long before I knew that was what I was doing. Messing around with my online profiles and other fun games on my computer was just what I did after my parents went to bed in high school. No one ever told me what I was doing would be considered ""coding"" so I thought I wasn't smart enough to do something I was already doing! I want to share my story and help people own their experience and put a name to what they love doing, because when I realized that hobby was the same thing I had to do in my introductory engineering classes, I really started succeeding!",,,15 minutes,E,Talk,,,,,,,,
Tracy P Holmes,Tracy P Holmes,contact@tracypholmes.me,"A ""jackie of all trades"" (and mistress of being of herself), Tracy is a software engineer at HashiCorp working on the purple monster that is Terraform. When she isn't baking, hanging with her pup, reading mysteries or playing games; she is strengthening her Golang knowledge to make Terraform ecosystem even better. Tracy thinks open source is like gardening - you should pay attention to your conditions, and water only when needed.",https://www.linkedin.com/in/tracypholmes,@tracypholmes,female,Black or African American,,Mississippi,"As a late 30s Black woman from Mississippi, I've been wanting a career in tech since before the age of 10. I've been a teacher, worked in Project Management, and have also worked as a Systems Administrator. I've also gotten an interview offer because the owner thought I was white, and been called colored by a manager. It took me a VERY long time to make a full career change to Software Engineering, and it only happened in the past two years. I'm now an 8-month old Apprentice Engineer (one of the very first of 2) for a remote first startup, and I can honestly say these past two years have been full of ups and downs!",Employed as a full-time developer for less than a year,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,My Coding Journey,,T117: The road to an Apprenticeship: What's been hot & decidedly not,Other,,"- How I obtained my apprenticeship at a startup
- How things worked the first six months
- What changed after those six months
- My plan for the future and going forward","Things future apprentices should do or not do and how their respective companies can help them. Being brand new in a remote first role, it was very hard to ""reach out"" to ask questions, stop feeling ""stupid"", and stop feeling like a failure. This is something many CodeNewbies can relate to - whether working on a passion project or in their first junior role for a company.","Points and things to remember: 
- What to do when things aren't working the way you think they should be, or your employer told you they should
- How not to be afraid to take charge of your learning and learning plan. If you don't have one, how to bring that up.
- Don't be afraid to create that documentation. I work on an open source project for a quickly growing startup. I also barely had any documentation for my role. If no one else is doing it, take charge and make sure the next person has a better experience.
- The importance of BEING HONEST. This was (and is) still hard for me because it took forever to meet my team in person, and I had no real ""feel"" for people and their personalities.
- Take part in things like the interviewing process if
possible. Let the company know you want to be responsible. I can
actually say I had a hand in hiring my new boss.","Empowered, confident, not afraid to reach out to others, and not afraid to speak up when their experience is not quite what it should be.","Mainly interviews, possibly a survey, and/or requestsfor feedback.","I'm older. I frequently feel as though my time in tech is limited and that I should move on to something like Product Management instead. But, when I was 10, I said I wanted to work in Mathematics or Computers. Here I am. It hasn't been easy, but I'm determined to level up to Engineer I status.","This talk is very important to me. At some point, I want to divide it up into two or three aspects (importance of networking, what to do when you get the position, how to level up). But as a whole, this is my very first talk, so thanks for the opportunity!","Flight and hotel assistance if possible. Central Mississippi doesn't have many (if any) direct flights, so that would help more than anything. I appreciate anything you all can do.",15 minutes,E,Talk,,,,,,,,
Kristen Webster,Kristen Webster,kristenweb@hotmail.com,"I'm a Software Engineer with a rich background in computer science, psychology, and writing. I enjoy bringing all my skills to every project I create. My hobbies include writing, traveling, and playing the piano.",https://www.linkedin.com/in/kristen-webster-developer/,,female,White,,"Seattle, WA","I came to tech a few years ago from a roundabout path.  I already had a degree in English Literature, and a graduate degree in Counseling.  But after I moved to Seattle from Virginia, I was exposed to the excitement of the tech industry.  I took an intro programming class at a community college, just to see if I enjoyed it.  And I loved it!  I still remember the first night of class when I wrote my first program and made an image of a turtle move in a square on the screen.  I was hooked.

I decided to pursue programming more intensely, and I got a postbaccalaureate degree in Computer Science.  While I attended school, I supported myself by running my own book-scanning business.  This is one of my proudest accomplishments.

My diversity of interests and hobbies helps me every day on the job.  I believe I am a more compassionate, empathic, user-focused engineer because I see the bigger picture, and I weave my background - and my life itself - into my work.",Employed as a full-time developer for 1-3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Career,,T118: Shine at Work through Skill Sharing,Other,"Compelling images, checklists, ToDo lists, quotes","Beginning:
- Why practice skill sharing at work?:  Demonstrate leadership and expertise.  Grow your expertise.  Add value to the company.  Best way to learn something is to teach it!
- Talk about my own experience skill sharing at work:  Lunch talks (e.g., code profiling, self-care), code reviews, pair programming
- The path to leadership
- This talk will focus on one particular area of skill sharing that has been highly effective for me:  lunch talks

Middle:
How to give lunch talks at work:
     Strategies for brainstorming:
          - keep a running list of topics that interest you
          - review your list periodically and add to it/groom it
          - hold regular brainstorm sessions
     Strategies for choosing an idea:
          - narrow down your list to the 2-3 most interesting topics
          - create a brief outline/mission statement for each idea (spend 5-10 min. 
             on each idea)
          - rapid prototypes
          - choose the most interesting idea, or the one that’s most helpful to you 
             on the job
     Strategies for preparing:
          - Allocate more time than you think you’ll need
          - Make an outline
          - Prepare code samples
          - Rehearse (and record yourself)
          - Make it relevant to your audience
     After your talk:
          - Send your teammates a feedback request form
          - Evaluate yourself
          - Congratulate yourself - throw yourself a party!

End:
- Remember:  you don’t have to be an expert, just need to feel excited about your chosen topic
- Make your talk preparation a repeatable process (create a ToDo list and checklist that you can repeat each time)
- Leverage your talk:  write a blog post; submit proposal to conferences; speak at meetups; make a tutorial or video tutorial
- Become a linchpin on your engineering team","How can engineers (particularly those newer to the field) display leadership and expertise at work?  How can they develop their voice on their team?

This problem is important because it will help the audience develop their leadership skills at work and in their community.","I have two main takeaways:
1.  First, I want the audience to leave with practical skills about giving effective talks at work (how to brainstorm, how to prepare, what to do after giving a talk)
2.  Second, I want the audience to feel empowered knowing that they can develop and hone their voice on their team - even if they are newer to the field.",Empowered.  Inspired.  Energized.,"- https://www.themuse.com/advice/5-ways-you-can-position-yourself-as-a-leader-before-you-have-any-followers 
https://www.thebalancecareers.com/lead-the-team-how-to-become-the-person-others-follow-1918610","As someone who struggled with finding my voice on a team of more senior-level engineers, I found that giving talks at work helped me display leadership and expertise.  I gave a talk on profiling tools, and I have an upcoming workshop on the topic of self-care.  These activities have greatly enhanced my self-confidence and knowledge.",,"Roundtrip flight (Seattle - New York)
Hotel for three nights",15 minutes,E,Talk,,,,,,,,
Dani Gellis,Dani Gellis,daniellegellis@gmail.com,"As the Tools Engineer for Indeed's Open Source program, Dani is building tools that help people contribute to open source projects. She's passionate about sharing and collaboration, especially in software and technology. Dani is also a teacher who has taught both kids and adults to code.",https://www.linkedin.com/in/daniellegellis/,@danisyellis,female,White,,San Francisco,"After college, I did an AmeriCorps year of service and then spent 7 years working as an outdoor educator and backpacking trip leader. At some point, I fell in love with the Bay Area and moved here, but struggled to get a career started. So I decided to learn to code. It took me a long time to learn and during that time I taught kids to code and then TA'd at a web dev bootcamp for adults. Now, I'm pleased as punch to be working on the Open Source team at Indeed because it feels a lot like the non-profit version of a tech career, but with all the perks of a normal tech career.",Employed as a full-time developer for less than a year,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms,Other",every free and low-cost coding course I could find,Career,,"T119: Honey, I Blew Up The Code",Other,"examples of how to draw diagrams to understand the architecture of an app, and an example work plan","Synopsis:
This talk is for intermediate level coders who have mostly been working on their own or small-group projects. They'll get tips for how to start understanding a large codebase, how to write code in it, and what to do once you're ready to contribute.

Part 1: How do I even start looking at the ginormous codebase?
• Start by getting a general overview of the architecture of the app
-Draw a diagram with each piece: 
1. Start with front-end, back-end, and the connecting piece
2. Then, fill them in with the tech stack and microservices (ex. front-end React and Redux)
3. Using the diagram, look through the folders and try to find the folder that’s used for each different tech and each microservice
(get something like hyperclick (in Atom) that allows you to command-click on a function call to see the function declaration. Also, use your editor’s full-project search feature to see what file is calling a certain function.)
• Once you have a general overview, if you have access to someone who knows the codebase, ask them:
-what’s unique about this codebase?
-what are the gotchas/ what won’t be obvious?
-any specific things you think you understand, but you're not sure

Part 2: How do I start working on my feature/bug?
• You can start even if you’re not sure how everything works yet!
• Start by writing an implementation plan
Which technologies will you be using and when? Which files do you need to use to change things for those technologies?
- get as detailed as you can
- this will a) be useful when you’re writing code and b) tell you what you don’t yet understand
- once it’s written, get someone to check it and tell you what you're missing
• Start coding!
just start somewhere! You can try to start at one end and go from front to back or vice-versa.
if you don’t understand enough to do that yet,, just start at the easiest thing that you think you understand
You can start with something that already has some similar code you can copy
don’t be afraid to comment out code or add code and see what happens (name a branch play and play around)
• be ok with not understanding everything at once. but if you stick to your work-plan you’ll be going step by step and eventually get it all and I promise by the end of that you’ll understand how everything fits together much, much better.
- as you’re working, make notes in your implementation plan. This can be a living document. I write down questions to check on, things to remember to go back and do, etc.
- by writing this down, I take a layer of complexity out of my head.
- Also, by making myself write out the question, I often get more clarity on why I’m confused. Often, by the time I’m done with the things I know how to do, I can answer my question.
• Whenever I don’t know what to do, I look at the list!
• As you’re working, draw more diagrams for things that are complex.
• As you’re working, ask yourself ‘which pieces can I ignore right now?’. We all want to understand everything but that’s impossible in a large codebase. Trust the abstractions.
ex.: if a function is called getCommentsForPost, you know what that does
• when you have lots of files open, put them in order
- I do the order each file is hit by the app
- within that, files that you’re comparing can go side by side
• Before you leave for the day, make a note in the work-plan of what you’re working on (and the next step and the next) and clear off any to-do's
• commit what you have as a WIP - start fresh tomorrow
(commit -p to chunk commits)

Part 3: Contributing your code
The campfire rule - leave the codebase better than you found it!
• Be thorough. Don’t leave work for anyone else cleaning up what you did.
• Run the tests
• make sure things are still named correctly, etc.
• Make sure you know how the project maintainers want to handle things like pull requests

In conclusion:
Big codebases can be a joy. 
(When you’re like ‘how do I even do this?’ there’s usually an example in the code already :-)
If you go step by step and follow your work plan, it will be less intimidating and you can do it!","When a new coder has only worked on small codebases, figuring out how to contribute to a large open-source codebase or get a handle on the codebase at their first job can be really difficult and daunting.","I want the audience to learn and use some techniques for parsing a large codebase. In particular, I want them to start writing and using work-plans.",I want the audience to feel empowered and capable.,I first got a number of these techniques from various teachers. I've also taught them to a number of students who've used them with good results,"Dealing with multiple layers of abstraction was especially difficult for me when I was new to coding, so I came up with this system so that I could get code work done without feeling hopelessly confused and lost.",,I think my company will pay for my flight and hotel if I am chosen. They usually do for speakers.,15 minutes,E,Talk,,,,,,,,
Justin Hunter,Justin Hunter,justin@graphitedocs.com,I’m a former account manager with a masters degree in creative writing that finally managed to teach himself development skills. I am now the sole developer and founder of a software company. ,https://www.linkedin.com/in/justin-hunter-b30a1b80,https://twitter.com/polluterofminds ,Male ,White,,"Dallas, TX","I come from a non-traditional background when it comes to software development. I was late to learn coding (32 when I built my first app, 35 when I was first called a “software engineer”). I have always been in customer facing jobs before learning to code, and I think that brings a unique perspective to development. Additionally, my background as a writer also helps in telling a story when trying to get people to use a new feature or an entire app.",Other,First time technical founder after having recently learned to code. ,"Online learning platforms,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,My Coding Journey,,T120: How to climb the wall when you inevitably hit it while trying to learn to code,Demo of working code,,"Intro: My introduction to computers and code
  - View Source
  - Middle school computer class
  - Copying Yahoo! To make Justin!

Forcing it: Wanting so badly to learn but not knowing how
  - Online courses, books, blog posts
  - Boredom setting in
  - Giving up

Finding the right path 
  - Coding for fun
  - Having a goal
  - Doing what makes you happy, not what will make you money",Everyone learning to code will inevitably hit a wall. That wall is surely the cause of so many people never finishing. Never getting to where they hoped to be. But there are ways to get around it. ,"I want anyone who is close to that wall to walk away feeling like they can do it. But more than that, I want them to have concrete examples of how they can climb that wall. ",Motivated as hell. I want them to walk away excited to challenge what they thought might be insurmountable. ,"Interviews with Ryan Carson, examples from Stephen Grider (Udemy), stats from Stackoverflow. ","I never thought I had a chance to become a developer. And that was fine. I’m a writer. I was good a customer support, account management, and other things. But it knawed at me that I knew I could challenge myself to more. I had ideas, things that I wanted to see built. I didn’t know anyone to build these things, so I wanted to build them myself. But first, I had to figure out how to get past that point I always hit where I lose motivation and stop learning. And I found a way to do that. I think others can learn from my experience. ",,,5 minutes (Lightning Talk),E,Talk,,,,,,,,
Brianna M. Fugate,Brianna M. Fugate,fugatebrianna@gmail.com,"I am currently a full-time backend software engineer at Mailchimp. I graduated from Spelman College in 2018 with a Bachelor of Science degree in computer science and completed internships at The White House in the Office of Science and Technology Policy, Intel, and Pandora Media. My journey has led me to become exposed to Java, PHP, C++, and Python.",https://www.linkedin.com/in/brianna-m-fugate-48899b66/,https://twitter.com/bri_fugate,Female,Black or African American,,"Atlanta, Georgia","I am a first-time conference speaker and am looking to share my coding journey while honing my public speaking skills. Additionally, I hope to reinforce what I’ve learned the last several months as a junior developer. My background would contribute to the diversity in the speaker lineup because I am new to the speaking realm as well as a junior developer in the tech industry. ",Employed as a full-time developer for less than a year,,CS degree,,My Coding Journey,,T121: It's OK To Fail,Demo of working code,,"Biases and prior knowledge towards engineering: 
Engineering is not for someone who looks like me.
I had no exposure to any engineering professionals that were either African American or identified as women.
Engineering was only for hacking purposes. 
My idea of engineering was that everyone who was an engineer hacked into applications and sat in dark rooms staring at their computer screens for hours.
I had no idea that people actually worked at companies like Google, Facebook, or Twitter. 
Engineering was unattainable or unrealistic to pursue as a career choice.
Because I was so new and unfamiliar with any concepts or opportunities in engineering, I thought it was too late to try and pursue coding with my inexperience. 
I had already planned to become a Radiologist and so engineering was somewhat out of scope. I had no idea how I would map out a career in tech. 

A little exposure goes a long way: 
Black Girls Code gave me exposure to what engineering was, opportunities that existed, and introduced me to a network of women that looked like me. 
Google Summer Immersion Program (Computer Science Summer Institute or CSSI) was a program that I applied to on a whim because I was interested in learning how to code and saw it as an opportunity to be trained by some of the best engineers. 
The interview was challenging because I believed the questions required the right answer instead of understanding that it was an assessment of how I think. 
Takeaways from summer experience: always ask questions, have patience, and the internet is helpful when seeking answers. 
My first semester of college I changed my major from biology to computer science because I felt comfortable enough given that I had a cohort of students that I knew on the same pathway.
I felt comfortable asking questions and being confused about a topic.
I applied for my first participation in a conference and another immersion program to gain more perspective. 

Square Code Camp, Grace Hopper, CODE2040 and Internships:
Helped me to find and establish a sense of community
Exposed me to opportunities that I never knew existed
Received my first internship offer at Grace Hopper Conference
Realized that there was a steep learning curve at my internships that was different than what I was learning in the classroom. 
Really became familiar with imposter syndrome as I doubted myself in being able to keep up and perform well in technical interviews and in my internships. 

Post-grad and Full-time Junior Dev Life: 
Learned the value in documenting and writing down requirements and user stories.
Learned the value in pair-programming and getting to know engineering standards within my company.
Became less fearful of git commands such as rebasing and cherry-picking.
Broke production code on my very first feature release and made me literally shed tears.
Continued learning and setting goals that contribute to measuring my growth as an engineer.","During this talk, I will address how exposure to opportunities and access to communities help guide one’s journey. In addition, this talk will encourage someone who is just starting as an engineer to keep going. This is important to the attendees who are new to their coding journeys because it might serve as inspiration to tell their story and how they persevered in their own journey. ","I want my audience to leave my talk knowing the importance of community and how a sense of community encourages them to keep going in their journey. In addition, I want them to feel okay with the feeling of failure and understand that failure contributes to their journey. ","I want my audience to feel supported in their journey and to know that learning to code or becoming an engineer is an evolving process. My hope would be for them to learn to love coding and appreciate the value not only as a career, but also as a fun experience. ","https://hackernoon.com/on-the-importance-of-community-for-diversity-in-tech-8533914cfeb2
https://static1.squarespace.com/static/549eea22e4b0d99a53dff15b/t/5b2d641d0e2e72a175eaf1df/1529701405925/Sources.pdf
http://www.blackgirlscode.com/what-we-do.html","This talk is a good fit for me because of my passion to drive inclusion and confidence of women and people of color in the tech industry. In the beginning of my journey, I was plagued with impostor syndrome. I am fortunate that my current role and employer encourages failure as a means to succeed. There were a few instances when I broke some code that was going into production and I felt like crawling underneath my desk to hide. To my surprise and relief, my colleagues all congratulated me in our Slack channel and shared similar stories of failures. I would like to share my story in hopes of inspiring the next person that failures are part of growing and learning.",I’d like to thank you for your consideration. ,Flight,15 minutes,E,Talk,,,,,,,,
Rushaine McBean,Rushaine McBean,rushaine.mcbean@gmail.com,Rushaine McBean is senior software engineer who specializes in JavaScript and Ruby development. She's a conference speaker and a organizer of Manhattanjs and EmpireConf. ,https://www.linkedin.com/in/rushainem/,@copasetickid,Female,Black or African American,,"Yonkers, NY","I'm an engineer with a Computer Science who's an experienced speaker. I've spoken at local meetups and various conferences that were JavaScript, Ruby, or engineering leadership focused",Employed as a full-time developer for over 3 years,,CS degree,,Health/Life Sciences,,T122: Forming Better Habits through Daily Rituals ,None,,This talk  will cover how mindset affects the things we want to experience and be in life. How you can figure out and create your system to be productive  and have the mindset to become the person you want to be and achieve what you want in life.  How to setup daily rituals to to build good habits and become the person we want to be by complete important tasks,"I’m addressing why people fail at achieving goals and how they figure out what’s holding them to get out those loops to become the person they want to be. They will learn it’s not about the goal, it’s about the journey and how to navigate the journey to get closer to goal. How they shouldn't rely on motivation but lacking the clarity of what they want and becoming  disciplined  enough to be successful ",Motivation to figure how to create a better system for themselves to be more productive and complete tasks / activities to become the person they want to be. I want them to have a starting point of things they can work on fixing each day to tackle challenges and get closer.   Apply it to their lives to figure out what habits they need to change in order to identify who they want to be.,I want the audience to feel motivated about they’ll start making small changes to the day that to develop better habits that will lead to daily rituals to achieve,I’ll point to books I’ve ever read and the key takeaways I’ve applied to my productive system I’m been using and adjusting.,I’m the right person to present this talk because I’m actively applying this information to my daily life. I’ve experimented and adjusted what works for me and found that identity based habits and setting up systems of rituals to complete tasks will get closer to the person I want to be,,I'm local to NYC so I don't need any travel assistance or accommodations. ,15 minutes,E,Talk,,,,,,,,
Rhia Dixon,Rhia Dixon,contact@rhiadixon.com,"I am a software engineer at a data-driven tech company in the parcel shipping intelligence industry. I have immersed myself in the KC tech community by volunteering -- both as a mentor, and as Diversity & Inclusion Director -- for Kansas City Women in Technology, a non-profit organization dedicated to bringing women in technology together and encouraging more women and girls to pursue careers in technology. ",https://www.linkedin.com/in/rhiadixon/,@TheFakeRiRi,female,Black or African American,,"Kansas City, Missouri","I am a Black female software engineer, and I attended a coding bootcamp to earn a full-stack certificate. I'm currently a bit over a year into my very first tech job, and I'm thriving! I think my perspective is one of interest as people are considering what all can happen if you attend a bootcamp... what kind of things are available, etc. ",Employed as a full-time developer for 1-3 years,,In-person bootcamp,,My Coding Journey,,T123: From Boot Camp to Rockstar! 10 Lessons Learned and Applied,Other,I'll be using a series of GIFs to emphasize the points,"Intro:
 - How I got into tech: While working at my previous job, I found a well-placed Facebook ad about a coding bootcamp and hopped on that opportunity
 - What I do now: I'm now a software engineer and both a mentor and the Director of Diversity & Inclusion for KC Women in Tech

Middle.1:  The tech-related things I learned in bootcamp and how they’ve been applied in my software engineer life
- Boot camp is just the basics - It is literally a tip of the iceberg. Learning to code is cool and all, but your goal is to learn how to solve problems with code.
- Version control is an understated joy - Keep working code working by committing often and early
- Clean code with comments will save your future life - Someone might have to read this later, and that might be you
- There is power in the markdown - Know what you’ve done so others can learn
- Your projects are your experience, don’t half-step!

Middle.2: The not-so-tech things I learned in bootcamp and how they’ve been applied in my tech/community/speaker life
- Procrastination is preventable - Trello is the bomb.com
- Social media presence is important - LinkedIn is a must have, and Twitter if you’re looking to broaden your audience
- Network, network, network - What you know is important, WHO you know is imperative
- Don’t be afraid to ask questions - This is how we learn things
- Try all the things! 

Conclusion:
 - Run through all ten points!","The problem is that there are a lot of bootcamps out there, and it isn't easy to determine the value of these opportunities. Some people believe they will know all there is to know, others think that coding IS all there is to know. But no one really mentions what you might learn that will help you be successful once the course is over. These are lessons I've applied and that I've noticed my successful counterparts have also applied.","I want the audience to leave with a better understanding of what a person going through a bootcamp can do. I want the audience to know that coding skills are just part of what will make them successful in finding their next role. I also want them to know that their next job may not be worried about what they know, they'll be worried about how well they can learn and adapt.","I want the audience to feel inspired, motivated, and high from a good laugh or two!","This talk is based on two blog posts I wrote about things I learned while I attended a coding bootcamp. Most of the points are based on either my personal experience, or conversations I've had with other bootcamp grads and potential employers.","I attended a coding bootcamp, and I was worried about how well I'd be able to turn these skills into a new career. I realized there were some non-code things I picked up that have really helped me to be successful as a software engineer, and I am enthusiastic about sharing them.",,I will be in need of flight and hotel accommodations.,15 minutes,E,Talk,,,,,,,,
DJ Greenfield,DJ Greenfield,mr.kaitryn.dale@gmail.com,"I'm a code bootcamp grad working in Ruby and JavaScript. I have an expertise in HTTP APIs, but I am also extremely passionate about hiring, mentoring, and diversity & inclusion.",https://www.linkedin.com/in/dj-greenfield/,,male,White,,"Denver, Colorado","I am a high school and college dropout who found a mild passion for developing software after attending a code bootcamp in 2014. Getting into this profession has allowed me to wholeheartedly pursue my true passion in life: having a family. A close second is mentoring students at my alma mater bootcamp and sponsoring people from underrepresented groups in my current role. And thirdly, I love running table top roleplaying games!",Employed as a full-time developer for over 3 years,,In-person bootcamp,,Gaming,,T124: RPiG: RePresentation in Gaming or Open World Inclusion,Other,We'll probably look at a few lines of .txt files which serve as database elements for the video game Dwarf Fortress from Bay 12 Games,"1. Intro
  * Why I am qualified?
    - I make a lot of web app content sure, but more importantly I play a lot of
      games. I have roleplayed big dudes, women, goblins, demons...  really
      everything except an out-of-shape straight white dude. I've played that
      role quite enough.
    - I am good at suspending disbelief.
  * I am going to name names (because I have the privilege to do so).
2. Verisimilitude - things follow a consistent rule-set which makes sense and you can understand. && Narrative generators.
  * Neutral example - Cultural transfer to Tabletop RPG
    - Quote from D&D 5E about equality in the fantasy realms
    - Quote from Forbidden Lands about equality in it's setting
  * Negative example - Rimworld - The Crutch of Realism
    - Called out for game mechanics procedurally enforcing negative stereotypes
    - Name names - Tynan Sylvester
    - Defensive behavior point-by-point refuting criticisms of his game.
    - Anectodal stories are flimsy compared to building blocks and complex
      simulated human relationships.
  * Positive example - Dwarf Fortress - unfettered by reality, but still holds
    true to life.
    - Make Dwarves have a sexual spectrum that has no adverse impact on the game.
    - Name names - Zach and Tarn Adams
3. Outro - Don't shackle yourself with manacles
  * Great UX and roleplaying share that they need creative ideas which will
    allow the user to feel joy.
    - The more ""system building"" you're doing, the more inclusiveness matters.",Bias inherent in open world gaming systems. Creative work and play alike should be provide a truly freeing experience.,Underlying structures can become incidentally exclusionary. Be intentional both from the beginning and once you're down in the weeds. Naive solutions or good intentions can easily be foiled by unpredictable procedural generation.,Happy. These influential games place players in worlds where their stories don't need to revolve around the bigotry of our day to day lives. It gives us opportunity to empathize and explore adventures unfettered by our current situations.,"I would love to interview Bay 12 Games and Ludeon Studios about how writing building blocks and behaviors manifests into a large thriving world.

There are a few articles from online publishers which cover ground on the topics above. (ie Rock Paper Shotgun)

I will also be quoting some old RPG books.","I have played hundreds and thousands of hours of the games I would like to analyze. Moreover I am constantly looking for ways to both empower people around me and, well, play games with them! I don't want myself or anyone else to be made uncomfortable by the systems in my hobbies.",It's so cool there's a Gaming topic category. I can't wait for this conference.,"My current employment will pay for my travel and hotel accommodations. If my circumstances change and that impacts this status, I will let you know :D",15 minutes,E,Talk,,,,,,,,
DJ Greenfield,DJ Greenfield,mr.kaitryn.dale@gamil.com,"I'm a code bootcamp grad working in Ruby and JavaScript. I have an expertise in HTTP APIs, but I am also extremely passionate about hiring, mentoring, and diversity & inclusion.",https://www.linkedin.com/in/dj-greenfield/,,male,White,,"Denver, Colorado","I am a high school and college dropout who found a mild passion for developing software after attending a code bootcamp in 2014. Getting into this profession has allowed me to wholeheartedly pursue my true passion in life: having a family. A close second is mentoring students at my alma mater bootcamp and sponsoring people from underrepresented groups in my current role. And thirdly, I love running table top roleplaying games!",Employed as a full-time developer for over 3 years,,In-person bootcamp,,Other,Communication. Applicable to Career I suppose.,"T125: Linting IRL: Eliminate ""Fuzzy Words"" from your conversations","Code samples,Other",We'll be looking at code review and job postings,"Intro - What is abstraction / some mechanics of language (7 min)
1. Start with some interactive time
  * Turn to a partner. Take turns: In roughly two sentences, describe someone you care about deeply.
    - Share a description or one from me to my SO. Use it as an example later.
2. What is abstraction?
  * Definitions
    - One: the quality of dealing with ideas rather than events.
    - Two: the process of considering something independently of its associations, attributes, or concrete accompaniments.
  * Language
    - Vocabulary count comparison of modern languages (English, Mandarin, Spanish, and some others)
    - Vocabulary count of deceased or ancient languages (middle English, Latin, ancient Greek)
    - Words are rarely literal. They often primarily get their meaning from
      feelings they provoke and connotations we make both culturally and personally.
  * How do we use language and abstraction in tech/professional communication?
    - Shared language. Group concepts to speed up discussions. Keep everyone
      (insiders) on the same page. Examples in Code Review (a good pattern), Job Postings (passionate about leadership),
      Interview Syncs (not very professional), Choosing a Architecture Solution (need to focus on performance).
    - Parsing technical jargon is a part of our job.
    - Extremely good at representing technical aspects, but extremely bad at
      representing almost everything else.
    - Propagates exclusion.

Middle - Fuzzy Words or one level of abstraction too high (4 min)
1. Fuzzy Words
  * Fuzzy?
    - Coined by an instructor from LifeLabs (source incoming) at least that's where I learned them and that's all that matters!
    - Definition - Words or phrases which cause listeners to fill in the blanks on their own.
    - Example - Abstraction. Means two things in two different contexts. ""It's
      too abstract"" does it deal with ideas rather than events too much or is it
      too independent of it's associations, attributes, or accompaniments?
    - Why are they a problem? The root problem we are solving is miscommunication.
    - Review previous examples, highlight miscommunication.

Outro - Speak with purpose. Events over ideas (4 min)
1. Speak with Intention
  * ""...and what I mean by that...""
    - Talk normally, but when you identify yourself using Fuzzy words,
      immediately dig into what you mean.
    - After time has passed, your meaning could change completely! Show Google
      Doc with comments from writer clarifying intent behind wording.
    - Creates more interesting, empathetic stories rooted in fact. ""I love my
      wife because she takes care of me"" becomes ""I love my wife, recently, I
      didn't eat or drink anything all day because I was so absorbed in my work.
      When I came home, she lied me down, got me food and water, and did this
      all while juggling both of our excited children.""
2. Active Listening and Asking for clarification
  * ""So what I heard you mean by that is...""
    - Active listening is a great skill in itself. Compound on that by focusing
      on fuzzy words.
    - You will learn what fuzzy words mean to which people and can become more
      comfortable using them in specific conversations. ie. ""professional"" means
      many things to my boss, an important factor being that person ""went to a good college"".
    - Ask questions ""Whats an example?"", ""What is the impact?"", ""Who else does this?""
3. Conclusion
  * Hopefully we're all a little more explicit.
  * Parsing technical jargon *should not* be a part of our job, but everyone
    sucks at communicating.","Miscommunication. Biased exclusionary poor communication plagues the tech industry... most industries really, but it is especially exclusionary when intellectualism is present.",Self awareness about communication pitfalls. Also I'll go over ways to deal with people who fall into those pitfalls when talking at you!,"Less off guard.

Also I want them to question every word choice they make in the near future.","I intend to interview a trainer at LifeLabs who often coaches on Unconscious Bias among other topics.
I will also pull some information up about language history, specifically around words with multiple uses across languages. On a talk about words sometimes meaning more than one thing and not being specific enough, I find this good.","I used to find the role of ""ally"" very frustrating in that being supportive and backing off isn't actionable problem solving. I always struggled with finding ways I could actively improve my behavior and suggest improvements to others. The analysis I provide in this talk was one of these such things for me. Clearing up miscommunication in my life (both professionally and personally) has helped me be a better person, employee, and ally.","I've done presentations at many meetups, but this would be my first conference talk :D","My current employment will pay for my travel and hotel accommodations. If my circumstances change and that impacts this status, I will let you know :D",15 minutes,E,Talk,,,,,,,,
Kevin Lesht,Kevin Lesht,klesht@gmail.com,"Hi I'm Kevin.  I'm currently a Senior Software Engineer at Home Chef, and was previously the Founder and Lead Developer at ZeroSleep Designs.",https://www.linkedin.com/in/kevinlesht/,,Male,White,,Chicago,"My coding journey began junior year of college.  While out rock climbing with some friends, I took a fall and caught an injury.  And, it just had to happen the weekend before a trip to the Winter X Games, which are like the olympics but focused on extreme sports.  While all my friends continued on the trip, I was left sidelined on the couch, and reading about the events.  Then, I had a thought.  I would put together a roundup of the most interesting ski articles I was reading each week, and send them out as an e-mail newsletter.  So, I came up with a name, stumbled my way through putting a site online, and released my first newsletter!

But, I never made it past that first newsletter.  And, It’s because, along the way I had stopped reading ski news.  I had picked up a new passion.  As a developer, you could take a raw idea and make something real.  And, I had to have more of that.

Working with my mentor, she got me involved in freelancing, and later I founded ZeroSleep Designs, a digital design agency - We won’t rest until you’re happy!

Only, it wasn’t that straightforward.  Every step of the way, I was running into brick walls.  Nothing was working.  But, I kept at it, and over the next four years, I had the opportunity to work with dozens of businesses to bring their ideas to life.  

But then, something happened.  I stopped running into brick walls.  The work became easy, and it felt more tedious than fun.  I had stopped pushing myself.  And so, I had to move on.  A few interviews later, I landed at Home Chef.  That was a little over three years ago, and I’m still running into plenty of brick walls.

My non-traditional entry into software engineering has offered me a wealth of experience towards navigating challenges.  My talk is focused on framing blockers, or “brick walls”, as learning experiences and opportunities for growth.  And, its objective is to get the audience excited about approaching their next problem.",Employed as a full-time developer for over 3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms,Other","Mentors, peers, and side projects!",My Coding Journey,,T126: How I got here,"Demo of working code,Other","Correspondence excerpts, and other relics drawn from my freelancing and in-house career","The first act of my talk is centered around setting up my background.  I explain that I went to the University of Colorado to focus on the outdoors, and everything but sitting behind a computer.  Then, after a life changing event, I found a new passion in web development.  Only, on a self-taught track, and with no computer science background, and no idea of where to look for resources, I was running into blockers, or “brick walls”, all along the way.

The second act of my talk progresses through my background, and highlights capstone lessons learned.  This demonstration works to reframe brick walls from frustrations to opportunities.  The capstone lessons double to offer a toolset for problem solving and for overcoming challenges.  Those capstone lessons are related to: building a network of mentors and peers, exercising by doing [side projects], and communication.

The final act of the talk ties everything together, and presents the message.  It explains that there are many paths into software development and engineering.  And, each of those stories are going to come with brick walls.  But, you want those brick walls.  And, when you hit them, that’s when you should take a step back and smile.","As someone that began with no network, no computer science background, no resume, and no idea of where to look for resources, I know how frustrating it can be to clash with every line of code.  It took countless challenges, both in my editor, and out, before I learned to appreciate those blockers.  

For those interested in pursuing engineering, I want to frame brick walls in a positive light, and offer tools for leveraging them to one’s advantage.","I want the audience to look at challenges in a positive light.  And, I want to offer tools for approaching those challenges, and for leveraging them to one’s advantage.","I want the audience to find comfort in the fact that, regardless of skill level, everyone faces problems they can’t immediately solve.  I want the audience to appreciate that those challenges are valuable assets.  And, I want the audience to feel inspired towards seeking out those challenges!","My talk is primarily centered around my own personal experiences and lessons learned.  The backing behind these accounts was informed by countless resources, and data points.  Those externalities are referenced, but I would love to explore expanding this component more deeply, and would appreciate any feedback the committee might offer.  I will also engage my mentors, and solicit their advice on how I might revise my working draft to incorporate more material of this nature.","I’m passionate about my topic, and about getting others interested in solving problems.  I’ve presented this idea at work in a lightning talk format, and have spoken otherwise at a number of meetups across the Chicagoland area.  This would be my first conference, and I’ve uploaded this short video monologue capturing my proposal: https://www.youtube.com/watch?v=LQodYQ00CqM",Thank you for your consideration!,"Accommodations towards flight and/or hotel would be appreciated but are not necessary.  If chosen, please direct any of my budget allocation towards those that might otherwise need it.  My employer Home Chef offers support, and I'm in a comfortable position to join the event.",15 minutes,E,Talk,,,,,,,,
Joshua Fishburn,Joshua Fishburn,fishburj@tcnj.edu,"I’m a game designer, teacher, tinkerer, artist, and perpetual beginner. I teach game design and programming in the Interactive Multimedia Department at The College of New Jersey. I am especially passionate about introducing programming to people who think they aren’t programmers.",,jafish,Male,White,,New Jersey,"Majored in Computer Science, struggling at first (hadn’t taken a real programming course until college) and worked for Motorola for two years and burned out. Didn’t really fall in love with coding until I left, started graduate school, was introduced to Processing and creative coding, started making art games, and took off from there. I don’t know how well this contributes to the diversity you are looking for, but I think what is unique about my approach to teaching is how much I’ve thrown out about how I was taught and focused less on teaching technical topics and more on creating an inclusive culture in my classes. ",Other,Faculty in an Interactive Media undergraduate program.,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms,Other",Art and design courses that included creative coding and socially-conscious game desifn,Art/Creative Coding,,T127: Staying in the Beginner’s Mind as Teacher and Co-Learner,"Code samples,Other",Sample assignments from my class,"This talk will start with my coding journey as an undergraduate C.S. major who almost failed his first C.S. class, stuck it out, graduated, worked, burned out, and truly fell in love with coding when I learned it from an artist in graduate school. This experience informed how my intro creative coding teaching has transformed over the 10 years I’ve been teaching it, from a trying-to-be-CS-1 approach to an inclusive, community-focused course that finds a place for everyone, from experienced to beginner alike, all in the same class. I’ll share how I grade, how I have the more experienced students work with those less experienced students, and what kinds of projects I assign.",The problem of high-stakes assessment that makes it hard for students to feel comfortable exploring coding on their own or sharing that they don’t know something already.,"Help me figure out what I can improve, and take some of the techniques into their own classrooms and workshops.",To feel like they can see themselves and their students as co-learners.,"Will Richardson - From Master Teacher to Master Learner
Learner Centered Teaching concepts (Maryellen Weimar and others)","I’m not sure if I’m the right person to give this talk, but I hope to engage the audience in questions about how they learned to code and what was helpful or harmful to their learning process. I hope to learn as much as I “teach”. But I might be a good fit because my focus is on the personal and community experience of learning to code - what helped (and hurt) me and what “unlocked” it for me.",,No support needed - will request institutional funding if my talk is accepted.,15 minutes,E,Talk,,,,,,,,
Amanda McDermott,Amanda McDermott,amanda.p.mcdermott@gmail.com,"Right now I'm a software engineer at a startup called Tidelift. I've been coding for 5 or so years, but I still feel like I don't know a lot of things! The more I learn the less I know.",https://www.linkedin.com/in/apmcdermott/,@flyingkittans,female,2 or more of the above,,"Boston, MA","I took a kind of non-traditional approach to becoming a developer-- I learned HTML/CSS on my own when I was a kid and learned full stack development at a bootcamp when I was in my late 20's (which was quite unusual in Boston at the time). Also I'm a biracial woman with a disability, and as a result I rarely feel like I fit in within the general tech community in Boston. So I spend a lot of time working on supporting and mentoring other women/people of color, especially those who are just starting out and trying to figure out where they fit.",Employed as a full-time developer for over 3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",In-person bootcamp,Online learning platforms,Other",on the job,Community,,T128: Teach Your Way To Coding Success,None,,"Ever try to teach someone your native language? It’s pretty hard! You’re an expert at speaking it, and it’s hard to grasp the ways in which non-native speakers find it difficult. Same goes for coding. 

Teaching is a great tool for everyone, not just the seasoned experts.

Here are the main 3 reasons:
1. It’s a great way to get more involved in the community and with your colleagues at work. You might have that one thing that you're real good at, and a coworker might have the thing they're less good at. Maybe your explanation will help your coworker finally grok some concept that they've been struggling with for weeks!
2. Teaching a topic forces you to learn it on a deeper level — your students will ask questions you can’t answer right away, and that’s a great thing. Look up the answer together!
3. Finally: in my experience, teaching is one of the best ways to deal with impostor syndrome. Your students are in the place you just were, back when you were learning this not-so-long ago. Look how far you've come! How much you understand now! Feels good, yeah?

(I've never submitted a CFP before, so I'm not sure if this is the level of detail that you're looking for?)","Traditional knowledge suggests that the best teachers are the experts who have years and years of experience, rather than newbies. Not so! Folks who are at the beginning of their journey oftentimes have the best memory of what it feels like to learn something. They may not have the depth of understanding than a more seasoned engineer might, but the beginner’s perspective is nonetheless an important one. Junior devs shouldn’t shy away from teaching opportunities just because they think they’re “too junior”.","Seek out opportunities to share their knowledge! Just because they’re not experts doesn’t mean someone else wouldn’t benefit from learning from them. 
Also they’ll have one more tool in their kit to help quiet the voices telling them that their success is a fluke.","I want them to feel more confident in how far they’ve come, and I want them to feel excited to try out teaching.","Alas, I only have anecdata and my personal experience to share.","My bootcamp organization hired me right after I graduated, asking me to TA a number of their intro front-end courses. I've also mentored students from other organizations and suggest this same advice to them all. Over the hundreds of hours I've spent with newbie devs, I've discovered a lot of these things to be true.",,"I'll probably be able to get my company to cover all my costs. Otherwise I'll just have to figure out lodging & Amtrak tickets on my own, no big deal.",5 minutes (Lightning Talk),E,Talk,,,,,,,,
Nuff,Nuff,info@designbynuff.com,"Nuff has a hard time colouring inside the lines. He designs digital products, brand identities and interactive installations. Having left a Computer Science degree half-finished, he is finding his way back to creative coding. He is a current resident of the Akin Studio Programme at the Museum of Contemporary Art, Toronto, and Ryerson University's Design Fabrication Zone.",https://www.linkedin.com/in/designbynuff/,https://twitter.com/designbynuff,Male,Black or African American,,"Toronto, Canada","I identify typically as a non-coder, so I’m kind of behind enemy lines here. I’m a designer who went to university for Computer Science but left after two years. I work on interactive installations now, which has kind of brought me full-circle. I grew up in six countries, which influences my sense of perspective and desire to leave my comfort zone.","Casually code, but coding is not the core part of my profession",,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms,Other",Reverse-engineering,Art/Creative Coding,,T129: Smart Sculpture: Using Digital Tools for Physical Art,"Demo of working code,Code samples",,"Having spent my entire career to date working in digital media (video games, startups, agencies), I’ve always had a desire to make tangible, analogue things. I particularly love art, the kind made by dead guys that you usually see in white cube galleries. Thanks to some friends, I’ve learned that we can use the tools of our time to make things that feel at home in that world. This, in turn, feeds back into the way we think about the digital experiences we create.",This is for anyone who likes the idea of coding but wishes the things they made could live outside of the screen.,"I want the audience to consider ways they can add spatial, physical and sensory components to the work they do. To create with and for their whole bodies and minds.","I want the audience to feel embodied, emboldened, and grounded in the physical world. I want them to understand they have all the tools they need and if a non-coder like myself can get started, so can they.",Karl Fast's (a colleague of mine) work on embodied cognition drives a lot of my thoughts on working spatially and physically,"I think the fact I've lived this digital-physical tension for so long, as well as the art-commerce tension, makes this a good fit. Additionally, having originally taught myself things like Actionscript as a teenager and now slugging through Arduino, Processing and JS, I understand the scrappy mindset",,"I would be bootstrapping as a freelance/independent worker, and would rrequest return travel from Toronto and accommodation.",15 minutes,E,Talk,,,,,,,,
Liz Krane,Liz Krane,liz@womenwhocode.com,"Liz Krane is a freelance web developer, programming instructor, and founder of Learn Teach Code, an organization that empowers aspiring developers to lead their own local tech events to create stronger, more diverse tech communities. Liz is a professional dabbler who wants to learn everything -- and teach everything she learns along the way!",https://www.linkedin.com/in/lizkrane,https://twitter.com/learningnerd,Female,White,,"Los Angeles, CA","I'm a self-taught freelance developer (looking for my first ""real"" job!) who got carried away with community-building along my path to learning how to code; I founded and run one of the largest tech meetups in Southern California with about 9,000 members (Learn Teach Code). Before coding, I worked in communications (which I went to college for), and my first passion was writing (I wanted to be a novelist or a journalist originally).

This would be my first actual TECH talk at an actual conference. :) I've only given one conference talk before and it was a purely soft-skills talk about community building. Here's a recording of one version of that talk given at a meetup group: https://www.youtube.com/watch?v=augYP-USbXc",Currently looking for my first full-time developer role,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Art/Creative Coding,,T130: Building a Music Learning Game with Web MIDI API and Elm (My First Functional Language),"Code samples,Demo of working code,Live coding",I plan to bring a small MIDI piano to plug into my laptop to demo!,"I've always wanted to learn how to actually read music -- like how to *hear* with your eyes as you glance over the notes. I've also always wanted to learn more about functional programming. (What's the fuss all about, anyway? Does a web developer like me need to know this stuff?)

So building my first Elm app as a music-learning game was a two-for-one deal! I'll share my greatest challenges and most valuable lessons from building this musical side project, with Elm as my first introduction to purely functional programming.

OUTLINE:

Intro: My inspiration for this project

- Start with a meme of ridiculously complicated sheet music, and maybe another one involving a cat playing piano ;) Share: ""I taught myself to play piano the way I taught myself to code: lots of trial and error! You can get really far that way! But at some point, you'll realize that some very basic underlying skills -- like being able to touch-type -- will make a HUGE difference for your progress. Sight-reading sheet music is basically the same thing as touch-typing, but for instruments.""
- When I discovered that there's a Web MIDI API built into web browers, I knew that I had to make something musical and codey to combine my interests!
- 30 second demo: Show web app that draws notes as I press a few keys on the keyboard

Intro part 2: So why did I decide to use this new language called Elm?

- It's a beginner-friendly alternative language to combat ""JavaScript burnout"" from so many competing frameworks and tools
- 30 sec demo: misspell ""List.nap"" to show example of Elm's incredibly friendly and helpful compiler errors. (Contrasted with ""undefined is not a function"" and similar cryptic JS errors)
- An Elm project has the basic features of the following tools combined, but without all the extra configuration: React, Redux, TypeScript, Webpack, and functional libraries like lodash or Immutable.js
- It's SO simplified and friendly in fact, that McMaster University is using Elm to teach coding to 10 year old kids. If they can learn a statically typed, purely functional language, then I figured so could I!

Web MIDI in 1 minute:

- Plug in a USB instrument, copy-paste some boilerplate JavaScript code from MDN's website, and you'll get an array of 3 numbers representing which note is played (and some other info)
- Show chart of: the MIDI codes map 1-to-1 with notes on a piano. Easy!

SVG animations within Elm:

- Demos of a couple different versions of my app to show how it progressed from dots on a screen, then to *animated* dots on a screen that respond to user input
- Show graphic of the underling Elm Architecture that makes this animation possible, at a high level (model - view - update, very similar to MVC)
- Inspired by the game that taught me how to touch type (Mario Teaches Typing), I'll then show the old Mario game image sprites that I decided to throw into my game
- One of my most annoying bugs that I learned a lot from: those ""convert to SVG"" tools just embed the PNG image inside an SVG, they don't actually make it into a *scalable* graphic!! Turns out, converting PNGs to SVGs isn't that easy. So I wrote a script to do it myself!
- Show screenshots of the ""converted"" fuzzy looking pseudo-SVG versus the real SVG generated by my script

Final demo:
- I'll play the game for 30 seconds or so at the end to show off the updated old-school video game graphics!","Functional programming languages are perceived as complicated or scary (as is sight-reading sheet music), even though there's a huge benefit to learning them!","The audience will walk away with concrete examples of: 1) the web MIDI API, 2) SVG animations, and 3) a functional front-end programming language like Elm.",I want the audience to feel excited and inspired to try out a purely functional language for the first time (like Elm) -- and to experiment with musical projects on the web!,"Source code of a couple popular Elm libraries, background info sourced from interviews with and talks given by the creator of the language (Evan Czaplicki) and other influential developers in that community.","Elm is the first new language I've learned in a long time that reminded me how much I love working with front-end code, after getting seriously burnt out on all the competing JavaScript tools out there. I think other web developers (and aspiring developers) in the audience will be able to relate to that challenge! 

I also have four years of experience giving short talks and programming workshops at my meetup groups, mostly working with beginners, so I know how to present a complicated / intimidating topic in an approachable and fun way!",,Flight from LA to NY. (Can stay with a friend in NY instead of a hotel),15 minutes,E,Talk,,,,,,,,
Oscar Spencer,Oscar Spencer,oscar.spen@gmail.com,"I'm a software engineer who cares deeply about building awesome, usable products. I've primarily worked at startups, since that's where I have the most influence to make things happen. In my spare time, I hack on compilers!",https://www.linkedin.com/in/oscarspen/,@oscar_spen,male,Black or African American,,"Boston, MA","I'm a first-generation college graduate who found himself lucky enough to pursue a computer science degree. I've been out of school for nearly two years, and have about four years of experience working in the tech industry. This worked out just because of internships! Unfortunately, some of my friends in high school weren't afforded the same opportunities I was, but I've helped them on their journeys to become software engineers as well through mentorship.",Employed as a full-time developer for over 3 years,,CS degree,,Career,,T131: Beyond Coding: Real Engineering,None,,"The talk will begin by speaking to the merits of learning to code, learning new languages, and learning new frameworks and libraries. We’ll then discuss how that’s not all there is to engineering. At the end of the day, engineering is all about problem-solving: how could we ever effectively solve problems without understanding them fully?

The next section of the talk will be about understanding the context of problems. A problem, such as “build an application that does X,” doesn’t paint the full picture. We must take a step back and ask some important questions (each explained in detail): 
“What business goals are we trying to achieve?” – We never want to do any work that isn’t moving the business forward in some way. Knowing this helps you frame the nature and urgency of the problem at hand.
“Who is the user of this thing we’re trying to build?” – A user who uses the software every day needs different interactions and guidance than someone who will only ever see it once.
“Why does the user need this?” – Thinking through what the user is trying to do helps further understand the interactions.
“Why does the business need this?” – This ties into business goals. How could this help us get where we want to be next year?
“Who is ‘buying’ this?” – While this could be a stakeholder instead of someone paying you money, the presentation of the software could be the deciding factor of why they decide to buy.
It’s once we know the answers to these questions that we can ask the coding question: “how will we build this?” Every single one of those questions influences the answer to the coding question. Certainly, whoever is managing the product has thought of all these things, but you’re going to be the one implementing it, and the details matter. I like to think of the microdecisions that we make when coding: how an interaction with a UI element works, or even something as simple as how some data is ordered. These are all influenced by our interpretation of the problem, and something incredibly small can be the reason why someone decides to buy your product, or why a user decides they like your feature and they want to use it more. These questions also influence whether or not you feel your team should take on technical debt to get something out the door faster. That’s always a healthy conversation with your product manager, but knowing the answers to those questions allows you to make an informed decision.

The last section of the talk is the encouragement and “how do I learn these skills?” part of the talk. Yes, it’s already hard enough to worry about honing technical skills, and it’s a lot more to now have to think about. This shouldn’t deter you; these skills are easily acquired on the job. Engage with different parts of your organization and ask them to explain their worldview. This works great over coffee or lunch! Sit down with your product manager and have them walk you through their thought process for whatever new feature they want you to write. As long as you’re actively considering each of these things, you’ll get better over time.","Software engineering isn’t just about writing code or solving tough algorithmic problems. Real engineering requires a full understanding of the business context of the problem you want to solve. To be a great engineer, you’ll need to have hats for product management, design, sales, and marketing.","I want listeners to understand that while it’s important for them to hone their coding skills, it’s equally important to hone their product, design, sales, and marketing skills as well.",Empowered to take control of their view on engineering.,N/A,I understand the struggles of finding your way in this industry!,,None,15 minutes,E,Talk,,,,,,,,
Candace Worthen,Candace Worthen,candace.worthen@gmail.com,"Candace Worthen is a Software Engineer at IAC Applications and is no stranger to hustling. After having multiple careers in journalism, taking photos of Hillary Clinton and creating an app that features inventors of color, she understands how difficult it is getting a foot in the door and needing more direction. Candace aims to share her story to help others break into tech like she did. ",https://www.linkedin.com/in/candaceworthen/,@candaceworthen,female,Black or African American,,New York,"Coming from a background in journalism, I had no idea of the ecosystem behind the computer I use everyday. I didn’t know people can actually have careers and get paid to create websites and programs I used all the time. I didn’t get introduced to code until my late twenties. I was having a hard time getting my foot in the door in the field of journalism and was looking for a new direction. I kept stumbling upon the word “code”, I would hear it on the radio and see it on TV. This led me to do more research where I found an organization that offers HTML and CSS workshops. I took the workshop and instantly knew what I wanted to do next, which was become a developer. However, the road to get there was not easy, I did several steps that helped get to where I am today. My story along with the actionable steps I took to be apart of this industry, especially as a woman of color, contributes to the diversity and viewpoints. I want to help others who are looking for jobs in this industry but are hitting roadblocks along the way. ",Employed as a full-time developer for less than a year,,Other,web development certificate program,My Coding Journey,,T132: Film to FullStack: My Journey to Tech,Other,Slides with tips and resources,"Have you ever worked in non-tech and wondered what it would be like to join the other side, 4 years ago I decided to do something about it. Here are three big lessons on how I went from being a journalist to software engineer. These three big lessons will include how to get your first job, how to get the best job and how to keep evolving after finding the job. 

The First Lesson: How to get your first job:
 
When I got my first job, I was completing a fellowship with an tech agency in Philadelphia. Upon completion there was a showcase event where fellows gave presentations and demos of their projects. During the showcase, there was a reporter who covered the event and wrote an article about it on the a media blog. This got the attention of my first employer and helped me land the first job. Even though I’m appreciative of the opportunity and learned so much, it wasn’t the best fit. This brings me to lessen one, do your research beyond reading the job description and the company’s website. 
Here are some steps below to not only help you find the first job but also do your research: 

* Check for Glassdoor reviews for all jobs you are interested in applying 
* Join slack channels with people who have similar interest or is in the career you would like to enter

Why ? Because people will mention available jobs at their company and will often be the point of the contact or will know the person who is directly in the hiring position. This is an easy way to connect with someone who works there by sending a direct message. Plus you can ask questions about the job environment, requirements, and the type of person they are looking for. 

* Search on LinkedIn for people who have the job you want and reach out, always write a crafted message 
* Schedule coffee chats, if possible. This can make the interactions more memorable and allows you to ask about the company’s environment as well as learn about someone else’s journey

The Second Lessen: How to find the next job:

 When you find your first job, it’s a great first step but never think the road ends there, it’s on the beginning. Think about what you want your future to look like, does your current job help you with those goals ? Does the company give you what you need in order to thrive. 

After working some time in my first job, I realized there were a few things I liked, didn’t liked and other things I needed that were missing in order to excel. When searching for the next job, especially during interviewing, I made sure to ask certain questions that pointed to what I needed. 

Here are some steps below that I used to help identify goals for the next job. 

*Take an assessment of your current job,  things you like, dislike and what could be better (supportive environment, flexible work hours etc)
*Pay attention to upward mobility, for example, increased income, promotions, etc. Sometimes it takes finding another job to get to the next level of your career

How to keep evolving:

When finding a new job, I’ve made the mistake of dropping off the face of the earth, which isn’t a good thing to do. I’ve learned to try and stay connected with people as much as possible. This allows you to build a support system of people who care and want to see you flourish. You never know when you need to confide in someone or be that person for someone else. Remember to stay in touch, people want to see how you’re doing.  

Here are some steps I’ve taken below that helped me to evolve. 

*Stay connected to your network and remember to stay in touch and follow-up
*Continue to attend networking events and conferences, great way to meet familiar faces
*Also attend professional workshops and events 
*Keep track of what you’ve learned","Landing the first job in tech, which can be very daunting especially when you’re switching careers. Finding the right fit and environment, avoiding toxic environments and not taking the job right away just to get a foot in door. 
Not having a support system during the entire process even after you land the job, could hinder your growth and keep you from evolving ","I want the audience to take away actionable steps and career advice to help them land a job in tech. There are specific steps that has helped me, which included networking,  conferences, coffee chats among other things.  By hearing my story and the steps that helped me along the way, I want to know that it's possible and within reach. ","I want to feel empowered and that there not alone
Lessen the fear of networking  
Have actionable steps that will help land the first job and keep evolving","https://www.payscale.com/career-news/2017/04/many-jobs-found-networking
https://medium.com/the-post-grad-survival-guide/avoid-a-toxic-workplace-9cc6984ef22e
https://dev.to/helenanders26/6-ways-to-level-up-your-career-56ik",I am the right person to give this talk because I have overcome barriers when switching my career from journalism to tech.  I was often worried about finding a job and I understand how intimidating it can be. I want this talk to help others feel empowered and know that it’s possible to be a developer or engineer coming from a completely different background.,,,15 minutes,E,Talk,,,,,,,,
Houssein Djirdeh,Houssein Djirdeh,houssein.djirdeh@gmail.com,"Houssein is a developer advocate and engineer on the Chrome team. He is passionate about speed, progressive enhancement and building for the mobile web. He's an accomplished speaker, author [1] and creator of GitPoint [2], a React Native GitHub client for iOS and Android.

[1] https://www.ng-book.com/modern-ng1/
     https://www.fullstackreact.com/react-native/

[2] https://gitpoint.co/",https://www.linkedin.com/in/housseindjirdeh/,hdjirdeh,male,Black or African American,,"San Jose, CA","I've spoken at over a dozen conferences and events. Here's a few:

* Chrome Dev Summit (U.S.): https://youtu.be/reztLS3vomE?t=747
* React Boston (U.S.): https://www.youtube.com/watch?v=zSECXuCB8wg
* .concat() (Austria): https://www.youtube.com/watch?v=RcHWKieBslk
* Full Stack Fest (Barcelona): https://www.youtube.com/watch?v=CTTL5_G2U9U
* SeattleJS (U.S.): https://www.youtube.com/watch?v=GYpiBGx9tmk

More importantly, I gave my very first talk at a tiny meet-up in Toronto in 2017 :). A lot has changed in a short span of time.",Employed as a full-time developer for over 3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,My Coding Journey,,T133: Getting lost in the coding sauce,Code samples,,"The beginning of the talk will cover the very first time I ever saw a line of code (8 years ago at university). It was an Introduction to Programming course and I hated it (vowed not to ever code again). I want to spend time in this part of the talk to explore how flawed the education system can be for new coders.

In the middle of the talk, I'll move on to discussing how I began to code again at an internship and kind of liked it. It was only after I graduated (2015) that I wrote my very first lines of HTML, CSS and JS. Being able to explore building websites for fun was amazing, but I still didn't know how to find my footing. I started a blog soon after, built a small Hacker News clone and announced it in a tiny tweet [1]. That kicked things off nicely :)

The end of my talk will sort of contrast how much of a difference building and sharing a tiny thing has changed my life. Getting lost in the coding sauce means diving head-first into something you enjoy doing might just be the very best way to learn, and traditional learning paths can sometimes pale in comparison.

-------

Some fun facts I'd like to sprinkle in my talk:

* I literally created a Twitter account to follow a single individual. I now work with him everyday.
* Someone suggested I apply to give talks in 2017 because they thought I was good at teaching. I thought they were crazy at the time, and speaking at conferences is now part of my job as a Developer Advocate. 
* I wrote my first line of HTML code in 2015. Less than three years later, I received an offer to join Google Chrome as a Developer Advocate for Web.

------

[1] https://twitter.com/hdjirdeh/status/774369046900928513","Traditional learning paths (universities, bootcamps, courses, etc...) can help many people learn a path of development (web, mobile, etc...) quicker, but they usually miss out on some crucial things that can make a difference in someone's career.","Takeway: Get lost in the coding sauce. Whatever you enjoy doing, maybe just doing it and sharing your work is the best way to learn. You don't always need someone to tell you what to do :)",Inspired to get out there and get lost in sauce.,Stats that demonstrate how useful collaborating on community-based or open-source projects will be mentioned.,"* I've only worked at three jobs after graduating
* I began web development quite recently (in 2015)
* I gave my first talk very recently (in 2017)",,Will need flight + hotel coverage.,15 minutes,E,Talk,,,,,,,,
Sharell,Sharell,Bryant,"Sharell Bryant is a self-taught programmer living in NYC where she currently works as a senior software engineer at Teachers Pay Teachers, an educational marketplace used by more than 2 out of 3 teachers in the US. At TpT, Sharell is the tech lead of the Web Platform team helping support product engineering on the frontend. Outside of the office, you can find her out for a run in the park or playing guitar at an open mic.",https://www.linkedin.com/in/sharellbryant/,https://twitter.com/shrell,female,Black or African American,,New York City,"I taught myself how to code after completing my undergraduate degree in Cognitive Neuroscience. I moved to NYC to attend Recurse Center, a self-directed retreat for programmers and used that time to teach myself Ruby and JavaScript enough to start my first job as a software engineer. I'm also an African-American woman who is passionate about advocating for underrepresented people in tech. I hope that sharing my experience as a self-taught programmer and person in tech with an underrepresented identity can help serve as inspiration, as others have done for me. ",Employed as a full-time developer for over 3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Other,In-person bootcamp",,Career,,T134: I'm Not Perfect (And I Know I Never Will Be),Other,Technical documentation,"When I transitioned into a tech lead role, I was terrified of the fact that making mistakes was inevitable. Instead of trying to prevent mistakes I’ve reframed my perspective to focus on what is in my control. In this talk, I’ll give concrete examples of turning my mistakes into opportunities for learning. People will walk away with tools to use for becoming comfortable with not being perfect.

Some actions I have taken to reduce my anxiety about making mistakes have been not making the same mistake multiple times, presenting solutions after a mistake has been made, minimizing the risk of mistakes happening, and being prepared for things to go wrong. The tools I'll describe for turning mistakes into growth opportunities include communicating effectively, asking for help when you need it, and taking ownership when things go wrong.","I've felt nervous to take on new roles or challenges in the past because I felt like I was supposed to be perfect from the start. However, with support from mentors and managers, I learned that my success in a new role was not dependent on not making mistakes but rather what I learned from them. This talk will be applicable for anyone transitioning into a new role or tackling an unknown technical challenge.","After this talk I want the audience to have concrete techniques that will reduce the nerves and anxiety that can come learning something new or doing something for the first time, specifically focusing on technical examples. These will be actions that they can use right away both in changing their mindset and also how they communicate with the people they are building with and for.","I want the audience to feel confident about taking on new challenges in whatever stage of their coding journey they're on. After the talk, I want an audience member to feel relieved and believe that they can give themselves the space to make mistakes while learning to grow from them.","Many of the techniques I've learned are from books about managing and programming including ""The Manager's Path"" by Camille Fournier, ""Managing Humans"" by Michael Lopp, and ""The Pragmatic Programmer"" by Andrew Hunt and David Thomas.",I'm the right person to give this talk as someone who lived most of my life identifying as a perfectionist until I realized that being so hard on myself was inhibiting me from reaching my full potential. Deciding to start a tech career after having graduated with a degree in a completely different field than computer science forced me to accept that it was okay to not be perfect and that it's okay to not know everything. I've learned a lot of lessons for how to reduce my anxiety around making mistakes that have allowed me to learn on the job and continue to take on new challenges at work that I'd love to share.,,I live in New York so won't need any travel costs covered.,15 minutes,E,Talk,,,,,,,,
Christina Zhu,Christina Zhu,zhu.s.christina@gmail.com,"Christina is a Software Engineer at Amazon, a hackNY Fellow ‘17 and the Co-Founder of HackDavis. She has been awarded with the SIGNAL Scholarship by Twilio, Grace Hopper Scholar 2016 by Anita Borg Institute and the Engineering Diversity Scholar by Box, among others. In the future she plans on speaking at as many conferences as possible and to get involved with Girls Who Code!",https://linkedin.com/in/christinaszhu,@cszhu,Female,Asian / Pacific Islander,,"Seattle, WA","Hi! My name is Christina. I got started programming when I was 9 making layouts for Neopets but didn't actually think of it as a career until I was already halfway through college. I had spent a large portion of my life as a creative, participating in literary magazines and spent several years of my life on art lessons. I've recently gotten back into it. I am currently pretty early in my career and spend a large portion of my time participating in the developer community through speaking at conferences, volunteering at Girls Who Code events, Hour of Code, and more. I've also strived to be a community organizer. In my spare time I like to write a webcomic about sloths and try to mentor girls who are early in their career and love looking at the intersection of art and code and social good.",Employed as a full-time developer for 1-3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Art/Creative Coding,,T136: Puppy or Bagel? With Machine Learning Vision APIs,"Code samples,Demo of working code",,"Part 1: What is machine learning? (approx. 3 minutes)
We go through a very, very brief and condensed talk about machine learning and what it is and how it works.

Part 2: Computer Vision (approx. 5 minutes)
I will introduce us to several of my favorite image recognition APIs and explain how they work in conjunction to machine learning in order to recognize images.

Part 3: Training Your Model: Puppy or Bagel? (~3-4 minutes)
In this part I will give an example of my side project, Puppy or Bagel?. It is a side project that tries to determine whether or not an image is of a dog or of a bagel (https://static.boredpanda.com/blog/wp-content/uploads/2016/03/dog-food-comparison-bagel-muffin-lookalike-teenybiscuit-karen-zack__700.jpg)

Part 4: The Future of Machine Learning and Computer Vision (the rest of the time)
Hopefully I can end the talk on a good note, and then give some samples of what projects this could be used for in the future... for better or for worse.","With the increase of power in AI and ML, it is more important than ever for engineers to realize the ethical implications of their work, especially in the realm of computer vision. Especially with the future of such systems being used by the government to track and spy on citizens, it is important for people to understand how machine learning image recognition works. Also, it has a lot of potential in the future to do good as well: such systems are being used to determine disease through images and identify sicknesses. There is a lot of potential to do good or bad.","Hopefully they will be more knowledgable about machine learning and computer vision! I hope they will walk away with an idea of how to incorporate such technology into their projects and use it for social good, even though the project behind the talk is rather silly.","I want them to laugh, and hopefully feel hopeful, empowered, and inspired. Or at least I hope they got a chuckle out of it.","I plan to use several studies showing applications of computer vision, in the future and for now, as well as the accuracy of such systems. It would be great if I could find an academic study on this!","I have previously worked at Clarifai (a machine learning vision company) as an intern and learned a lot about the ethical boundaries of such a technology. Clarifai got sued last year after working on the drone image recognition project from the US Government by several former employees for refusing to tell the government that several of their servers were hacked by Russia. This experience shook me to the core as I had no indication that I was helping Clarifai work on such a project during my short time there. Since then, I have thought a lot about the technology that Clarifai was working on and hope that I can help people build it for a better purpose than for drones. I have also given talks about social good and technology and hope to inspire engineers to think for the greater good when they build technology.",,I am actually looking for a new job right now but once I figure out where I'm working at next I will be able to give a better answer about this.,15 minutes,E,Talk,,,,,,,,
Monica Puerto,Monica Puerto,puertomonica6@gmail.com,"I am a Data Science masters candidate at American University. A lot of my coding has been self taught learning from Women Who Code Community, online resources, and a General Assembly bootcamp. I am a director for women who code and love teaching Python and giving back to my community.  ",https://www.linkedin.com/in/monicapuerto/,@monipip3,Female,Hispanic or Latino,,Washington DC,"I am a first generation Mexican American woman. I care about diversity in tech and immigration. I care about using data sources for good. I like to think of myself as an activist. I am also part of the Diversity  & Inclusion Team at my company. My last post on my website was analyzing DC homicides and demographics, http://www.monicapuerto.com/homicides-in-dc/ . ",Currently focused on developing my coding skills,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,New tech,,W001: No export data available? Webscrape it instead.,,,My goal for attendees would be to web-scrape several pages out of Texas Department Health Services. This will be added value to their coding journey because not everything is readily available to export in a nice data format eg: CSV and people should not shy away from data. ,,,,,I have given a webscraping talk before at PyData which was 1 hour. https://www.youtube.com/watch?v=YBdc1jbhBls,,"I am going to grad school right now so a train ticket will be helpful, I can find a place to stay.",,A,Workshop,They will create a Python File that will webscrape this table from 2008 to 2015 https://www.dshs.state.tx.us/chs/vstat/latest/t14b.shtm . We will create a list housing the urls for each of these tables and webscrape the entire table and then append each year to create 1 big table for all the stats with a new column distinguishing the year. We can then visualize/ analyze the birth rates by county with Pandas.,"I will create a slide deck similar to this https://github.com/monipip3/wwcdc/blob/master/webscraping/PYDATA_BeautifulSoup.pptx which I did for PYDATA.
I will go over what is webscraping and some best practices and why it is important to have this skillset as a coder or analyst.","They need their laptop, we will install Python, and a series of packages (requests , lxml, beautiful soup, and pandas). ","""Mon, July 22""",I am willing to give my workshop two times in a row.,,,
Amy Dickens,Amy Dickens,amy@adickens.co.uk,Amy is a Web Developer Advocate at Samsung Internet and a PhD researcher for the Mixed Reality Laboratory at the University of Nottingham. She found her way into tech through researching technology used in accessible music making; and is on a mission to make the tech industry consider accessibility as a foundation and not a feature.,https://www.linkedin.com/in/amy-dickens-46568954/,RedRoxProjects,female,White,,"London, United Kingdom","My background is in audio engineering (which is what my undergraduate degree is in) and the numbers for gender imbalance in that industry were even more shocking than in tech. My interest in technology, and curiosity in problem solving, has propelled my career from a performing musician through to a developer advocate. As a result I've had some quite unique experiences. 
Today, I traverse both the worlds of music tech and tech, from taking part (and winning *humble brag*) a hackathon at Abbey Road Studios to giving talks at developer focused events worldwide, I've had some amazing opportunities to engage with people in the tech industry and would love to share what I have learnt from this. Having had no formal training for writing code, I still consider my coding skills to be quite under developed. But I've learnt so much from the communities around me and want to do my part in showing people that there is no ""right"" way to come into tech as a career.",Just started learning to code,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Accessibility,,W002: Never have I ever... tested my website for accessibility,,,"Attendees will learn the following from this workshop:
1. What it feels like to navigate a web page with a variety of accessibility requirements.
2. What the main problems are for web accessibility today.
3. How to test for accessibility in their websites and build with accessibility as a foundation and not a feature.",,,,,"For the past three years I have been researching accessibility in technologies used for music making; as a result I have a first hand experience of the frustrations that bad UX for accessibility can lead to. Now in my role with Samsung Internet, I have had the opportunity to get involved in web standards for accessibility through W3C. Whilst I'm fairly new to coding, I have been teaching technical skills through leading workshops for a number of years as a GitHub Campus Expert and can easily adapt my teaching style to suit the level of knowledge in a room.","This will be the first time I will be running this workshop, though I have given a number of talks on accessibility and tech. ",If accepted my work will cover my travel expenses. ,,A,Workshop,"Attendees will build a website that addresses the accessibility requirements of WCAG 2.1 (the most recent Web Content Accessibility Guidelines). 
They will start with a basic template that currently does not meet the specification and go through point by point, and make changes to the website that will make it conform to the web standards for accessibility. At each stage they will be shown how to test the accessibility rating using various browser tools.","In the introduction to this workshop, we will discuss the different ways in which the web can be navigated when you have an accessibility requirement. We will highlight the problematic areas for different accessibility needs and give attendees the chance to experience these first hand. We will then introduce the Web Content Accessibility Guidelines and other resources that help us to build more accessible websites. ",Paper and pencils will be helpful for attendees to do rough sketches or notes during the workshop.,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Yechiel Kalmenson,Yechiel Kalmenson,contact@yechiel.me,"Yechiel Kalmenson (aka Rabbi On Rails) was born and raised in Brooklyn. He got his rabbinical training in Israel and spent a few years teaching both children and adults.

After a brief stint in Tech Support, he found his next calling and went on to study software development.

He currently lives in works at Pivotal Software in New York, using tech to support his passions for teaching, coding, and flying.",https://www.linkedin.com/in/yechiel-k,yechielk,Male,White,,"Brooklyn, NY","I started off as a rabbi and a teacher. A few years ago I pivoted to tech, but brought my passion for teaching along with me.
I love introducing people to the joys of tech through my blog (rabbionrails.io), my weekly newsletter (Torah && Tech), and by attending meetups.",Employed as a full-time developer for 1-3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Career/Personal Branding,"The workshop is about creating browser extensions using ""JavaScript"", but I feel like it can also go under ""Creative Coding"" and has implications for ""Career/Personal Branding"" and ""Resume Prep"" (as explained below)",W003: Writing Your First Browser Extension.,,,"The direct goal will be for them to walk away with a working browser extension that they coded themselves.

The broader goal is for them to have learned a fun and easy way to create meaningful projects that they can add to their resumes.",,,,,Ever since graduating Flatiron I've stayed active in their Slack channel and coached quite a bit of students through their job hunts. I really feel that having projects you are passionate about beyond your bootcamp projects is one of the best things first-time job-seekers can do to upgrade their resumes.,,Coming from Brooklyn I don't have any travel needs.,,A,Workshop,"Attendees will make a working browser extension. I have a number of ideas for which extension to actually make (a Pomodoro-like extension that reminds them to take breaks at set intervals, a fun extension that replaces all the images on a webpage with cat pictures, and maybe others).

We will roughly follow the outline in this tutorial (https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Your_first_WebExtension), though the actual extension will be something more fun and meaningful.","I plan on starting off by telling the story of how I wrote MY first browser extension (which I wrote up on my blog: https://blog.yechiel.me/explain-xkcd-to-me-145e2e7db9b3).

I will also spend a few minutes explaining why I think browser extensions make for great resume padding for job seekers (especially those looking for their first jobs and don't have much real-world experience to list).

When I was job-hunting I came to realize that when interviewers would ask about a project I made, it didn't matter much how complex the project was, which technologies it used, or how many nights I spent banging my head on the keyboard. What did make for a good project was if it had an interesting story behind it, if it solved an interesting need, and if it was something I was passionate about.

In other words, a simple Rails CRUD app I made to help student pilots log their hours (something I'm very passionate about) garnered more interest than my bootcamp final project, a complex React app with a Rails API back-end that took me weeks to complete and the only real problem it solved for me was that it helped me graduate.

When I wrote my first browser plugin I realized that they could be the perfect resume project. They are relatively easy to make, and they are some of the quickest ways to solve a problem, tell a story, and/or fight for a cause. In other words, they are the epitome of convenience in using tech to solve your needs.",The only thing attendees will need is a laptop with their favorite text editor and a browser (preferably Firefox).,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Vicki Niu,Vicki Niu,vicki.niu@gmail.com,"Hi, I'm Vicki! I got started tinkering with computers as an awkward teenager when I joined a LEGO Robotics team. I decided to study computer science in college because I was excited about the ways in which technology could be a force for good. Today, I work on the Protocol team at Interstellar, exploring cutting-edge blockchain technologies.",https://linkedin.com/in/vickiniu,vickiniu,Female,Asian / Pacific Islander,,"New York, NY","I'm used to being one of the youngest people in the room, the least experienced, and often looking very different than everyone else! It used to intimidate me a lot, and I felt like there was no way I would ever catch up to my classmates or coworkers. I've since learned that most things aren't nearly as complicated as folks make them out to be, and that you can be excited about technology without being obnoxious. I care a lot about making things accessible to people (especially things that seem ""scary"" like blockchains! cryptography! yikes!), so I'm excited to hopefully get the chance to do that in this workshop :)",Employed as a full-time developer for less than a year,,"CS degree,Online learning platforms",,New tech,,W004: What the heck is a blockchain?,,,"My goal for attendees of the workshop is mainly for them to walk away feeling comfortable and confident with blockchain, whether that means talking to friends about the cryptocurrency space from a technical perspective or starting their own blockchain project. For anyone interested in the space, I think it can be really helpful to have a primer to a really confusing new arena. Regardless, it will be an exercising in breaking something down with a big aura of mystery to realize that there's no magic, and they absolutely can understand all the technologies!",,,,,"Without tooting my own horn too much, I think I'm a pretty fun & energetic person, and I really care about breaking things down to be accessible and interesting to people. One of the reasons that I love working in blockchain is that I find all of the technology both really interesting and impactful — I'd love for more people to feel the same way and also jump into the space, but there are a lot of barriers to entry, especially for folks who are early in their careers or traditionally underrepresented in tech. I'm also just starting out as an engineer, so I'm presenting this topics more from a place of being interested than any particular expertise :) ","I'm open to giving a short ""Blockchain 101"" talk, but I think a workshop would be really fun!",,,A,Workshop,"Attendees will make a simple web app that lets you send test funds to your friends on the Stellar network! 

We'll be building on Stellar (https://stellar.org), and first walking through some principles to understand the blockchain space. Then, we'll get started with building a project that will let you:
 - create a Stellar testnet account
 - generate a link to receive testnet funds
 - send this link (aka sending funds) to your friends!","I'll be giving an abridged version of this introduction to blockchains (https://www.youtube.com/watch?v=Lmgx9KQLueY), with a few activities that get everyone involved in simulating a blockchain network and achieving consensus on a transaction, as well as how we would prevent fraud!","Attendees should bring a laptop or some other device they can write code on! They can work in a number of languages if they want, but using JavaScript or Go will be the easiest for following along. ","""Mon, July 22"",""Tue, July 23""",,,,
Vitor Talaia,Vitor Talaia,vitor.talaia.oliveira@gmail.com,"Vitor is a developer at Code Miner 42, focused on front-end technologies, performance, passionate about building clean user experiences and mentoring. I like to watch Formula One and play with truck simulators.",https://www.linkedin.com/in/vitortalaia/,@vitortalaia,Male,Hispanic or Latino,,"Sorocaba, Brazil","I have some experience in speaking and giving workshops. Most of them in Portuguese and focused on students from the colleges of my home area, so I have dealt before with interns/new developers that are currently starting their career. I've recently started speaking at conferences in English, here's the recording from my talk last year at The Conf BR (the same talk I gave at PerfMatters Conference 2018), about the AMP project: https://www.youtube.com/watch?v=6991LkqMnOo",Employed as a full-time developer for over 3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms,Other","I have a college degree in Technology in Internet Systems, but it's not at the same level as a CS degree (but almost :D)",JavaScript,,W005: Where are the bikes? Using JavaScript to help you to find a bike sharing station for your next bike ride.,,,"The attendees will see how to create a Vue.js application that consumes an API, learning on the process how to structure an application, interacting with an external service, isolating responsibilities on their code and most importantly: Getting more excited to use their local bike sharing system! ",,,,,"I've always wanted to create a tool that could help people on their daily tasks, on this project that I created for a workshop in a Brazilian college tech week I could feel that the participants were glad as well that they were able to create an application that could actually be used by them to find a bike station in the city :)  I've worked with Vue.js and Vuex before on an international project, I totally fell in love with the framework and started using it on my workshops to new developers at the colleges I was invited to speak.","I'm not sure if this is a common problem in the US, but here in Brazil we usually don't have many options when it comes down to find bike sharing stations. A good chunk of the available apps are buggy and/or can only be used in a specific city.",My company will cover my travel expenses.,,A,Workshop,"We'll create a Vue.js application that will consume the CityBikes API in order to get data from a lot of bike sharing systems around the globe. We'll see how to isolate responsibilities on the code (learning that is not a good practice to keep all of your code at the same place and dealing with a lot of stuff at once), use Vuex to store the local application state and how to integrate it with both the application and an external data source (the API), etc. At the end of the workshop, we'll have an application that is useful to see where you can find the nearest stations that have bikes available for the users.","Have you ever wanted to take a ride using your local bike sharing system and was disappointed that there were no bikes available for use? Our application targets this problem and will help you to find a place where you can get a bike and be happy in the streets of your city (and why not, a lot of cities around the globe?). It's always joyful when you can actually create something that will benefit someone, even when this person is yourself.",The attendees will need a notebook to be able to write the code for the application; a whiteboard would be helpful to explain in detail some concepts.,"""Tue, July 23"",""Mon, July 22""",I am willing to give my workshop two times in a row.,,,
Kenigbolo Meya Stephen,Kenigbolo Meya Stephen,expensivestephen@hotmail.com,"I'm Kenigbolo Meya Stephen, Full Stack Software Engineer working as the Frontend Engineering Team Lead at [BCaster OY](https://bcaster.com). Formerly Arch Conveyer/Community Manage of CodeAfrique(now Reload), a not-for-profit weekend intensive software engineering bootcamp for underrepresented groups in IT based out of Estonia.",https://fi.linkedin.com/in/kenigbolo,https://twitter.com/expensivestevie,Male,Black or African American,,"Helsinki, Finland","I'm both a Software Engineer as well as a Software Engineering teacher. I had my bachelors degree in ICT and my master degree in Software Engineering. I started off in tech with Network Engineering while working at a cyber cafe. I worked with configuring switches et al before starting my Bachelors in ICT. It was during my bachelors degree I got my first Software Engineering Job.

Initially I went into the University with to study Dentistry but switched to IT as I enjoyed video games and was curious as to how they were made. I also enjoying configuring access points on mobile phones and this had a huge influence in my network configuration skills.

In the past years I've dabbled from beginning to write code in C++ all the way down to using Ruby, Python, R and now fully focused on Javascript in the last few years. In the last 2-3 years I've also spent a lot of time volunteering via teaching of web technologies to the less represented in Tech in Estonia (Code Afrique).

I started Code Afrique in 2017 mainly because I discovered that we were less than 10 African/African Americans who were employed as Software Engineers in Estonia at the time. I wanted to see more engineers come to limelight so I went in to start the code Afrique project voluntarily so we could give them a chance to get the needed skills for the industry",Employed as a full-time developer for over 3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",In-person bootcamp,Online learning platforms",,JavaScript,,W006: From Jquery to VueJS - Not Rocket Science,,,"Changing applications from one technology to another can turn out to be rather very challenging depending on the type of tech stack. If you’ve ever migrated a large project then you can only imagine how daunting it could be, most especially moving from DOM manipulation stack to a Virtual DOM stack. The goal of this workshop is to introduce practical steps in the phase of transitioning to a new technology. This will be done by showing a gradual migration of a Jquery App into a full fledge VueJS app.",,,,,I think I'm a perfect fit for this workshop mostly due to the fact that I literally migrated a full legacy JQuery app to VueJS and can understand the pain points as I did feel some of them myself as well as get feedback from the developers in my team on what they considered their biggest issues. ,I am in no way affiliated to Jquery or vueJS and this talk isn’t meant to insinuate that any tech stack is better than another but rather to share about migrating from one stack to another i.e. Jquery to Vue JS in order to help the community at large learn from our experience in doing that at BCaster,Flight and Hotel,,A,Workshop,"During this workshop, we'll start by creating a simple Jquery Two Page app which fetches static data. The App will be built on nodejs/express from bottom up without any build tools whatsoever. The goal with building it this way is to mimic as much as possible the way Legacy code bases look as well as to ensure it's not a ready made repo where participants feel lost in grasping it's internal workings immediately.

The second phase will involve introducing Vue Js to the already existing product without having to rewrite it from scratch as well as introducing build tools such as babel and webpack to help improve code readability, use ES6 features and reduce bundle size. This phase will implement VueJs incrementally going from page to page in order to ensure the participants understand the process","Recently after becoming Frontend Engineering Team lead at BCaster I introduced an incremental migration shift from JQuery to VueJs. It sure did seem to be straightforward at first especially with proper test coverage, however 20% -25% into this migration we encountered a certain issues which meant re-evaluation of several architectural decisions that had been made in this regard. The goal of this workshop is to give an in-depth analysis of how it worked hence I'll be presenting background info from our real life experience highlighting the following

1. Highlight what we tried
2. Highlight where we failed and the lessons learned
3. Changes made related to the architecture
4. How we finally achieved 100% full migration of one of our most important projects into Vue JS","Participants will need to have a computer. In order not to bother anyone with configuration I plan to use codesandbox for this tutorial hence it'll be good that they also have a codesandbox account (this can be created at the workshop in a matter of seconds anyways).

For those wanting to use their own computers for the workshop then it's important that they have nodejs installed","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Jayesh Katta Ramalingaiah,Jayesh Katta Ramalingaiah,kr.jayesh94@gmail.com,"Jayesh Katta Ramalingaiah is a Full Stack Software developer. He is currently engaged as a Developer in BFS Domain at TCS in India.


He is an Official Mozilla Representative, Reps Mentor, and a Tech-Speaker and has associated with Mozilla Communities and initiatives for more than 4+ years conducting 120+ events in his regions. 

He speaks regularly about react/ Web/ rust/ IOT  in various local meetup groups and conferences.",https://www.linkedin.com/in/jayeshkattar/,jayeshkattar,Male,White,,"Mumbai,India","Full Stack Developer and a Tech Speaker with expertize speaking and coding skills. Have experience speaking in more than 130+ meetups, workshops and conferences.",Employed as a full-time developer for over 3 years,,CS degree,,Front-end,,W007: Web VR - Beyond Imagination,,,"The attendees would learn the easiest way of creating a VR application with basic knowledge of HTML, CSS and JS.",,,,,I have previous experience and many success stories in delivering a best talk and workshop about this topic.,,Providing a budget for either one(travel or hotel) of them would help.,,A,Workshop,The would be creating a VR scene and would be deploying it and would even experience it in a web browser and VR headsets.,"WebVR is an experimental JavaScript API that provides support for virtual reality devices, such as the HTC Vive, Oculus Rift, Google Cardboard or OSVR in a web browser. WebVR is an open specification that makes it possible to experience VR in your browser. The goal is to make it easier for everyone to get into VR experiences, no matter what device you have. • About VR, WebVR & A-Frame • A-Frame Concepts • Demo of basic A-Frame scenes & apps. More examples at A Week of A-Frame • Show off A-Painter",Projector a good internet connection.,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Isabela Moreira,Isabela Moreira,isabela.cmor@gmail.com,"Isabela is a software engineer at Microsoft and pursuing her Masters in HCI. She's passionate about user experience and accessibility, and believes that the only way to build a successful product is to listen to your users from the very beginning.",https://www.linkedin.com/in/isabela-moreira/,@isabelacmor,female,Hispanic or Latino,,"Seattle, WA","I always knew that I wanted to work with computers. Coming from a homeschool background where all career paths were encouraged and celebrated, I never imagined the lack of diversity and blatant sexism the industry faced until I started college. It wasn't until I started working in the industry full time that I started questioning my own experiences and, talking with other female engineers, I started to see that I wasn't alone in my experiences. These experiences, coupled with my own chronic illnesses, made me see the tech industry from a whole new perspective - one that should be inclusive of everyone, regardless of gender, race, or disability. That really sparked my passion for work in accessibility and inclusion in the industry.",Employed as a full-time developer for over 3 years,,CS degree,,Technical Interviews,,"W008: Interviewers are friends, not foes",,,"The goal of this workshop is for attendees to walk away with all the tools they need to feel successful going into technical interviews. They'll have answers for all their soft-skills questions, guidelines for how to approach technical questions, and a killer resume to get their foot in the door.",,,,,"I've been recruiting for Microsoft since I was hired as a software engineer 3 years ago. I've gone through many many interviews where I didn't feel prepared, felt stressed, and had imposter syndrome. Technical interviews are hard and stressful and so many times I've talked to people about why they don't apply for a position and their response is that they don't feel prepared for the coding interviews. With my background in recruiting, I'll be able to give an inside look into the process, share some of my personal experiences (both negative and positive), and help the audience feel confident to apply and nail tech interviews.",,I would need flight and hotel accommodations.,,A,Workshop,"Attendees will create materials for prepping for their technical interviews, including a spreadsheet of soft-skills questions and their answers, a step-by-step guide on how to approach coding questions, and various completed practice coding questions, ranging from easy to hard based on their comfort level.",I'll provide some of my own experiences with the technical interview journey and highlight some pitfalls and strategies along the way before jumping into the hands-on portion of the workshop.,"whiteboards, paper, pencils / pens / markers","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Isabela Moreira,Isabela Moreira,isabela.cmor@gmail.com,"Isabela is a software engineer at Microsoft and pursuing her Masters in HCI. She's passionate about user experience and accessibility, and believes that the only way to build a successful product is to listen to your users from the very beginning.",https://www.linkedin.com/in/isabela-moreira/,@isabelacmor,female,Hispanic or Latino,,"Seattle, WA","I always knew that I wanted to work with computers. Coming from a homeschool background where all career paths were encouraged and celebrated, I never imagined the lack of diversity and blatant sexism the industry faced until I started college. It wasn't until I started working in the industry full time that I started questioning my own experiences and, talking with other female engineers, I started to see that I wasn't alone in my experiences. These experiences, coupled with my own chronic illnesses, made me see the tech industry from a whole new perspective - one that should be inclusive of everyone, regardless of gender, race, or disability.",Employed as a full-time developer for over 3 years,,CS degree,,"Creative Coding (cool, artsy things you can make with code!)",,W009: From SVG to React component: Building reusable illustrations with code,,,The goal of this workshop is for attendees to see that it's possible to mesh their design interests with their passion for coding and how coding can help them take their designs to the next level.,,,,,"As a frontend engineer, I'm super passionate about design but I also love to code. I always love combining the two and seeing how we can make code more creative. ",,I would likely need flight and hotel accommodations.,,A,Workshop,"Attendees will make several SVG-based React component illustrations.

1. We'll start by creating a few different base SVG illustrations in Figma/Sketch. These will likely be some cute little creatures.
2. Then we'll convert those SVGs into React components.
3. Then we'll start abstracting out various pieces of those SVGs into different components (such as the creature's head, body, eyes, etc).
4. Then we will make the React components accept various props to define specific qualities about those SVG illustrations (such as color, size, expression, etc)

In the end, we'll have a set of fully customizable SVG-based illustrations built as React components that can be reused in any project, published on npm, etc.","I'll present background info on the importance and usefulness of SVGs, the code behind SVGs themselves, some React basics, and how to use some of the design tools like Figma/Sketch before jumping into the workshop. This will allow attendees to understand the usefulness behind the workshop and how reusable designs can help improve their products and workflows.",A laptop with Figma/Sketch/some SVG creator tool installed and React. Some React knowledge is preferred but not necessary.,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Bhavani Ravi,Bhavani Ravi,bhava0895@gmail.com,"Software Engineer - building KiSSFLOW a digital workspace
Organizer - Build2Learn a local community to learn tech by building software
Lead - Womentechmakers Chennai",https://www.linkedin.com/in/bhavanir/,geeky_bhavani,Female,Asian / Pacific Islander,,India,"I come from an uneducated family/background in South India. As a first generation engineer, I had no clue what it was all about. All I knew was I loved programming from high school and I am going to be good at it.

Things weren't easy. I was blindly coding hackerrank problems for 2 years until I stumbled upon application development, which helped my final year project.

On presenting it to a panel, I found my mentor. He was impressed by my work and offered me a job and he turned my life upside down.

I learned chatbot development, writing, organizing meetups, giving talks etc.,

Now I am paying it back by mentoring other people and giving motivational speeches",Employed as a full-time developer for 1-3 years,,"CS degree,Online learning platforms,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,New tech,,W010: Chatbots 101,,,"1. New technologies can be scary but not difficult
2. The idea on what's and why's of chatbot
3. Taste on how easy it is to build one
4. A couple of chatbots that they can show off to others",,,,,When people stumble upon a cool technology for example Chatbots people find it scary. I was too. Until I found how to utilize the resources for good. ,,I would need flights and accomodation conveyance,,A,Workshop,"The workshop escalates from something basic to something useful.
1. Chatbot in 5 lines 
       - echo bot - A bot that repeats you
       - Search bot - A google search bot
2. Draw bot - A bot that draws shapes as you tell them(without NLP)
3. Using Chatbot platforms to build a chatbot - Dialogflow
       - Drawbot using NLP","1. What is chatbot?
2. Why a chatbot?
3. Tools available to build one
4. Demo of few chatbots","Laptops with internet
Python, pycharm setup with necessary packages installed","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Jamie Wright,Jamie Wright,jamie@brilliantfantastic.com,"Jamie Wright is a maker of internet things with a love/hate relationship for Redbull™, standing desks, and paintball guns. He has a love only relationship with teaching, learning, and building bots. Jamie runs Tatsu, a software bot that helps teams save time by performing standup meetings over Slack.",http://linkedin.com/in/brilliantfantastic,http://twitter.com/jwright,male,White,,"Toledo, OH","I have been a software developer for over 20 years after I found my love for creating software late in high school.

I have a soft spot for expanding the software development field through training, especially with under representative groups. I have taught several live software classes, I am on a board to help improve a high school computer science, and I work with local people to help with software development problems.

Personally, I have a very lovely family with a wonderful wife and three beutiful daughters.","Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,CS degree,,New tech,,W011: Gotcha Where I Want 'Cha : Building a React Native App with a GraphQL API,,,The goal is to provide attendees with the resources needed to be able to get started on building mobile iOS apps with a custom API backend. I want to ensure that attendees have the confidence that it is possible to build a full stack application. The super powers are real.,,,,,I have built several production iOS applications in the past using React Native and custom APIs for customers. ,IT WILL BE FUN! The application will be fun and the learning will be fast paced but I will have several spots to allow for attendees to catch up easily if they get behind. I want attendees to learn how possible it is to create iOS applications.,I am an independent developer and would need travel costs for the flight and hotel covered.,,A,Workshop,"The attendees will build an iOS application called Gotcha. It allows you to meet attendees in real life at a conference. It will involve a GraphQL backend, using the camera, push notifications, and JavaScript!","I will first provide a reason why this application exists and how it can help getting build real life friendships at a digital conference. I will then provide them with a demonstration of the application.

After that, we will review what larger concepts we will review which are:

1. Displaying views and navigating between views
2. Consuming a GraphQL
2. Using the camera
3. Receiving push notifications",The attendees will need to have Macs in order to develop using the simulators. It would also help if they had iPhones to implement push notifications.,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Christine Glass,Christine Glass,christinevglass@gmail.com,Social worker turned developer via a coding bootcamp. 1.5 years professional experience coding primarily in NodeJS,https://www.linkedin.com/in/christineglass/,,female,2 or more of the above,,Chicago,"I live at many intersections. I'm the mixed race daughter of an immigrant, first generation college graduate, wife to an amazing woman. I studied sociology and gender/sexuality studies, so I'm deeply familiar with and committed to helping systemic and institutional inequalities. Also, I'm a programmer with a nontraditional background - I did not study computer science, but instead studied at a full-time bootcamp.",Employed as a full-time developer for 1-3 years,,"In-person bootcamp,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,JavaScript,,W012: Getting to the Promise Land,,,"This will be a technical workshop around the topic of asynchronicity in Javascript, with a focus on promises. Attendees will walk away with an understanding of the event loop, callbacks, and promises. They'll understand how to use promises, as well as how to implement their own promises. My own personal goal is for attendees to take their Javascript knowledge deeper and gain confidence in their technical abilities. ",,,,,"I have experience teaching workshops - I've taught all kinds of topics from digital literacy to career development. I'm a career changer, so I get being completely new to development and how overwhelming that can be. I also have over two years experience developing in Javascript. Also, I truly want all newbie developers to understand the technical aspects of code as much as possible. I get impostor syndrome all the time, but understanding and knowing the tech gives me confidence. I'm hoping attendees will get that as well. ",,"If accepted, I plan on asking my employer to cover the cost of transportation and room and board. If they are unable or unwilling, plan tickets and/or hotel would be appreciated.",,A,Workshop,"Attendees will pair and work through multiple Github repos with practice exercises and tests. Ideally, more experience Javascript developers will be paired with those with less experience. The exercises will involve using Node (specifically the fs and http modules) to make async calls. It will start with getting comfortable with how Javascript handles async requests and callbacks. The second problem set will involve getting comfortable with promises. Attendees will promisfy fs/http methods and learn common promise methods (.then, Promise.all, etc). The last workshop will have attendees implementing their own promise library to fully understand how they work under the hood. ","Ideally, I'd like to structure the workshop by covering content, having the group break up and apply the mini lesson, regroup and answer questions, then go on to the next topic. My three main topics will be async/callbacks, into to promises, and promise under the hood.
I plan to cover how asynchronicity in Javascript, starting with the the event loop. Using setTimeout(), I'll go over various examples of how the code will execute.
When covering promises, I'll explain that promises are like getting a ticket number when ordering a sandwich - it's the promise of something that may or may not be fulfilled. I will go over how to use a promise and common methods.
Lastly, I'll go over how promises operate via the Promises/A+ spec - they are objects with possible states (pending, fulfilled, rejected) and a then method.","Attendees will need a text editor, access to github, and have Node/npm installed on their machines.","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Aayush Arora,Aayush Arora,aayush113002@gmail.com,"Aayush is a Google Developer Expert, thriving to innovate frontend with accessible Interfaces. An innovation strategist and Massachusetts Institute of Technology Bootcamper graduate, he brings 4+ years of experience in Web Development, Accessibility with his expertise in Angular Framework. 
Since, 2+ years, he has mentored around 1 lakh students across the globe for Udacity under Google Scholarship programmes and 20+ startups under Pluralsight. Aayush has always been a prominent voice for FOSSASIA during GSoC and has been contributing continuously to the growth of the communities such as FOSSASIA, NASA and CloudCV.
He has a passion for solving Accessibility issues and is working as an Instructor & Product Engineer at Coding Blocks, New Delhi.",https://www.linkedin.com/in/angularboy/,https://twitter.com/angularboy,Male,Asian / Pacific Islander,,"New Delhi, India","Aayush is teaching Web Development to university students from the past two years. He has helped the students in Udacity and Pluralsight in Frontend Development skills.
Along with his development skills, Aayush has learned the Sanskrit language from a blind teacher in the past. He understands the pain points of technology when it is provided in front of disabled people. His understanding of accessibility problems along with the solutions come from his unique background. 
After becoming a Google Developer Expert, he is more inclined towards Accessibility solutions that can make a difference in millions of lives. ","Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,"CS degree,Online learning platforms,In-person bootcamp,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Accessibility,,W013: Making Websites ADA Compliant,,,"Coding an ADA-compliant website is achievable with minimal expense and minimal impact on usability with some basic guidelines and strategies. In this workshop, Aayush will be applying the WCAG principles on a simple website to achieve ADA Compliance. ",,,,,"After working in organizations such as NASA, CloudCV, FOSSASIA on large-scale projects, I realized the importance of ADA-compliant websites. I have applied that learning at FOSSASIA to make the Open Event Web App Project ADA-compliant. I have an experience in this field and have been working on this from past two years. I will like to share the challenges along with my experience that will help others to make their website accessible to all. I have given a similar talk at Hamburg, Germany Link: https://www.youtube.com/watch?v=tL6ms2Wudic&list=LLFuVLC5dms1ej3b4ZAHfh4A&index=15&t=746s",,"I will be expecting the travel and accommodation. Let me know, if there is a minimum amount you can arrange though.",,A,Workshop,"The complete guide to WCAG with the Perceivable, Operable, Understandable and Robust principles with a codelab will help developers to change a non-compliant website to a compliant website.
- Alt tag issues
- Audio transcribe and Video issues
- Achieving AA compliance for Color Contrast
- How to make screen readers effective?
          - Avoiding common mistakes of the Aria
          - Adding Labels
          - Skip Navigation Functionality
- Allowing Time Independent Interactions
- Providing Input Assistance","Accessibility addresses all the issues including auditory, cognitive, neurological, physical, speech and visual. When it comes to mobile, more issues like small screen sizes, hijacked scrolling, cognitive load, ambiguous icons, conflicting gestures, different input modes, usability etc need to be addressed.

While designing for web, identifying the accessibility problems in the early stages of development using the right tools and techniques make it easier to address them. However, these tools are necessary but not sufficient and a knowledgeable human evaluation is required to determine if the site is accessible.

In this workshop, Aayush will highlight the entry barriers to accessibility, helping you with tools and human evaluation required to analyze accessibility issues for your websites and the techniques to resolve those issues.",Attendees will need a laptop along and Internet connection.,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Jyotsna Gupta,Jyotsna Gupta,jyotsna17gupta@gmail.com,"Jyotsna Gupta is an Open Source Enthusiast, working as a Software Developer in CoffeeBeans Consulting LLP, Bangalore, India. She is also involved with Mozilla Community since 2015 and volunteers to Mozilla in her free time as an Add-on Content Reviewer & Mozilla Representative (previously, a two-time Add-ons Featured Advisory Board Member & Judge of the worldwide contest 'Firefox Quantum Extension Challenge'). She is a coder by profession and a Shuttler by passion. She is also a Firefox Add-ons Mentor and has published a privacy-themed add-on PrivateX. As an active contributor, her name is also listed in about: credits and the credits page of every browser ever shipped by Mozilla.",https://www.linkedin.com/in/jyotsna17gupta/,imJenal,Female,Asian / Pacific Islander,,"Bangalore, India","I'm a software developer, contributing to Open Source in my free time, primarily to Mozilla. As a speaker, I will make the participants aware of the fact that building an add-on isn't rocket science. Also, I can share my experience as a Mozillian, contributing to the Open Source world as there are only 3% of women who are contributing to Open Source. I could be a live example to them. My bio speaks everything about me.",Employed as a full-time developer for 1-3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,JavaScript,,W014: Building cross-platform browser add-ons using Web Extension API,,,"Browser Add-ons can extend and modify the functionality of a browser. I’ll be walking through some of the existing add-ons. Participants will learn how easily they can develop a firefox/Chrome add-on or port Firefox add-on to other browsers(Chrome,etc.) by having basic knowledge of JavaScript

Instead of using an add-on, by building their own add-on, the users can customize their browsing experience.",,,,,"I'm involved with Mozilla Community since 2015 and volunteers to Mozilla in my free time as an Add-on Content Reviewer & Mozilla Representative (previously, a two-time Add-ons Featured Advisory Board Member & Judge of the worldwide contest 'Firefox Quantum Extension Challenge').I'm also a Firefox Add-ons Mentor and has published a privacy-themed add-on PrivateX. As an active contributor, her name is also listed in about: credits and the credits page of every browser ever shipped by Mozilla",,"Travel- flight
accomodation ",,A,Workshop,"
Session Outline : 
- Browser Add-ons 
- Show Existing add-ons
 - Introduction of Web Extensions 
 - Architecture of Web Extension
 - WebExtension APIs - Build a basic Web extension.
 - How to Choose the right extension for your favorite browser
 - Porting an extension from/to Chrome - Q&A

By the end of the session, each participant would have the idea to be able to customize their favorite browser by building their own add-on (for instance, from building an add-on which reminds the user to drink water after every hour to building an add-on that chops off the UTM token, makes your browsing more private)
","Browser Add-ons can extend and modify the functionality of a browser. I’ll be walking through some of the existing add-ons. Participants will learn how easily they can develop a firefox/Chrome add-on or port Firefox add-on to other browsers(Chrome,etc.) by having basic knowledge of JavaScript","Firefox Browser- latest, Internet, Any Text Editor ,and Internet ","""Mon, July 22""",I am willing to give my workshop two times in a row.,,,
Alvaro Montoro,Alvaro Montoro,alvaromontoro@gmail.com,"Alvaro Montoro studied Computer Science at the University of Jaen (Spain), and currently lives and where he found his passion for Web development and Web technologies. He made them his way of life: working on HTML, exploring JavaScript and CSS, and contributing in online communities. In his free time, Alvaro enjoys music and literature, and volunteers in different STEM projects in local schools and libraries.",https://www.linkedin.com/in/alvaromontoro/,alvaro_montoro,male,Other,White + Hispanic or Latino (born in Spain),"Austin, TX","I studied in Spain, and as an exchange student at the University of Texas at Austin. Since then I have been working in different companies on both side of the Atlantic Ocean, growing from intern to senior developer, and working in different technologies both in back-end and front-end. Bilingual English-Spanish, I contribute in local middle and high school programs to encourage IT and STEM in minority communities.",Employed as a full-time developer for over 3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",In-person bootcamp,Online learning platforms",,Accessibility,,W015: Easy tips to improve your website accessibility,,,"The goal of this workshop is to create awareness of the importance of web accessibility, how it should be taken into account in any project as a key factor, and a description of 20-24 tips to improve web accessibility that are easy to implement.",,,,,"I have worked as a developer doing back-end and front-end, although I prefer front-end, and that is how I’m directing my career. What I like about web development is its potential and the world of possibilities that opens for everybody. And for me, everybody means everybody, including people that cannot see or hear or interact with a computer, or people with limited content access because of different backgrounds.   That is something that I have been passionate about, and that I have been lucky to work on at different companies: at MicroAssist, we created accessible websites for the state of Texas; at General Motors, I worked on the Cadillac Canada accessibility project, and lead a small team that won third price at the Knowbility OpenAIR accessibility competition; at athenahealth, I presented a dev seminar about web accessibility…","At athenahealth I completed a similar presentation (limited to 30-60 minutes instead of 2.5 hours), I could provide the slides as an example if needed upon request.",Initially my travel needs would include flight and hotel only. I have yet to discuss with my company the possibility of funding part of the trip.,,A,Workshop,"Attendees will use an example website (or their own website) to review different changes/tips that could be implemented to improve its accessibility. Each tip would include a description of the change needed, why it is important, and some time to implement it on the page.

Some examples of changes would be adding alt to images, checking color contrast, using proper html tags, having a proper heading structure, having meaningful links, etc. These changes are not really difficult to implement, but the idea is to prove how web accessibility is reachable, and how even little changes could impact positively on their work and how other people use their websites.","The introduction would not be technical at all, it would be a presentation of data showing numbers to support a case for web accessibility (1.1 billion people with disabilities, over 6 billion dollars market, etc.), how it is not something that affects people with disabilities but everybody (elderly with sight problems, population from growing countries or rural areas, etc.), and how many times accessibility and usability go so close together that they could be interchangeable terms.

I would make it interactive, bringing people to “act” on an example, in which one of them opens a store but prevents every 15th customer from entering it. Drawing parallelisms with disabilities, and showing how web accessibility is a good choice for anyone and for businesses",Attendees may need to bring their laptops.,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Alvaro Montoro,Alvaro Montoro,alvaromontoro@gmail.com,"Alvaro Montoro studied Computer Science at the University of Jaen (Spain), and currently lives and where he found his passion for Web development and Web technologies. He made them his way of life: working on HTML, exploring JavaScript and CSS, and contributing in online communities. In his free time, Alvaro enjoys music and literature, and volunteers in different STEM projects in local schools and libraries.",https://www.linkedin.com/in/alvaromontoro/,alvaro_montoro,male,Other,White + Hispanic or Latino (born in Spain),"Austin, TX","I studied in Spain, and as an exchange student at the University of Texas at Austin. Since then I have been working in different companies on both side of the Atlantic Ocean, growing from intern to senior developer, and working in different technologies both in back-end and front-end. Bilingual English-Spanish, I contribute in local middle and high school programs to encourage IT and STEM in minority communities.",Employed as a full-time developer for over 3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",In-person bootcamp,Online learning platforms",,Front-end,,W016: Web development illnesses and how to prevent them,,,"The goal of this workshop is to present common bad development practices and anti-patterns that impact negatively on the normal execution of a website. Some of them related to design, some of them related to security.

The idea is to present these anti-patterns associated to a human illness, that the attendees might have suffered or know someone that suffered it. That way it would make it more relatable, it would make it easier to understand the problem and why it is important to fix it.

Attendees will use an example website (or their own website) to review these bad patterns, learn to identify the problems and prevent them. Each of them would include a description of the problem, how it impacts negatively on the web, a way to fix it, and some time to implement changes on their webpage.

When the workshop is over, they will be able to identify and avoid this bad practices, and build more robust and secure websites.",,,,,"I have been a developer for almost 15 years, and during that time I have done code reviews at work, checked code for friends and colleagues, and reviewed thousands of questions at Stack Overflow (specially at the Stack Overflow en español site in which I am a moderator). In all of those, I was able to see a certain set of patterns that many of them (specially new developers, but also myself sometimes) followed and that were going to cause trouble now or down the road, compiling some of them.","At athenahealth I completed a similar presentation (limited to 30-60 minutes instead of 2.5 hours), I could provide the slides as an example if needed upon request.",Initially my travel needs would include flight and hotel only. I have yet to discuss with my company the possibility of funding part of the trip.,,C,Workshop,"The goal of this workshop is to present common bad development practices and anti-patterns that impact negatively on the normal execution of a website. Some of them related to design, some of them related to security.

The idea is to present these anti-patterns associated to a human illness, that the attendees might have suffered or know someone that suffered it. That way it would make it more relatable, it would make it easier to understand the problem and why it is important to fix it.

Attendees will use an example website (or their own website) to review these bad patterns, learn to identify the problems and prevent them. Each of them would include a description of the problem, how it impacts negatively on the web, a way to fix it, and some time to implement changes on their webpage.

When the workshop is over, they will be able to identify and avoid this bad practices, and build more robust and secure websites.","During the introduction I would draw the similarity between a human illness and a software illness: they make us feel bad, slow us down, and in some cases they can have fatal consequences.

Present the websites as a “living entity” that can suffer many grows, evolves and mature through time, and that can suffer from illnesses as any other living being.

Give a general explanation how a website can be sick: the HTML code not be proper, it could have inefficient JavaScript, or suffer from security vulnerabilities… which could lead to inaccessible websites, unusable and bad user experiences, or data breaches.",Users may need their laptops.,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Juan Pablo Gomez,Juan Pablo Gomez,jp@jupago.com,Generalist Web designer living in New York City. I've gone full circle from HTML & CSS Table-based websites > Flash (AS) > Joomla (PHP) > WordPress > Email newsletters (back to tables!),https://www.linkedin.com/in/jupago,@jupago,Male,Hispanic or Latino,,The Heights!,"I've done some WordCamps on CSS Grid and layouts since 2017. Currently running a group session/workshop at my Mentor Job at Bloc, Inc",Other,"Freelancer. As a designer, my passion is layouts so Flex/Grid opened up a lot of new opportunities.","Online learning platforms,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,"Creative Coding (cool, artsy things you can make with code!)",,W017: CSS Layouts 101,,,"The web moves so fast that it is easy to feel like you are behind but we tend to forget that this medium is only 30 years old and we are all figuring it out. Now! CSS Grid is so new you don't have to worry about what we were doing 3, 5, 10 years ago. you can dive right in!",,,,,"I've freeloaded from Chis Coyier, Jen Simmons, Rachel Andrew, you! for as long as I can remember. I'm trying to give some of that back now. Started doing some volunteering for schools in NY, started mentoring online and I am loving it! it is making me *really* learn things and inspire a new wave of web designers",,I live by the WGH bridge. Would need the A train to be working that day. Maybe the 1 as a backup.,,C,Workshop,They will learn how modern design tools (figma) work and how easy it is to transfer those layouts to the web through a Pen. They will make a fun layout with columns and rows and understand the use of white space. I've been doing some 1hr session and putting them in a collection here: https://codepen.io/collection/nJJNqP/,"CSS Grid is the first layout tool where you can create a layout before adding content. For anyone who's interested in design, this is revolutionary. We are used to starting an Illustrator, Sketch, Figma etc.. file with some rules and guidelines and move things around that canvas. Today's browsers allow us to do that. Implicit and Explicit layouts are here and they are awesome!!!!","Figma (free)
Codepen Account (free)","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Amberley Romo,Amberley Romo,amberleyjohanna@gmail.com,"I'm a front-end engineer currently working at GatsbyJS. I had a long and windy road to professional software development over 10+ years, from working in branding and marketing at a nonprofit, to site maintenance and social strategy at said nonprofit, to technical project manager at a digital agency, to fully pivoting to full-time writing software.",https://www.linkedin.com/in/amberleyromo/,amber1ey,female,Hispanic or Latino,,"Austin, TX","I noted earlier in the bio section a bit about my career trajectory toward full-time software. As a college student, my goal was to take a for-profit skill set to a non-profit. I worked in the non-profit world for years, from brand implementation and enforcement, to marketing, to graphic design support, to building and maintaining websites, to social strategy, etc. After a course of years, I decided I wanted to be in an environment where I could learn from experienced web professionals -- I knew I had a lot to learn, but I had no way to know where to start. I started applying for front-end developer jobs. I connected with an agency that saw potential for project management, since I had such a diverse background. After some time at that, I decided the only way to make a full shift was to quit, move, and do a code bootcamp. I had slowly, over years, been knocking on the door over and over again trying to do full-time web development, and finally I decided to just open the door myself.

At the time it felt like I was the only one doing it, there was no road map (should I have gotten a CS degree?), but now I feel so much more connected to people, particularly other women, who were similarly finding their way, and similarly felt alone in it.",Employed as a full-time developer for over 3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",In-person bootcamp,Online learning platforms",,Front-end,"not quite certain, this could fall into new tech, JavaScript or front-end",W018: Getting started with Gatsby: Build a portfolio site,,,"My goal for attendees of this workshop would be to take an existing completely static portfolio site (plain HTML/CSS), and port it over to a Gatsby site. We'll deploy the sites to Netlify, and leave time to personalize and customize, so that at the end, attendees have a deployed starting point of a personalized portfolio site, with structure and style in place to riff off of.",,,,,"It was so, so hard for me to make the leap between being a ""hobbyist web dev"" and doing it professionally. I know that feeling so well, because it was my experience. I felt alone in trying to learn best practices, and often didn't even know where to start. I would really love to a part of lowering that barrier for folks. I had to fight for my career progression to become increasingly technical. One of the things I love most about working for Gatsby is the heart behind trying to make building things better, easier.","I have never done a workshop before, but have always wanted to! ",My company may be willing to cover travel expenses — would that count as a sponsorship?,,C,Workshop,"Attendees will translate a fully static portfolio site to a Gatsby site.
1. Download repo of starting static site files.
2. Generate a Gatsby starter site. (learn the CLI, etc).
3. Port the existing static site markup and styles into the Gatsby site incrementally.
3a. Over the course of this, people will familiarize with the Gatsby hot reloading development process, etc.
4. Early on, we'll go ahead and deploy the Gatsby sites using Netlify. As we hit different milestones of porting over the site, we'll continually deploy, hopefully creating a sense of comfort around that process.
5. After converting the homepage and one secondary page, attendees will have time to start riffing on what's there, changing the style, adding their own name and details, etc. 

So, if attendees don't yet have their own functioning portfolio site, they will come away with a deployed head-start on customizing their own Gatsby-based portfolio site. The hope is that, aside from familiarizing with Gatsby, this will lower the barrier folks feel to getting something deployed, maybe for the first time.","A short background on the way delivering websites has changed (static delivery, server-side rendering, client-side rendering) to explain the context of the value around a project like Gatsby.

Show a demo / explain some of the performance benefits you get out of the box.","Projector (to share my screen).

Attendees will need to have laptops, chargers, hopefully Git already installed, and a GitHub account?

I would envision having a live landing page with a step by step of how the workshop will progress, and have corresponding print-outs, for people who would rather have it on paper.","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
John Riviello,John Riviello,john_riviello@comcast.com,"John Riviello created his first hypertext document on the Internet in 1996 and has been obsessed with building for the web ever since. He spends his days as Distinguished Engineer and Lead Frontend Developer at Comcast, where he works on the Xfinity customer websites and web applications. He is also the author of the Lynda.com course ""CSS to Sass: Converting an Existing Site.""",https://www.linkedin.com/in/johnriviello/,JohnRiv,male,White,,"Philadephia, PA","I first started messing around with HTML in 1996 and received my first paycheck as a “Webmaster” in 1997 when I was still in High School, and I have been earning a living making websites ever since. My college undergraduate degree was in Graphic Design, and I just started my master’s degree in computer science in January 2019, so I know what it is like to learn how to code with no formal computer science background. The masters program I am in has students that never coded before as well so I am witnessing what others are going through as they learn a new language so I can relate to the attendees even though my initial experience was two decades ago.","Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,"Online learning platforms,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",CS degree",,Front-end,,W019: Intro to Web Components,,,"Attendees will leave with a solid understanding of how Web Components actually work. As Web Components are being supported and adopted by more modern JavaScript frameworks, they are becoming a much more relevant tool for web developers to use. Understandably so, many new developers will learn a JavaScript framework because it solves a lot of problems for them, but the do not understand what is going on under the hood. By first introducing Web Components to attendees with plain JavaScript and then moving on to using LitElement to create Web Components, attendees will have the confidence to talk about Web Components at both the library-level (LitElement) and the actual JavaScript implementation level. ",,,,,"We presented a similar workshop at Codeland last year that went well, and we’ve presented variations of this workshop 8 times so far, with 2 additional presentations currently planned. Each time, we take into account what we’ve learned from prior sessions and how the technology has changed to improve our next session, so this year’s will be even better than last year’s.","If selected, I would like to co-facilitate the workshop with Chris Lorenzo again this year. Comcast will cover our expenses so there would be no additional expense for you for the 2nd speaker (other than the conference ticket cost)",Comcast will cover our expenses,,C,Workshop,"Attendees will work on 2 projects. The first will be a toast (a lightweight popup intended to display a short message) vanilla web component that they will build from scratch to familiarize themselves with the Web Components APIs. This tutorial is available at https://github.com/ComcastSamples/wc-toast (each step is a branch of that GitHub repo).


After that, we will quickly get a basic website up and running with the PWA Starter Kit. This will introduce attendees to how to work with LitElement, which makes it easier to work with Web Components. We will customize the website by following the steps outlined here: https://comcastsamples.github.io/pwa-starter-kit/configuring-and-personalizing/

Based on our experience of presenting this workshop previously, we don’t expect to cover every topic on our ""Configuring and personalizing” page of the PWA starter kit, but we will be prepared to cover it all if the attendees surprise us :-)","The background info we’ll provide will be as follows:
- What are web components at a high level
- Short video clips of what each of the 4 web component specs provide
- Browser support
And then we’ll jump right into coding!
This will be very similar to the intro we provided last year. Slides are available here: https://docs.google.com/presentation/d/15a909sMRUVi_kdfIbRpq9MdbUH311A2oD8s-tst6vTE
We would quickly cover the first ~30 slides (before it says “Polymer 3.0” currently, as we’re not going to use Polymer, we’re going to use LitElement from the Polymer team)","Laptop for attendees, and a projector for us to present","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Meg Duffy,Meg Duffy,hello@meghan-duffy.com,"Meg Duffy is a career coach who helps people launch and grow careers in tech. Previously, she worked as the Program Manager of the Grace Hopper Program, a coding bootcamp for women based in NYC, and the Chief of Staff at Hopscotch, an app that teaches kids age 8-12 how to code. When she's not coaching, Meg can be found reading, writing, running, or snacking in Brooklyn.",https://www.linkedin.com/in/meghanrduffy/,https://twitter.com/futureproofmeg,female,White,,"Brooklyn, NY","I began my career in non-profit arts and built a content-based side project to make the transition into startup tech. At Hopscotch, I served as the Chief of Staff and also the HR point person who designed and implemented our hiring processes. Before I became an independent coach, I worked as the Program Manager of the Grace Hopper Program, a coding bootcamp for women based in NYC. ","Casually code, but coding is not the core part of my profession",,Online learning platforms,,Career/Personal Branding,,W020: There is no five-year plan: crafting a job search and career map for the modern dev,,,The goal of this workshop is to provide a structured job search process for new developers. You'll walk away feeling better prepared to job search. ,,,,,"As Program Manager, I guided hundreds of women through their transitions from all types of careers into developer roles. I keenly understand the challenges new developers face on the job hunt and how they can move through them. ",,I'm all good! I can take the train and sleep at home. ,,C,Workshop,"You’ll come away with a structured job search process, a script for initiating coffee chats, a list of job boards and meetup tools. You’ll also get feedback on your résumé, LinkedIn, behavioral interview questions, and pitch.  ","Before you build an app, you break down components into key features. What if you applied the same approach to your job search? 

In this workshop, I’ll share how to launch and grow your developer career. For beginners and current job seekers, I’ll outline steps to refine what’s important to you in a role, uncover skills gaps, update your materials to reflect your best work, and connect with people in the industry so you can tell your story. 

After we go through the process, we’ll break down into pairs and give each other feedback on each other’s résumés and LinkedIns. We’ll also craft pitches to help tell your story and practice behavioral interview questions to get you ready to interview. ",I'll need access to a projector and it would be great if I could display my notes onscreen. I'd also like to have pencils in case students bring their resumes in paper form. Attendees will need laptops for the LinkedIn review.,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Stephanie Nemeth and Malwine Gier,Stephanie Nemeth and Malwine Gier,"malwine@mailbox.org, stephanie.nemeth@gmail.com","Malwine is an aspiring web developer who loves interpreting the world visually. She is excited about progressive web apps and community projects.

Stephanie is a developer living in Berlin. She enjoys experimenting with hardware and LEDs to make beautiful, useless things.",Stephanie: https://www.linkedin.com/in/stephanienemeth ,"@malweene, @stephaniecodes ",female,White,,"Berlin, Germany","Malwine wanted to study illustration but decided to study computer science for the sake of financial security. While the hostile environment in the university almost made her drop out, she was lucky enough to find the welcoming Ruby and JS community. Malwine has learned everything she knows from the communities. They supported her during many years, so she tries to give back whenever she can.

Stephanie decided to change careers to web development in her thirties. She is a self-taught Ruby on Rails dev turned frontend dev that focuses on making the web accessible while also forever improving her Javascript skills. She loves the creativity that coding has unlocked within herself - it has inspired her to develop artistic skills through sketchnoting and building wearable fashion.",Other,"Malwine: Currently looking for my first full-time developer role, Stephanie: Employed as a full-time developer for over 3 years",Other,"Malwine: community initiatives and personal mentoring, student dev jobs, collection of resources, CS degree, Stephanie:  online resources, community involvement ",Other,Learning methods and knowledge sharing,W021: Let's sketchnote: Capturing complex ideas through drawing,,,"'- Explore note-taking and drawing for comprehension 
- Learn a new method to approach complex topics around coding
- Feel empowered to use creativity in rather formalized contexts 
- Overcome the fear of drawing (Going from ""Oh, but I cannot draw!"" to ""I can do it!"" or reestablish drawing skills
- Discover how sketching during tech talks, lectures or meetings can help to develop active listening skills",,,,,"Stephanie and Malwine are super passionate about sketchnoting and excited to share this skill with others. They have successfully sketchnoted at a bunch of tech conferences over the past 4 years. During that time, they inspired and empowered each other.  Every time they have shared their sketchnotes through social media, they have gotten an overwhelmingly positive response. What started out as a way just for them to understand talks and technical topics better, ended up helping and inspiring a lot of other people too.  Over the years, they received a lot of requests from others who want to learn how to sketchnote. Stephanie and Malwine would love to bring that workshop to Codeland. Malwine has given several workshops on sketchnoting and creating zines before. Malwine works with paper, pen and water colors while Stephanie works on a tablet.  Malwine has been sketching for years while Stephanie has been sketching for a year.   They found that sketchnoting has allowed them to build a special connection within the tech community and sparked experimentation within their own styles. Presenting this workshop together will offer the perfect combination for attendees to explore different experiences, styles, and approaches to sketchnoting.","We would recommend to have this workshop on the first day of the conference, so that participants have the opportunity to sketchnote during the rest of the conference.",Assistance with flight and accommodation,,C,Workshop,"Attendees will learn how to create visual notes about any technical or non-technical topic. They will walk away with the knowledge of how to create sketchnotes at tech conferences. They will have practiced a number of visual patterns and created their first sketchnotes. 

Proposed workshop outline:
- Introduction of the group and warm-up drawing exercise.
- Introduction to sketchnotes by showing multiple examples of sketchnotes about broadly different types/topics. 
- Discuss how creating sketchnotes can help you understand complex information. 
- Discuss how to extract the important information of an on-going talk 
- Explore active listening, taking pictures etc.
- Practice the basics of illustration with small drawing exercises: 
faces, speaker portrait, shapes, lines, fonts & typography, icons & emojis
- Discuss how to lay out a sketchnote.
- Tips and tricks: 
   - Preparation you can do before a talk: information to look up, seating
   - Materials & tools advice: sketching digitally (ipad pro) or with paper/pen 
   - Sharing your sketches: social media advice/protecting your work. 
- Practice sketchnoting a""real-life"" example: Watch a short (5min) lightning talk and sketchnote it. 
- Share and discuss final sketches.","Sketchnoting is the process of creating a visual map of content.  
It can be a graphic summary of a specific topic, a conference talk or panel, a lecture or a meeting. Everybody can learn to create these visual maps. For both creator and consumer the notes help to understand a topic and remember it more quickly. Sketchnoting inspires and involves people. ","We can supply paper and ball-point pens. Attendees are welcome to bring their own materials (journal, watercolors, markers, pens). Also, if students have (and prefer to use) a tablet with a writing device, they can use this as well. 

It would be great to have a flipchart with flipchart paper and a screen where we can connect a laptop.","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Chelsea Kaufman,Chelsea Kaufman,Chelsea@learnacademy.org,"Professional theatre producer, turned San Diego tech startup CEO. Passionate about learning, promoting personal and professional growth, building communities, and making the tech space a more diverse and inclusive place.",https://www.linkedin.com/in/chelskaufman/,@chelskaufman,female,White,,San Diego,"My speaking experience started in the theatre as a professional actor, but that was many years ago.  I have since spent many hours speaking/teaching our students at LEARN Academy and talks at various tech and non-technical meetups. I’ve spoken at Ignite San Diego and moderated several panels with Geek Girl and Startup San Diego.  Because of my background in the theatre, I prefer my speaking engagements to be more conversational and less presentational leaning on my ability to read an audience and shape my talk/lesson around what the audience needs.  I am the type of speaker who will sit at the edge of the stage, get down on their level and ask them how I can help them grow. ",Other,"I've taken a few beginner courses (including our own weekend course), but my background is in education and business development.  I've now been helping students transition their careers and become developers for over four years.",Other,"I'm the founder and CEO of LEARN Academy, a coding bootcamp in San Diego.",Career/Personal Branding,,W022: Be Your Own Superhero: A Workshop on Managing Your Impostor Syndrome,,,"I created this workshop to do three things:
1.     Help people identify their own Impostor Syndrome 
2.     Offer strategies for developing tools to manage 
3.     Provide a space where everyone has a voice to solve a problem together 

Imposter Syndrome is the evil villain to our superhero success story. It can make us want to hide behind an alter ego role and feel burdened by our uniqueness that doesn’t fit the status quo. Feeling like we don’t belong or don’t have the same experience as the rest of the team can feel debilitating, but in fact it’s those very traits businesses need to thrive. Understanding these feelings and gaining practical guides to help manage them are useful to anyone at any stage of their coding journey.  Whether a tech newbie or an industry veteran, this workshop can help us thrive in our journey and not get held back by feelings of insecurity.  This workshop is designed to give everyone an opportunity to identify what makes each of us special and transform those abilities or experiences into a superpower. Once we have our superpowers it’s time to take off the mask and fight our doubts and fears as ourselves. What makes a compelling superhero story is consistent strength in the face of adversity and making the commitment each day to not let our villain win.",,,,,"Four years ago I quit my job in the theatre industry to become the CEO of a tech-based startup. Not only was I feeling insecure about my background in a non-technical field, but I felt the acute pressure of being female in a male-dominated industry. I was passionate about my emerging business and I knew I wanted to succeed but I found myself constantly questioning my legitimacy.  It was vital to my business that I find my voice but I felt outmatched by everyone in the room. To cope with my growing stress I started talking to people about these fears of coming into tech in a non-traditional manner. It turns out I wasn’t the only one feeling this way! In face, I had classrooms full of students who were struggling with the same feelings.  This was a tremendous comfort. It encouraged me to continue to reach out and be the voice that lets others know they are not the only one feeling insecure about their place in the world. By helping my students find their voice, I found my own. Imposter Syndrome is not something you fix, but a challenge you must rise to meet again and again. Just as I was feeling more confident and settling into my role as CEO, I became a mommy to a wonderful little person. While this was without a doubt one of the best things in my life, I quickly found my Imposter Syndrome rearing its ugly head. Again, I found speaking openly about my feelings of doubt in this new role helped reduce the isolation.  I redefined the techniques I used to find my superpower and gained confidence in my role as a working parent.  I developed this workshop for my programming boot camp students who often struggle with Imposter Syndrome as they transition careers into the tech industry. The diverse background of boot camp students adds immense value to the technology world and is vital to its continued success, but students often feel burdened by their non-tech backgrounds. I offer practical tips and confidence building exercises honed through years of personal and professional experience with Imposter Syndrome to encourage everyone to be their own superhero.",,My company will cover travel costs.  ,,C,Workshop,"Students will walk away with a personal guidebook that will allow them to recognize and manage their own imposter syndrome.  We will go through a series of exercises to help them build their personal guide, which will include the following subjects:

1. How to recognize my own Imposter Syndrome
2. How to identify feelings that are destructive to my growth
3. Identifying specific experiences or skills that are unique to me
4. A personalized checklist on how I can manage my feelings of insecurity
5. Identifying and creating a support network
6. Resources to explore that will help create healthy mental habits
7. Tips on how to talk about Imposter Syndrome when you or others around you are suffering

Exercises that will help us answer these questions include:

1. Recognizing more generic feelings like happy or sad.  How do we identify the physical manifestation of these feelings and what tools do we use to work through them.
2. A series of improv storytelling exercises to demonstrate how we can physically see imposter syndrome affecting our lives.  Use of the improv standard rules of engagement to brainstorm ways to defeat negative feelings.
3. A version of Two Truths and an Impostor Syndrome, which will help us see where our vulnerabilities lie.

Each exercises will conclude with sharing what we've learned and start to fill in the gaps in our personal Imposter Syndrome fighting workbook.  By the end our workbook will be full of techniques to help us battle our own Impostor Syndrome.  My goal is for all students to come away from this workshop with the confidence to share their stories and find the power of their voice.","Since this workshop will cover vulnerable topics and will ask students to talk about themselves and their experiences, we will need to start out by creating a brave space for them to share.  The best way to create this space is for me to start out sharing my story including both my struggles and triumphs.  Once we’ve opened this door we can go over a few basics before jumping into their stories: 

What is Imposter Syndrome
How can we recognize it
How does it hold us back
Can we compare it to feelings we are already comfortable talking about.  ",I will provide workbooks and pens.,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Leigh Steiner,Leigh Steiner,steinerleigh@gmail.com,"  I'm a former theater major turned Goblin King of The Code Base, courtesy of the Grace Hopper bootcamp program, and now work as a full stack engineer at Locus Analytics.  My particular interests within coding are accessibility-led design, UX oriented programming and data visualization. ",https://www.linkedin.com/in/leighsteiner/,@klenofjupiter,I'm a cis woman,White,,I live in Brooklyn,"I'm a career switcher as a coder -- I was a theater major, and then ran my own business as a sex worker for ten years before discovering the fun and excitement of javascript, and jumping in with both feet to a bootcamp.  Being an out, queer woman in tech without a CS degree or a white collar background has been a very interesting experience (although admittedly, a mostly positive one!).   It's been important to me to pay it forward to other people who like me, might have the interest and ability to become good programmers, but who don't even know that it's an option for people like them, or who need different kinds of support in order to thrive (I'm HoH, and my experience navigating both bootcamp and the workplace with a somewhat hidden disability has been that folks are often interested in being accommodating, but just don't know how).  ",Employed as a full-time developer for 1-3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",In-person bootcamp,Online learning platforms",,Accessibility,,W023: Accessibility In Data Visualization: Telling Stories in a New Voice,,,"My main goal would be for folks to walk away from the workshop with a new POV on designing and coding for accessibility -- that making good data viz that communicates to everyone isn't just a matter of ticking off innumerable boxes and including the right ARIA-labels, but in re-thinking how we tell stories about data in the first place.  Attendees will hopefully come away with an arsenal of both technical and narrative tools that make data ""viz"" much, much more than charts.",,,,,"While I am relatively new to the field, this has been my primary focus at work for the past year, and as someone with a worsening disability, changing the narrative around accessibility from ""accommodation"" to ""opportunity for creative problem solving which improves the experience for all users"" is something that is particularly important to me.","Nope, just a big thank you for even considering my workshop! ","I live locally (in brooklyn), so I won't need any travel-related expenses.  ",,C,Workshop,"attendees (ideally in groups), will produce a plan for a data visualization using D3 and React (part of the workshop will cover letting those two libraries work well together) that provides comparably rich, informative experience for assistive technologies users and those who do not.  

we'll talk about some of the pitfalls and issues around data viz and accessibility as it is currently approached, and then brainstorm together about different ways we could effectively present the information (including sounds, narrative statistics generation, etc) and break into groups to work directly on specific data sets.  The idea will be not just to create a chart but to assess what story each group wants to tell with the data at their disposal.","The intro presentation will be a very quick accessibility 101, focusing on issues around interactivity, SVGs and images, and tables.  We'll go over how Audio-Structural UX/semantic html gives screen reader users some great ways to navigate standard content pages, and see where these methods fall short when talking about complex infographics.","paper and pencils (with the presumption that folks are bringing laptops and are generally ready to code, and internet access)","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Brian Dunnington,Brian Dunnington,briandunnington@gmail.com,"From small-town farm boy to senior developer at Microsoft, I am a self-taught developer who has been coding now for over 20 (wow!) years. During that time, I have worked at start-ups, giant global companies, and ran my own successful freelance business.",,briandunnington,male,White,,"Seattle, WA","Although I am an over-represented white male, I have a passion for helping new and upcoming developers achieve their goals. I don't have a CS degree and didn't get into software development through traditional routes and think it is an interesting journey for folks to hear. As I progressed through my career, I made a conscious effort to avoid managerial roles since I thought I just wanted to write code, but a great mentor challenged me to push my boundaries and try developing people as well. I found a great sense of fulfillment and pride in helping other folks on their own journeys.","Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Other",lots of 'View Source' and experimentation,New tech,,W024: Build an Alexa Skill using Azure Functions,,,"This workshop touches on a few important concepts that will be useful for new coders:
-Introduction to cloud platforms (Azure and AWS): they can see how easy it is to create new services that are easy to manage and scale
-Introduction to hardware/devices: although we won't be soldering or building any components, it is interesting (and fun!) to use these new devices that are becoming so integral
-Demystify the magic: Can Amazon's Alexa even use Microsoft's Azure? This workshop will show that it is all just standards and code behind the scenes and there is no special magic going on",,,,,"I really love playing with new technologies, and especially trying to make different things work together (ex: turn a wireless doorbell into a notification system to let me know when my dog wants to come back in). I have created a few Alexa skills of my own, and I also work in the Azure group at Microsoft.","""Alexa - choose this workshop""","My employer *might* cover my travel expenses, but I will cover my own expenses if they do not.",,C,Workshop,"The idea is an expansion of this blog post: https://briandunnington.github.io/use_azure_functions_with_alexa
The attendees will leave with a custom Alexa skill that they can run on their own devices. Of course, they will also leave with some new knowledge, and hopefully some inspiration to build their own cool thing as well =)
The details are in the blog post, but the general steps are:
-Create the Azure Function (write the code)
-Set up and deploy the code to Azure
-Create the Alexa skill in the AWS portal
-Wire the two parts together
-Test it out
-Profit!","-What is Alexa?
-How do Alexa skills work behind the scenes?
-What is Azure Functions and what problem do they solve?","'-AWS and Azure accounts (can be created during the workshop)
-[optional] Alexa-powered device (dev/testing can all be done using the Alexa dev tools in a browser so a device is not essential)
-computer with Visual Studio installed","""Mon, July 22""",I am willing to give my workshop two times in a row.,,,
Jen Simmons,Jen Simmons,jen@jensimmons.com,I'm a web designer who teaches. Developer and Designer Advocate at Mozilla. Member of the CSS Working Group. ,https://www.linkedin.com/in/jensimmons,jensimmons,I'm a woman.,White,,Brooklyn,"I'm a white woman.

I do my best to fiercely advocate for a far wider worldview than the tech industry usually represents. I've lived in non-white communities, listening and learning. Come from a working class background. Dropped out of Comp Sci because of harassment. Fought my way back in. 

Also, hi! You know me. I'd love to present a workshop, but also understand if you want to have other / new people instead of me. Totally.","Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)""","conferences, and watching conference talks on video",Front-end,,W025: Understanding Layout,,,"I want to teach how to use Grid, Flexbox, and more to do layout in CSS. But not just the basics of the code — to teach how to understand the mental models of layout. Which is good for designers, too. ",,,,,"Well, no one else teaches the connection between graphic design and modern CSS like I do.  And I'm developing an in-depth course on Understanding Layout. ",Probably it makes sense to pitch this as a hands-on CSS coding workshop. But I could just as easily do it as a understanding CSS for non-coders / understanding the design medium for people who don't understand code. The course I'm creating will be both simultaneously. ,No travel needs. You are coming to my city :),,C,Workshop,"We'll make demos like the ones at labs.jensimmons.com. Perhaps I'll walk folks through specific examples, teaching how it works. Perhaps I'll pose challenges for folks, and let them work through it themselves. Likely a combination. Likely Saron and I will chat about this and I'll take her advice on the right balance. ","I want to make sure people are comfortable writing CSS and HTML. Know how to connect their CSS to their HTML and test it out in the browser. I won't have time to teach CSS 101, but I can at least make folks who aren't there yet feel a bit more comfortable. I also truly enjoy teaching intermediate CSS concepts to a room where I know there are people who have never written CSS and never will — they get a lot out of it, too. It's not really about the code, it's about understanding the medium.",Working internet access. Attendees should bring a laptop with a coding environment already setup (if they can). Nothing else is needed.,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Raymond Camden,Raymond Camden,raymondcamden@gmail.com,"I'm a Developer Experience person at Amex. My passion is front end development, some back end with Node, serverless, and enterprise cat demos. ",https://www.linkedin.com/in/raymondcamden/,raymondcamden,male,White,,"Lafayette, Louisiana","I've been developing for the web since 95 or so. I've been blogging, writing, and presenting for most of that time. Mainly, I'm not the smartest coder around and I do my best to turn my struggles into content (of some form) to help cement what I just learned and help others skip the pain I went through. I'm an adoptive single father of seven kids (not sure how this applies ;) but I'd be happy to talk about managing my work load and family life as well. :)",Employed as a full-time developer for over 3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms,Other","Trying to cheat at Bard's Tale. Also by watching Tron and getting really, really excited.",JavaScript,,W026: Real Person's Guide to Vue,,,To learn *why* you would want to use Vue and then - of course - how to use Vue. Vue is great for beginners and much more approachable (imo) than Angular or Vue. This workshop will start simple with a focus on practical takeaways for common use cases in web development.,,,,,"I've been working with JavaScript for a very long and have yet to find a framework that ""really"" made me excited. I liked Angular, but I love Vue. I know I can bring that passion to this talk!",I'm going to need travel assistance so I'd be willing to do more as well.,"I'd need a flight and hotel. If flight AND hotel makes it too much, let me know and I can maybe swing the hotel. I know I work for a very large company with a ton of money, but while they allow me to speak at conferences they do not pay for anything.",,C,Workshop,"As stated above, I'm going to try to work in as many ""real"" world Vue demos as possible, so things like:

* Form validation, posting to a server

* Using Ajax to load data and render it
* Working with client-side storage
* Adding in UI libraries with Vue apps
* Building PWAs with Vue","I'll be honest and say I'm not 100% sure how to answer this question. Given that Vue is a JavaScript framework meant to make it easier to add interactivity to a web page or build Single Page Applications, and given that I've got 2.5 hours, I could definitely spend some time talking about the ""why"" of a framework. I.e., why does using a framework help? This is something folks new to development may not get yet. I can still remember the first time I adopted a framework (for server-side development) and how it helped remove a lot of the things that normally slowed me down when building a project. The whole idea of ""where do I put files"" can be such a hold up when starting something new and getting rid of that gets you into the project that much quicker.

Anyway, I hope this helps a bit. :) I'd be happy to flesh this out more if necessary.",A laptop with their favorite editor.,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Michelle Brenner,Michelle Brenner,mbrenner24@gmail.com,"Michelle is currently a Senior Backend Engineer at ChowNow, with 8+ years experience in tech, from engineering support to manager. She runs a tech podcast called From the Source and works to promote DE&I in tech by organizing events, mentoring and conference speaking. A Philadelphia native, she is an art school graduate and a self-taught Python developer.",http://linkedin.com/in/michellebrenner/,@michellelynneb,Female,White,,Los Angeles,"In elementary school I was able to take a course on BASIC and I’ll never forget my first project creating a Rube Goldberg animation. However, once I got to college the CS classes sapped my joy of programming. I decided to switch majors and after a few tries I landed on 3D Animation. I wanted to combine my love of art with technology. Two years after I graduated, I was able to get a dream job at a VFX company. It’s there that I taught myself Python to automate my job. Entertainment jobs are tenuous and you never know when your contract is up. I realized that what mattered most for me was a stable job where I could solve problems. I made the shift back to development and I’ve been there ever since. I did not take the “traditional” path but I don’t regret any of my job experiences. This workshop is based on my experience treading that windy path.",Employed as a full-time developer for over 3 years,,"Other,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""","On the job by looking at other's tools, googling, and having great mentors.",Career/Personal Branding,,W027: Tell Me About Yourself: How to perfect your elevator pitch,,,"Whether you are at a networking event or an interview, you will often get a version of the question “Tell me about yourself”.  I’ve noticed people often downplay their accomplishments or talk about every single thing they’ve ever done. I’ve put together a series of strategies that can be used to help articulate and refine your story for different audiences.

The number one takeaway for the attendees is confidence. Confidence in their ability to get the job, the funding or the connections they are looking for. When they realize how much they’ve accomplished, they will be much better prepared for any situation. They will be able to use tips I’ve given them, the time spent brainstorming and working in groups to get all the pieces needed to craft their elevator pitches for different audiences. I know from personal experience how important that is when you are trying to break into an engineering job.",,,,,"I have honed my own pitch by having to do it over and over and watching out for what excites people. I wholeheartedly believe that anyone who wants to should get to work as a coder, and one of the hurdles is convincing hiring managers of that. I want my co-workers to be the people who understand customer service and empathy, not just Javascript. I have done this before as a workshop and individually. I have received great feedback and the attendees have gone on to achieve their goals. I know for each overlooked person I help get their next break the tech community is just a little better. ",,"Financial assistance is not required but would be appreciated. I will try to get my company to sponsor, atleast partially. For hotel & flight the approx cost would be $600.",,C,Workshop,"Attendees will be creating a bank of stories they can use in any situation. They will then be able to swap them in and out depending on who they are talking to. Is it a recruiter? A new friend who works at a company you want to work at? It’s important to be ready to go with the stories that will help them shine. The workshop will start with my intro, then I’ll start asking questions. The attendees will work with those around them, then I will ask for volunteers to talk about what they learned after each question.  I’ve broken this up into 3 sections. First job, current or last job, and future job. Most people’s first jobs are simpler, so it’s a good warm up. I’ll give examples to help them through.

First Job

What was your first job?
What did you do at that job that you had never done before?
How would you convert those lessons you learned (ie, working a cash register) to a general skill (time management, customer service)?

Current or Latest Job

What was your favorite project from your current or last job?
What was your role? (not your title, what you actually did).
Can you explain the project to anyone? 
What lessons did you learn from the project?
Would you approach that project differently if you were starting now?
What skills did you learn or level up from that project?
If this was a non technical project, how would you apply the skills you’ve learned to a technical project?

Future Job
What job do you want next?
What kind of skills do you think are necessary for that job?
What projects from your past do you think would demonstrate those skills?
What new projects would you like to work on to gain those skills?","My intro presentation starts with the premise, then I give my elevator pitch. I talk about what I included in the pitch, what I didn’t and why. This helps illustrate the strategies I used that they should think about throughout the workshop.

Here are the 3 strategies I focus on:

Everyone is better than they were before. At every job you were in, you learned something, even if technically you moved laterally or even down. If you worked as a barista, you learned customer service, multi-tasking and problem solving.

Your skills are more important than how you used them. Instead of focusing on the task (e.g. folding clothes at a retail store), turn it into the skill (in that example, attention to detail and quality control).

Put the audience first. Make sure you know what they are looking for and how technical you should be.",Pen & Paper for attendees. Projector for me.,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Flo Comuzzi,Flo Comuzzi,flo.comuzzi@mongodb.com,Flo is an experienced data engineer at MongoDB.,https://www.linkedin.com/in/fbsalinas/,floinnyc_,"female, non-binary",Hispanic or Latino,,"NYC, NY","I am a bone cancer survivor. In college, I lobbied officials for more funding as student body president. I recently submitted a patent for a process that would aid disabled folks’ commutes. I have collaborated with legal departments and other stakeholders to develop data privacy guidance for a data warehouse. I am no stranger to advocating for what I believe in and I bring the same level of conviction to my professional career.",Employed as a full-time developer for 1-3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Career/Personal Branding,,W028: Create your own learning plan!,,,"Attendees will walk away with a learning plan for themselves. They will have identified ways that they learn and picked up new patterns for getting through tough spots. As attendees grow in their careers, they will know how they can learn anything they want to.",,,,,"I’m the right person for this talk because I am all about practical and doable career planning. By knowing what to expect, attendees can make consistent progress and deal with frustrating moments effectively. I am genuine about the struggles I have had in my life because I want folks to know they can explore areas of interest that fall outside what is profitable and that doing so may even be the best long term approach to growth.",,I don't require travel financing.,,C,Workshop,"Attendees will walk away with a learning plan for themselves. This workshop is an extension of a recent blog post of mine: https://dev.to/floinnyc_/how-im-developing-my-learning-plan-this-year-1pj5

Introduction
~ 10 minutes: What is a learning plan? How can a learning plan help you get to where you want to be? How can you infuse parts of your learning into daily life smoothly and effectively? 

Motivation
~20 minutes: Attendees will put down their motivations through prompts and create an artifact to remind them of their values and objectives as they act on their learning plan.

Notes to your best self
~ 20 minutes: Attendees will explore their interests by jotting down their answers to several prompts. Where do interests intersect with values?

Mindmap the gaps
~20 minutes: Attendees will fill in the gaps they have between related concepts.

Plans A-D
~30 minutes: Attendees will create at least 4 paths of execution. They will be prompted to answer questions like, what I can do if this series of steps leads to a dead end? What will I do when i get stuck when I’m learning about execution contexts in JavaScript? What keywords can i search when I am unsure what direction to take my programming language theory in? How can I get the experience I am looking for at work? How can I tie my learning goals to getting a promotion?

Get the right tools
~20 minutes: Attendees will learn about tools that can support their learning. Some tips include:
Make your working environment as comfortable as possible. 
Think about how you will reinforce your learning, share it, and get recognition for it.

Attendees will set up tools that facilitate putting together a transcript of what they have done.

Start doing
~20 minutes: Attendees will get information on Dialectical Behavioral Therapy concept of building mastery to build self-esteem. Concepts from Apprenticeship Patterns are introduced here.

Q&A
~10 minutes: Attendees will get to share what they have learned and ask questions.","I plan to present background info on performance expectations at work, what does a career ladder at a tech company look like, software apprenticeship patterns, and psychological research around learning, effective environments, and motivation.",Attendees will need computers with some word processor and internet access.,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Bhavani Ravi,Bhavani Ravi,bhava0895@gmail.com,"Software Engineer - building KiSSFLOW a digital workspace
Organizer - Build2Learn a local community to learn tech by building software
Lead - Womentechmakers Chennai",https://www.linkedin.com/in/bhavanir/,https://twitter.com/geeky_bhavani,female,,,India,"I come from an uneducated family/background in South India. As a first generation engineer, I had no clue what it was all about. All I knew was I loved programming from high school and I am going to be good at it.

Things weren't easy. I was blindly coding hackerrank problems for 2 years until I stumbled upon application development, which helped my final year project.

On presenting it to a panel, I found my mentor. He was impressed by my work and offered me a job and he turned my life upside down.

I learned chatbot development, writing, organizing meetups, giving talks etc.,

Now I am paying it back by mentoring other people and giving motivational speeches",Employed as a full-time developer for 1-3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Other,Backend,W029: Building Your First Web-Application with Python Flask,,,"I agree! there is already enough content on the internet to teach this
However, after seeing people reading through tutorials after tutorials, watching video after videos,  I've noticed that they still don't feel that ""They are good enough"" or ""They know enough"" to build an industry level application. These courses walk you through a structured environment where there is a lesser possibility to make mistakes. Hence when placed in a real-time environment to build their own application you often don't know where to start.

In this workshop, I am going to take you through a step by step guided tutorial on Building a ToDo List App using Flask. We are not just going to code but also think through and solve problems that we face in the industry. Like,

- How to architect backend systems?
- How to design a  DB schema?
- How to modularize application code?
- How to code it all using Python Flask?",,,,,"As I mentioned in my background, Though I was good at programming all I was doing was solving hackerrank problems. Until I stumbled upon application development the true power of programming.  The earlier you get the taste the earlier you are hooked.   That is what we are trying to give college students via The community Build2Learn",,I would need conveyance for both travel and accomodation,,C,Workshop,They will build REST APIs for a ToDo list application and learn how to integrate it with an existing frontend.,"- What are web apps?
- Why Python?
- Why Flask? 
- An Intro to REST API and methods",Laptop with Wifi and Pycharm IDE,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Augustus Yuan,Augustus Yuan,hello@augustusyuan.com,"I am a Software Engineer at Evernote on the Web Client team. I've been working professionally for 4-5 years, starting as an intern and then converting to full-time.",https://www.linkedin.com/in/augustusyuan/,https://twitter.com/augburto,male,Asian / Pacific Islander,,California,"My name is Augustus and I’ve been coding full-time for around 4-5 years now. I started off as an intern at Evernote on the Analytics team building out an analytics dashboard for the summer, and then transitioned into web development for Evernote’s marketing website. I now work on Evernote's Web Client. Before that I graduated from University of Washington with a Bachelors in Informatics and a concentration in Human Computer Interaction. While my degree offered a few CS courses, I would say a majority of my programming experience is self-taught. I think the only way I was able to secure my first few internships was because I won a hackathon with some friends in college where we made a very basic mobile game application.

I'm an American-born Chinese (ABC!) and my parents immigrated here from Hong Kong. While I don't speak fluent Cantonese, I can still get around Hong Kong and I know a little Mandarin. I primarily speak English though.",Employed as a full-time developer for over 3 years,,"Other,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",Bachelors in Informatics (HCI concentration),Computer Science Fundamentals,"Git, version control, contributing to open source, release processes","W030: Mastering Git: Fundamentals, Internals, and Workflows",,,"My goal for this workshop is to give them strong fundamentals in understanding how git works so that if they join a company, they would be familiar with a lot of the best practices. One thing I want them to walk away with is the ability to not only use git, but also contribute to existing open source projects because I feel that is a great way of learning and building your own portfolio. I also want them to be able to debug issues that might happen and how proper git workflow can make that easier. Finally, I want to show them how we might use git to navigate large codebases and how a proper git workflow can actually help make that easier.",,,,,"At Evernote, I lead a lot of the onboarding workshops to get engineers started at our company and I also have a passion for mentoring. Part of the reason I really value mentorship is because one of the internships I had, I was assigned a mentor who was remote and couldn’t help me as much as I needed. Because I didn’t have a formal CS degree, a lot of things came a lot slower to me than the others. I struggled a lot in my internship so I understand the value of having a mentor and I want to bring my passion for teaching to more than just new hires at my company. When I started at my company, I also struggled a lot because the codebase was so large and an onboarding program wasn’t set up when I joined. As I was assigned tickets, I would git log files to uncover why we did certain things and git blame to know who to ask more about a feature. I truly feel git serves more than just a version control system and with proper git workflow, it can actually be an incredible onboarding tool for new engineers in any codebase.  I’ve taught many git concepts ad hoc to a lot of new hires at my company which is actually what inspired me to give a workshop about this because I know there are a lot of gems that git offers that people may not know about and while people praise git highly in the industry, I feel it still is an underrated tool that we don’t encourage enough mastery of and I want to change that.","This is my first workshop/talk outside of Evernote so if there is any feedback on what should be changed or how this topic can be more in line with what the conference expects, I am more than willing to work on that. Also I feel I could also condense this into a 15-min talk if the committee feels this topic might be better suited as a talk rather than a workshop.

I am pretty passionate about education so I would love the opportunity to contribute a workshop or talk but I also completely understand if there are a lot of other workshops that are better suited. Any feedback would be greatly appreciated.",Hotel,,C,Workshop,"If they haven’t already, they will have set up their Github profile, start a repository, and perhaps make something in there. They also will get to experience what it’s like to debug a “production issue” from a release candidate and walking through how things like git bisect work and how to revert a release, etc. I plan on making a Github repository with a sample fake app (perhaps a skinned version of TodoMVC) that has releases and the latest release has a bug. The goal isn’t necessarily to fix the bug but go through the process of where the offending commit happened and how you might go about addressing it. From there, I will show them the process of forking the repository, creating a branch and submitting a pull request fix. They will also set up some their dev environment with some clever aliases so they can use to do git commands faster and experience what it’s like navigating a larger popular codebase on Github.","Version control has been around for quite some time and is something you’ll come across at almost any tech company when it comes to collaborating on software. While many of us use this as a tool to push updates for our applications or repositories, git has a large range of features that help with more than just updating applications. We use git to also manage our releases under the hood and properly revert things before they go out. Git can also be an incredible assistant when it comes to navigating large codebases and understanding why changes were made. 

Despite all the benefits, a lot of magic happens under the hood and it’s important we can understand what is going on behind the scenes. GUIs such as Sourcetree make this a lot more approachable but there is a lot of benefit in understanding what is really happening. While we won’t go too in-depth, we will at least understand the breadth of what git has to offer. When collaborating with others, messing with git history is sometimes necessary but can confuse a lot of people if done improperly. It’s important for software developers to know more than just git commit and git push -- being able to understand what it means to be in a diverged state, why a merge conflict happened, and why branching and squashing changes is a good for keeping a clean git history will make it easier to not only find causes of regressions but also clean ways in how to fix or revert them. 

A handful of the different git commands we’ll talk in this workshop include

`git add` and `git commit` (staging files and commiting them)
Remotes and Branches (what are they and how they work)
Git merge and merge conflict resolution (what is a 3-way merge? Why did a conflict happen?)
Git fetch, pull (updating your local branches and how this works a little under the hood)
Git push and when to force push
Git rebase to edit and/or squash commits
Git log and git blame (to gain more insight of why a change is made and how we might use this to navigate a large codebase)
Git revert 
Git tag (useful for tagging release versions so you can swap in and out fast!)

Once we have passed this we can move on to the lower level concepts that follow git

How does git work? (talking about .git folder and what is in it)
What is a HEAD pointer? And how do pointers in git work?
Git reflog (to get out of sticky situations)
Git bisect (very useful for debugging when an regression has occurred)

Once we’ve covered the breadth of what git has to offer, we need to talk about proper git workflow. There have been a few topics on this including Centralized workflow and Gitflow Workflow. For this workshop we may not cover all the different workflows you’ll encounter but we will at least go through the typical workflow of what an open source repository on Github goes through which in general is a Forking workflow (you fork a repository, maintain your own forked repository on your Github profile and when you have a change ready to be submitted, you submit a branch pull request from your fork to the upstream/main repository). From there we can show the process of how we apply some of the fundamentals of using a branching strategy to submit a feature, going through a QA process, merging into a release candidate, finding a regression and addressing it before it goes out into the wild.

If we have extra time, we can talk about some of the common ""gotchas"" that I see a lot of people run into. We can also talk about how we can set up our development environment to make git easier and faster.","It would be best if attendees can bring their own laptop so they can follow along. I think a whiteboard can also help because I would like to draw out how some things work so people who learn better visually can see. If this isn't available though, as long as I have a way to project my screen, I think things should be okay because I can use something like Paint to show how things look.","""Mon, July 22"",""Tue, July 23""",I am only able to give my workshop once.,,,
BJ Burns,BJ Burns,burnsbj23@gmail.com,"BJ Burns is a Full Stack .Net Developer, Certified SCRUM Developer, Certified SCRUM Master, Meetup Organizer, and 1/2 of the Complete Developer Podcast. BJ first became interested in computers with his first experience in fourth grade using DOS prompt to play Oregon Trail in the computer lab at my elementary school. He began programming in high school when he took a class on QBasic. For him coding was a hobby, something he did for fun until a few years ago when he left medicine and decided to pursue a career as a developer.",https://www.linkedin.com/in/bj-burns/,@bowtiebeej,male,White,,Tennessee,"Coming into software development from the world of medicine I have a unique perspective on problem solving and the human interactions developers have to face. I have a BS in psychology, spent years working in hospitals and even attended medical school before becoming a developer. I also have experience speaking both in and outside of the software development community. ",Employed as a full-time developer for 1-3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Other",apprenticeship and one-on-one mentoring,Career/Personal Branding,,W031: Post Mortem: Dealing With Failure In Development,,,The goal is for attendees to walk away with the understanding that failure happens often and at different levels in the development process. They will have a set of tools they can use to not only survive a failure but use it to thrive in future endeavors. ,,,,,"Failure is not relegated to just development. It happens in many industries. While working in the medical field I attended regular M&M conferences, think Sprint Retrospectives but the project is a person. In my short career as a developer I've been on teams that failed, been brought onto failing teams to help them get back on track, and watched entire projects fail and have first hand experience of the damage it does to moral of a team.",This started off as an interactive talk I gave at CodeMash. Several people in the audience asked that I create a workshop where we practice the strategies in the talk.,I would like assistance with travel and accommodations.,,D,Workshop,This is more an experience workshop than a maker workshop. It will involve discussions and breaking into groups to work together. While maybe not tangible they will walk away with tools to use to overcome failure and handle it in a way that grows themselves and their teams.,"First we'll define failure, what it is and is not. Then we'll discuss emotions around failure and how it affects the individual and the team. The primary focus of the workshop will be a discussing on various strategies to overcome failure. Mixed throughout will be audience discussion and group activities designed to reinforce the concepts we are discussing.","Paper, pens, pencils, maybe crayons or colored markers. The poster sized sticky notepads would be great for the group activities but a whiteboard could work as well. Also a projector and white board for the lecture/intro portion of the workshop.","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Ali Spittel,Ali Spittel,ali07cat07@gmail.com,"Ali is a software engineer and teacher. She works fulltime as a software engineer at DEV, and parttime as a lead instructor at General Assembly. She also likes running with her puppy Blair, code art, ",https://www.linkedin.com/in/aspittel/,aspittel,female,White,,"Washington, DC","I've taught people how to code as my fulltime job, and I still do parttime. I've also spoken at a large number of confs and meetups.",Employed as a full-time developer for over 3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Career/Personal Branding,,"W032: Yes, You Should Write That Blog Post",,,"The goal of this workshop is to have attendees walk away with the framework for starting to write their own blog. I would love to motivate people to start writing, because it's been so transformational to my own career. 

Writing blog posts can help attendees in so many ways: writing reinforces what you know -- if you can teach something you really know it, it can demonstrate knowledge to prospective employers, and it can help build a network.",,,,,"I have been blogging for around a year and a half, and my blog posts have reached hundreds of thousands of people learning to code. I think my experience will relate to and help people learning to code.",,Hotel and train from DC would be much appreciated!,,D,Workshop,"Attendees will create:
* A list of possible blog post topics.
* A completed worksheet about your target audience and how to reach it.
* An outline of a blog post.
* A cheatsheet on all of the information covered in the talk.","I start off the talk by giving my blogging story: I started blogging around a year and a half ago, and originally didn't get too many people reading my posts. I then started crossposting to DEV and got some more readers, but then saw a big jump when I started writing about beginner-focused topics. I've had so many incredible opportunities and made great connections through blogging.

Then I transition into the reasons why blogging may help attendees, and practical steps for getting started before moving into the interactive workshopping. Each workshop section has framing and instruction before it, and discussion after.",Pencils and worksheets -- though I have a bunch of the worksheets printed out and can bring them!,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Lara Schenck,Lara Schenck,lara@notlaura.com,"Lara Schenck is fascinated by the profound, yet subtle, overlap between programming, computer science fundamentals, and CSS. She spreads her enthusiasm for this topic at her day job as a Design Ops Engineer for Penske Media Corporation, where she leads the design systems effort for big media publications powered by WordPress, and through her speaking and community involvement.

Lara writes about her work and life [on her blog](https://notlaura.com/blog/), illustrates [friendly monsters](https://notlaura.com/monsters), and inspires all of us who work with the web to seek a deeper understanding of the code we write and the tools we use.",https://www.linkedin.com/in/notlaura/,https://twitter.com/laras126,female,White,,"Pittsburgh, PA","I am from an upper-middle class family in rural PA, I have a background in art, and started coding in college when one of my teachers encouraged me to learn WordPress development and freelance for income while pursuing my art work. After art school, I became more interested in web development and freelanced as a designer/developer, learning on the job, for startups and small businesses for the next 7 years between Pittsburgh, then NYC, and most recently LA where I now work on design systems at a large publishing company (but moving back in Pittsburgh next month!). 

During those years, I struggled with interviewing for jobs – here is an article about that from 2015 that went a bit ""viral"" at the time: https://css-tricks.com/tales-of-a-non-unicorn-a-story-about-the-trouble-with-job-titles-and-descriptions/

My skill-set has always been oriented towards HTML and CSS. In late 2017, I learned computer science fundamentals for the first time when studying for a white-boarding interview. That knowledge set a lot of positive things in motion for me. Here is an article about that time of life: https://css-tricks.com/tales-non-unicorn-story-roller-coaster-job-searching/

A bit about my perspective:


Although I have been making my living writing code for all of my adult life, only recently did I start comfortably calling myself a programmer or an engineer. I think this is a result of my gender, art background, and HTML and CSS oriented skill-set. Unfortunately, HTML and CSS are often neglected in coding curricula or dismissed as ""not real programming"". Speaking from my own experience, this is likely turning a lot of promising people away from furthering their technical skills, and I am using my voice to help to change that perception.",Employed as a full-time developer for over 3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Other",A mentor during college,Front-end,,W033: Writing CSS Algorithms,,,"My goal is with this workshop is for attendees to:
1. understand HTML and CSS as a programming languages, 
2. see how the concepts they learn in other languages also apply to CSS but in a domain-specific, declarative way,
3. develop an initial vocabulary for writing maintainable CSS",,,,,"This topic is gradually becoming a life purpose for me. I initially proposed ""The Algorithms of CSS"" for CSSConf EU 2018 as a means of ""bridging the gap"" between CSS and computer science, hoping to make my day job and the research I was doing for job interviews more relevant to each other. After the talk was accepted and I began to write it, it became clear that there was no gap to bridge! CSS _is_ computer science, and there are overlapping concepts all over the place when you know how to see them. CSS algorithms aren't really a thing yet, but I think they could be. My goal in using this term is to help those new to programming or those more familair with imperative languages to be more interested in learning CSS and less skeptical of it's declarative, domain-specific nuances. Another goal is to provide a useful paradigm for naming classes and helping CSS be more manageable on teams.","I have presented this content as a talk several times. This will be the first time I present it in workshop format, and I am already really excited about it!! I love teaching and working with growing developers, this is my favorite topic ever, and I have developed/taught workshops of similar length at other events (WordCamp Europe in 2018, most recently).",Hotel - I can cover travel to/from Pittsburgh,,D,Workshop,"Attendees will author a CSS algorithm for a specific layout or feature within an existing CSS architecture. They will be provided with a ""front-end workshop"" or pattern library, and then, during the workshop, will build out an algorithm to solve a specific layout problem within that environment. 

My plan for the workshop is as follows:
1. Give an abbreviated version of the Algorithms of CSS (a talk I started giving last year that positions CSS as a programming language: https://notlaura.com/algorithms-of-css-sources/)
2. Attendees pair program and set up a pattern library via branching from an existing repo (this will be the ""front-end workshop"")
3. Select a layout problem / CSS algorithm prompt*
4. Walk through the steps to write an algorithm as outlined in this blog post (same as steps in a white-boarding interview): http://notlaura.com/writing-css-algorithms/
5. Pair programming time to write the algorithm**
6. Show and Tell
7. (optional, depending on time) Documentation testing: each pair pushes up their algorithm to the repo, pulls down others' algorithms, and tries to use one or more of them in a pattern.


* These will vary in their level of difficulty and each will be designed to teach a specific aspect of CSS

** Each section in the blog post will last about 20 minutes and I will announce when pairs should be moving to each section. At each break, they will switch roles in their pair.","The introduction will be an abbreviated version of my Algorithms of CSS talk, and will last about 15 minutes. Here is a link to the history of the talk: https://notlaura.com/algorithms-of-css-sources/

And a video of the most recent version, from December 2018: https://wordpress.tv/2018/12/30/lara-schenck-bridging-the-design-and-development-gap-with-css-algorithms/

The primary focus of the introductory talk will be understanding CSS as a programming language to set an open-minded tone for the content: 
- declarative programming paradigm, 
- domain specific languages, 
- the benefits in an open definition for programming.

Then we will discuss browser mechanics in order to build a rudimentary mental model for CSS parsing:
- tokenization, 
- the DOM, CSSOM, and render tree
- the cascade, 
- the steps in rendering (layout, paint, composite)

Finally, we will end with a brief introduction to writing CSS in projects. This will include:
- Why CSS is hard to scale / building ""houses of cards""
- Single responsibility principle
- CSS utilities
- Front-end workshop","One computer per pair, scratch paper and pencils","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Amanda Sopkin,Amanda Sopkin,amsopkin@gmail.com,"Amanda is a Seattle transplant from Denver, Colorado with a great love for coffee and a bit less love for rain. She is a full-stack software engineer for the rentals team at Zillow who attends hackathons as a coach for Major League Hacking in her spare time. She enjoys writing, speaking, and obsessively reading about sharks.",https://www.linkedin.com/in/amandasopkin,https://twitter.com/amandasopkin,Female,White,,Seattle,"I have been working as a software engineer for a few years. I have worked at a variety of companies, including doing government work before becoming a software engineer for Zillow. I have spoken on engineering subjects a few times before at conferences of varying sizes. I also work as a coach for Major League Hacking, attending hackathons at schools across the country to help students make the most of their experiences. My experience as a coach has taught me a lot about different types of people and the different things they bring to the table as developers. My experience writing, speaking, and doing my job as an engineer has given me unique perspectives I try to share through my writing and speaking. What I am submitting is based on my personal experiences and research in these capacities.",Employed as a full-time developer for 1-3 years,,CS degree,,Technical Interviews,,W034: Talk Title: Broken Pipeline: How Bias in Interviews Hurts Tech Companies and How to Improve Your Process,,,The purpose of this talk is to improve understanding of interview processes for interviewees and interviewers. Attendees will walk away with strategies for improving their pipelines and interview processes in both the short and long term. People who have started interviewing will gain a better understanding of the process and how to improve it when they start interviewing others. I want attendees to feel more empathetic towards the candidates they see in interviews and  reinspired to make their interview processes better.,,,,,"I have written about technical interviews at length and created guides to help candidates prepare effectively. At my current company, I worked on a project to calibrate our own interview process by having engineers interview each other to more accurately determine what is necessary to be successful in our roles and what is not. I find that many software engineers believe the technical interviewing process is broken but struggle to find viable alternatives. Without an accurate baseline, interviewing is often highly subjective because engineers have different ideas of what knowledge is “essential” to be successful in their roles. Attendees will walk away from this talk with actionable adjustments to their interviewing processes that can be made in both the short and long term. ",I am submitting this as a workshop and a talk in slightly different versions because I could see it working either way.,Flight and hotel,,D,Workshop,Attendees will walk away with an interview question that they have discussed and received peer feedback on. The goal of these questions is to be more applicable than the typical leetcode style algorithms interview. ,"(Introduction: 5 minutes)
Technology companies struggle to fill open roles, often spending weeks or months interviewing candidates and then competing against other companies to win over the candidates that make it through. Demand for good engineers continues to grow at a breakneck pace, but our inherently biased interview processes makes it difficult for engineers from non-traditional backgrounds to break into the space. I will discuss the ways that standard hiring processes hurt non-traditional candidates and focus on attracting a particular “type” of engineer. I will focus on the problems with traditional algorithms-based interviews using a whiteboard or coding interface. To demonstrate problems with the typical process,  I will provide results published by interviewing.io, a platform that collects data on typical technical interviews and their outcomes. In particular, their data demonstrates that only 25% of interviewees consistently receive the same outcome, indicating the randomness of this style of interviews. 
(Better strategies: 3 minutes)
Then we will look at new strategies for interviewing that have successfully overcome some of the issues that prevent talented engineers who may be a bit rusty on algorithms from getting through the pipeline. Studies show that a “work sample test” is one of the most effective ways to ensure a candidate’s ability, but there are other ways of testing engineers. In particular, Stripe conducts different kinds of coding interviews including a problem that allows candidates to work with an engineer on finding the bug in a piece of code and an interview requiring candidates to add functionality to existing code. These tests are designed to more closely mimic the job function for engineers who, like most of us, spend very little time actually implementing algorithms. We will also look at Amazon’s interview process in which candidates work on a coding problem for most of the day and then talk through their approach with an engineer. 
(5 minutes: Tips for making any style of interview more compassionate)
Alternative interviewing strategies like the ones above can require more “upkeep” and wide support since companies might need to come up with new problems for implementation and debugging, so I will also talk through some ways that engineers can make the standard technical interview more compassionate. First, studies show that prefacing the interview by reminding the candidate that the focus of the interview is their thought process and not a complete solution helps candidates to relax. Even designing interviews that are explicitly expected to be too difficult to solve within an hour can help the candidate focus on articulating their thought process over writing quick code. Second, having interviewers score candidates on different aspects of their performance including communication ability encourages them to view candidates more holistically, rather than assigning a singular score.  Finally, coaching interviewers to view the process as pair programming helps make the process more collaborative. This gives candidates the opportunity to truly showcase their strengths and allow the interviewer to take care of other areas. 
(Conclusion: 1 minute)
I will briefly conclude by reiterating the importance of interviewing compassionately. It maximizes the time of everyone involved so that companies can find qualified candidates more quickly and eliminate some of the bias towards interviews from algorithms-focused backgrounds.",Paper and pencils/pens!,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Michelle Brenner,Michelle Brenner,mbrenner24@gmail.com,"Michelle is currently a Senior Backend Engineer at ChowNow, with 8+ years experience in tech, from engineering support to manager. She runs a tech podcast called From the Source and works to promote DE&I in tech by organizing events, mentoring and conference speaking. A Philadelphia native, she is an art school graduate and a self-taught Python developer.",https://www.linkedin.com/in/michellebrenner/,@michellelynneb,Female,White,,Los Angeles,"I took a windy path to being a coder. I went to art school and my first job was at a VFX company, where I was dreaming of being an animator but ended up a Python developer. Entertainment tech is very different than other tech companies. They have razor thin margins and the tech was focused on anything that could get the artists working faster with better output. Every movie was like starting a new company, so you’d better get that tool done fast or it might be useless in a year. This taught me to avoid “rolling my own” and instead use the tools that were available. This workshop reinforces that by focusing on using tools to do what you don’t want to deal with (server maintenance) and focus on what’s important (business logic).",Employed as a full-time developer for over 3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Other",Learning from peers and mentors on the job by looking at their projects and getting reviews.,New tech,,W035: Idea to App: Hone your idea and make your first serverless app,,,"My goal for attendees is to get an API up and running as fast as possible. The first part of this workshop is design and the second is actual implementation. Everyone has ideas for projects, but especially when you are at the beginning of your coding journey, it’s hard to know where to start. As a senior engineer I am often given a large vague concept and asked to break it down into tickets with estimates and a rollout plan. This first half of the workshop is designed to help those who want to better organize their personal and professional projects.

Then we get to the second half, which is actual deployment. I will be going over how services like AWS really want their business and offer dozens of services to make developing easier. I will go over which ones you can use to make a basic web app as fast as possible. I will be providing a step by step guide with screenshots, as well as a working repository with the infrastructure as code that can be used to copy and paste from. I know from the workshops I have been to there are always technical issues so it is important for me to focus on introducing the concepts and providing all the materials in case a computer doesn’t work work or an AWS account is locked out. I want attendees to leave knowing that with FaaS they can take projects from idea to production faster than they ever thought.",,,,,"When people ask me the difference between mid-level and senior, this is a topic I bring up. How to go from a “just answering tickets” engineer to “planning projects” was a big one for me. I remember vividly sitting with mentors and how enlightening it was. Learning about serverless apps and using cloud services more and more has personally helped me get projects done faster and easier. I wish I had known about them starting out. I have done a similar talk where I have gone over a single project, which I used partially for the basis of building this talk. Here’s the video, and I promise I make more eye contact these days.  https://www.youtube.com/watch?v=pkCSn-P1uRc&feature=youtu.be",,"Financial assistance is not required but would be appreciated. I will try to get my company to sponsor, atleast partially. Here are the approx costs. Hotel & Flight: $600.",,D,Workshop,"The first interactive half of the workshop is idea refinement. Ideally participants come in with ideas, but can also work in pairs in groups to help each other and still learn. This would obviously be easier if I focused on just a single project of mine and said let’s re-create this. But I think sometimes it is hard to go from tutorial to own project, so by using the attendee’s own ideas, they should have a head start. 

I’ll introduce the concept of core functionality and have them work with their neighbors and then share with the group.  If I was going to re-create YouTube what is core functionality? Not playlists or comments. Not users or metrics. Just uploading a video to the cloud and being able to view it. 

Then we’ll discuss the technology that is required for that idea. How to turn core functionality into an API design. This is another point where we’ll be reducing the idea down with our neighbors and as a group. 

After we are pretty happy with our idea, it will be time to open up laptops and start creating. Ideally everyone has a laptop and an AWS account, but even if they don’t they can follow along and use the take-home resources at their leisure. I will go over each AWS service they will need to use and how to connect them. How to create the API Gateway and connect it to the Lambda. This will be language agnostic, they can write their functions in any manner they choose. By the end they will have a CRUD endpoint with stubbed out functions they can use as the basis of their app.","There are two parts to the workshop and the intro will go over both. First I will talk about MVP and how no design survives its first contact with the user. How to focus ideas into core functionality and what belongs in v2, v3, etc. Then how an idea can be translated into a RESTful API (and the basics of what makes an API RESTful). Next will be the technical portion. I’ve designed this with the idea that my audience members may have heard of AWS, but not have used it all. I will go over the 5 basic parts of a web app (interface, algorithm, storage, home, deployment). At this point I’ll stop, and I’ll go over the actual AWS services as we use them. I want to make sure the general idea of an app is planted in their heads as we brainstorm, but not focus too much on the details until we get to it.","Ideally the attendees would have laptops and have already setup AWS accounts. If not, they can use pen and paper to take notes and work through the steps on their own after. They can best utilize their time working with others or asking questions.","""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Katarina Hoeger,Katarina Hoeger,katarina@katarinahoeger.com,"I am currently a STEAM instructor and musician. As a musician or sound artist, I integrate mathematics and coding into some of the sound experiences I create. ",https://www.linkedin.com/in/katarinahoeger/,https://www.linkedin.com/in/katarinahoeger/,female,2 or more of the above,,"White Plains, NY","I picked up my coding skills alongside my mathematical modeling ones. I am college trained, but in mathematical modeling and operations research. This means I have a large understanding of theory, and a self taught understanding of practical aspects of coding and software development. I improved upon my coding skills through attending meet-ups and working on independent music-related projects. I instruct K-12 students in STEAM areas, sometimes in coding. I am female, mixed african american and european (first gen in US on this side). I run a not-for-profit which specializes in fostering musical creation, research, exploration, and education, based in NYC. I have not had a long term software engineering job.",Other,"I use code as a tool. Coding is not yet part of my profession, but I hope it will be. I use code to create sound art, and will attend school to get a better grounding in the arts. ","CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Other","adapting and solving problems from non computer science books, hackathons,  and setting personal project goals","Creative Coding (cool, artsy things you can make with code!)",,"W036: MusiCode (Alt: Making Musical Code, or Alt2: Musical Code)",,,"I want the attendees of this workshop to walk away having written code that generates music. The idea is to input text, and output the text as if it were encoded in music.

I want them to learn how to
- create a basic mapping that translates text into music
- implement this mapping
- have output music 

The attendees would learn about data sonification! It presents them with a different way of approaching data visualization, as presenting it as sound instead of graphics. It will also appeal to some, and give them projects they wish to work on for fun, and provide a different way for them to learn. Plus, they will have their own unique music at the end. ",,,,,"I love combining math, music and code! I am working on various projects linking the three, and in fact, a past project, rhymes to music, is a bit more advanced version of this project. Additionally, as a STEAM instructor, I have experience leading others to complete projects. I am currently planning on getting an additional degree, so long as I can get funding, in sound arts or intermedia studies because of these interests, so it is very important to me. I run a not-for-profit that focuses on fostering music exploration, research, creation, and education, so this fits in with my mission there. ","This would be a python based lesson, and would rely on libraries. The music21 version will produce music, but the output just won't sound so great, and the potential note length values will be limited . The ctcsound version will sound better and have a better range of note length values, but may require the use of a package I create to facilitate ease of use during a workshop, so that they do not need to wrestle with a second programming language during the talk. This requires further investigations.","Trip to and from NYC from White Plains, which is generally a train ticket. If I were to stay overnight, because it would facilitate doing Codeland things early or late and would reduce travel times, it would also cover the cost of a hotel. My company will not pay.",,D,Workshop,"0. See an example of what can be done
1.  Choose text/ data they wish to convert. Sticking to text based data will make this easier to explain as a group.  
Example: 
text = ""I love Codeland! I have learned so much from it.""
2. Create their own mapping on paper. I will show an example mapping, then encourage them to make their own. This requires breaking the message into tokens they think make sense, and figuring out what to pair those with musically.
Example: 
""I"" -> pitch 440, duration 2 beats 
"" "" -> rest, duration 1 beat , etc.
(beats at 120 bpm)
3.  Use code to parse text for tokens. For each token identified, add the corresponding musical element to the future output. 
Example:
output = [ [440, 2], [rest, 1], ... ]
4. Render the output as music
5. (Optional) Expand by making variations on the output, rearranging the output,  or interpreting the data in a second way and comparing the results. Also, try lots of different data. What works, what doesn't, do you notice anything about your results? If you prefer a different language, can you do the same with it? Look up resources you would need to do so.","Messages have been encoded for ages. Discuss message encoding. Why might we want to do it? How can computers make it easier? Can everything be decoded easily? Would code be different if we want to obfuscate the message than if we want it easily understandable? What would change if the pleasantness of the end message is the result?

Data visualization. What is data visualization? How does data sonification relate? Why would we sonify data instead of only visualizing it?","I will need: 
A whiteboard
A screen to display my screen on
laptop
Python 3
TBD: either music21 or ctcsound

Participants will need:
paper
pencils
laptops
Python 3
TBD: either music21 or ctcsound","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Loren Klingman,Loren Klingman,lklingman@bignerdranch.com,"I started programming through tutorials and books in middle and high school.  Completed an undergraduate degree, worked for two years, and then came back for my masters.  I was a team lead at Home Depot and am currently a consulting web developer at Big Nerd Ranch.",https://www.linkedin.com/in/lorenklingman,,male,White,,"Atlanta, GA","I'm a fairly senior developer.  Full time for 5 years, but part time for 5+ years during college and high school.  I'm self taught through tutorials and such for almost all my web technologies.  I've worked for companies with tiny (<10 people) IT departments and for Home Depot which has a very large IT department, which has really helped shape my views on testing and code reviews and what things look like with them and without them.",Employed as a full-time developer for over 3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Front-end,,"W037: You wrote a demo website, let's test it!",,,I want them to leave having written test cases for their website (or for our demo app if they don't have something already).,,,,,"I love helping people succeed in what they are doing and seeing tools improve process.  While working at Home Depot, my fellow developers became my users, and I became passionate about improving the burden of testing code.  This led to diving into front end tests and really considering what we should and shouldn't be testing in each part of that process.",I've preposed the intro to the workshop as a 15 minute talk.,"I would need the flight covered.  (Since I'm traveling from Atlanta, I could fly both ways Monday to avoid the need for a hotel.)",,D,Workshop,We will take a web app (demo will be React) and write unit and end-to-end test cases for it.,"1. Intro to testing tools/selecting tools that are easy for the reviewer to run after `npm install`
2. Front End Unit Tests - Let's test functions and see how they change state (with working code demo)
3. Front End Unit Tests - Generally not the HTML content
4. Front End E2E Tests - How does this work when it's run in full?  (HTML content) (with working code demo)","Computer, Internet, npm, some coding environment (VSCode or other)","""Mon, July 22""",I am willing to give my workshop two times in a row.,,,
Eyitayo Alimi,Eyitayo Alimi,alimieyitayo@gmail.com,"A Graduate of Computer Engineering with over 10 years experience in the sector. She's spent the last six years building technology Communities. An advocate of diversity, inclusion and accessibility. She supports women in the field of technology and entrepreneurship at awitb.org",https://www.linkedin.com/in/alimi-eyitayo-a53bb044/,@alimieyitayo,Female,Black or African American,,"Lagos, Nigeria",I'm a woman - She /her in the field of technology. I am a black African from Nigeria with visible difference.,"Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,CS degree,,Other, Community - Technology,W038: Persona and Pathway : Strategizing your tech community for diversity.,,,"A community is where people come together for a common goal, it could be at the office, at home,school, group of friends but sometimes some persons suffer because the leader of that same community is not aware of their needs .

This talk is aimed at helping the workshop attendees learn how to create personas and pathways to the community they are building or have built.",,,,,I'm fit because this will be drawn from my experiences of over 5 years . I am also an international speaker in the developer community .,The workshop is for everyone interested in being a good member of a community and a successful member of a talk community.,"Flight, Hotel, +1",,D,Workshop,"The attendees will create samples of persona and pathways as tuning to their community needs.
The instructions will come on the slides I'd be bringing to the workshop.","Everyone of us belongs to one community or the other . Some were created  by us - unconsciouly - while others were created by others. As coders,we might need one way or another to build a community for a stack or technology you love the most, you'd also love to impact people , how do you then know where and how to get the right members of your tech Community? There's more to a community than just code so if the other doesn't know what the community wants, they  might just be working fruitlessly. This talk is to help them create a persona for the community they have started and the one they will start in the future.

There will be a small talk and then a group activity for the attendees after which each group will prepare their project and present as well




","Cardboard, whiteboard, sticky-notes , multicoloured markers, pencils, A3 papers.","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Dorothy Phoenix,Dorothy Phoenix,contact@cloudyheavengames.com,"I am a game developer at my company, Cloudy Heaven Games, and a computer science tutor. Prior to self-employment, I worked for six years as a software developer and tester at IBM and a local startup. ",https://www.linkedin.com/in/dorothy-phoenix-0694a55,@cloudyheavengms,female,Black or African American,,Washington DC,"I initially came from a more formal computer science background. I took AP Computer Science in high school (around 2000, back when it was C++ rather than Java). I studied Computer Science and East Asian Studies at MIT, and then got a second degree in Game and Simulation Programming. For five years, I worked as a software engineer on government projects at IBM. This work included repairing and migrating Flash-based educational courseware to an online Army learning system, and then working on enterprise Java websites for government clients. I worked for a year as a software developer in test for a small startup, writing a bit of C++ code for a modem, as well as doing documentation. I’ve always been the team member who does writing and documentation; it seems a lot of software engineers don’t want to do that role or are not as equipped. While doing these jobs, I was attempting to work on my own video games on my own time, but not finishing. In 2014 I released a mobile game and started my company, Cloudy Heaven Games. A few months later I left my full-time job to focus on the company. Over the past year, I have been to a few conferences to demo my next game releases. I have also been spending a lot of time focusing on tutoring and teaching, including writing books about how I developer my first game, and a compilation of computer science study tips. I got into computer science because I knew from a young age that I wanted to be involved in game development. I would make my own little instruction manuals for games I made up (this was starting back in the late 80s and early 90s, when video games actually came with paper booklets, rather than an online manual!). I never left home without a game book, or game music, or something related to games. I was pretty much obsessed, and I’ve found a way to make it into my profession.",Other,Self-employed as a game/software developer and computer science tutor.  Previously worked full-time as a developer (5+ years) for other companies.,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Computer Science Fundamentals,,W039: Learning Java and Object-Oriented Programming Through Video Games ,,,"The big goal is for attendees to understand the basics of object-oriented programming, and how to organize that knowledge and their ideas into a coherent game project.

As a tutor, I notice that for a lot of students, even if they understand how to do some of the basic tasks of programming, they have a hard time figuring out how to put it all together into something usable.  A lot of times, they don't even know how to connect what they've learn into solving an actual problem.  Part of it is that they don't know now to plan, and don't understand the relationship between the different components of the program they're trying to write. 

This workshop will help attendees to understand that process.  Even if they feel they don't know a lot about programming yet, I also hope that they will see the value in what they've learned so far, and what they learn in this workshop, and how the basics are so fundamental to creating something great like a game.",,,,,"As someone who is passionate about games, I believe that people learn better when they can apply their skills to something they love. Whenever I've tutored, if my students were gamers, they became so much more engaged when we discussed how to do things in the games they love, and the concepts made so much more sense. They were able to start making connections on their own, asking me questions and pointing out additional ways to apply the programming concepts. Games are a language I can use to help people learn and get excited. ","If I had had a class like this when I was a kid, like if I was playing Final Fantasy and an offer popped up on the screen to learn how to program the game, I would have been all over it! I have prior speaking experience. I’ve spoken at several SALT conferences about serious games. Presentation titles include: “Best Practices for Instructional Games,” “Virtual EDU: Real World Examples of Learning in Multi-User Virtual Environments (MUVE),” and “How to Add Replay Value to Your Educational Game.” The brochures for these events can be found at: http://salt.org/docs/wprogram10.pdf and http://salt.org/docs/wprogram12.pdf I gave a workshop at LEEF about how to write a game design document for serious games. It was the most-attended workshop at the event, and ran out of room on the signup sheet. I spoke at the Code Writer’s Workshop, as well as several game conventions, about how I released my first game, for about 45 minutes at each engagement. I can also provide recommendations from students I've tutored in computer science, and their parents. A few kids I worked with went from failing computer science to passing, within a semester (the class was year-long).",I would require hotel accommodations and train ticket to/from DC.,,D,Workshop,"Attendees will make a short, text-based game in Java.  The basic game idea is that players must interact with objects and characters in a text-based world, trying to find a secret password that will allow the player to beat the game.

The first step is to outline a brief design document, showing exactly what the game rules and options are, as well as describe the game world (characters, objects, and player actions).  This shows the importance of planning before you code.

Each aspect of the game illustrates a fundamental principle of Java and object-oriented programming.  

Objective 1: Learn about the point of entry in a software program.  Every runnable piece of software has to start running somewhere in the code, right?  But where does the computer know where to look in order to start the program?  In some languages, the computer will just run a program from the top on down, but in Java and other object-oriented languages, there’s some sort of main method that determines the point of entry.  We’ll talk about how the computer knows where to find this method.

Objective 2: Learn about text input and output.  Most games, even graphically-based games, have some sort of text output to the screen, even if it’s just the game title, score display, or options.  Since this game is text and story-based, we’ll do a lot of work with text output.  We will also see how to read text input from the player.

Objective 3: Learn about objects, data and behavior.  In creating a game, we have to think about what sorts of data/information we will need (such as score, player name, and so on), as well as what sorts of behaviors are in the game world (such as fighting, using items, moving, etc).  Data can be stored as variables, and behaviors can be combined into methods.  Furthermore, in our game world, we can combine variables and methods in different objects, or entities in the game.

Objective 4: Learn about different data types.  Games have all sorts of types of data, including types of numbers, text, and true/false (booleans).  We’ll see how to choose the right data types, and how to use them.

Objective 5: Learn about decision-making, conditions, and control structures.  A big part of a game is the ability for the player to make decisions, and for the game to respond based on those decisions.  Once we’ve discussed how to get player input, we can look at how conditional structures such as if/else statements can be used to make progress in the game.  We’ll also see that we need loops (while/for) to continuously get player input until some condition is met (we lose, we win, or we quit).  Also, we will discuss how boolean values are related to loops and conditionals.

Objective 6: Learn the basics of working with numbers.  Math is also important in most games.  If nothing else, being able to do basic operations such as increasing a score, decreasing an amount of money, or figuring out if you have enough experience points to gain a level require some basic math skills.  We’ll see how to use numbers in our game.

Objective 7: Learn about basic String operations.  Strings are such an important part of working with text, and Java has lots of functionality for using them.  Being a text-based game, we’ll see some useful functions that make up a good grasp of using Strings.

These are skills that are basic to most beginning programming classes, and while we won’t be making a professional-level game, attendees will see that they can accomplish so much more with the basics than they might have thought.","As an aspiring developer, one of your goals might be to some day make a video game.  However, you might not feel that you have enough skills to accomplish such a task.  After all, look at how realistic and complex all these new games are!  But have you stopped to think about how what you’ve been learning so far in your programming lessons, even just the basics, apply to making a game?  Chances are, you probably already know a lot more about how to make games than you think!  Furthermore, games can help you better understand the basics of object-oriented programming.  Let’s look at some examples:

Math: I’m sure some of you wondered if you would ever use the math you learned in school.  Well, with games, you can!  Think about how basic numbers are important to your favorite game.  Does the game keep a score?  Can you win money, and buy and sell items?  What about moving a character, how can you use math to update and track a character’s position on the screen (hint: do you remember x and y coordinates?)?  Have you played a game that simulates physics in some way, such as making a character jump or change speeds, or launching an angry bird at blocks?  Well, now you see just some basic ways that the math you learn in school and in programming contribute to a game.

Strings and text: Do you know how to write text output to a computer screen?  Congratulations!  You’ve mastered a basic skill that forms the backbone of many games!  How about figuring out if a player enters a correct password, or breaking into a computer terminal in a game like Fallout?  More text operations!

Objects and Classes:  What entities or “objects” do you find in your favorite games?  Many games have some sort of player object, and then you might have enemies, or world objects with which you can interact.  All of these have some sort of data and behavior associated with them.  For example, a player character might move, attack, or use items as part of their behavior.  These can be broken down into methods or functions in code.  A player might also have data such as health points, money, strength, and so on.  These can be expressed as variables.  We can also break down object types into subgroups, or subclasses, as you might have learned in code class.  For example, in some games, a weapon might be a basic type of object.  All weapons might have similar behavior and data, such as a power level, an attack, or even a cost or value.  Then, we can also have subtypes of weapons, that have differing behaviors and data.  Swords might be only usable by certain characters, and might be used differently than a throwing knife (maybe you can’t throw a sword, but only a knife).  A crossbow might have a range property that you wouldn’t see in a sword.  All of these concepts might have been hard to imagine when you were learning about them in a coding class, but games provide a perfect example!

Arrays and lists: They might be cumbersome to learn about, but you see them all the time in games.  Have you played a game where you have an inventory of items?  Chances are you’re working with a list.  Ever faced a group of enemies in combat?  Well, the game might store an array of the enemies you’re facing.  Every object in the game world is probably stored in some kind of list or array, if only because the game has to update each one every frame or so.  And what do you use to go through a list or array of items?  A loop!

See?  Even the most basic concepts provide lots of material for you to work with in making a game of your own!

The big secret is to plan and understand how to organize your coding skills into a cohesive program, whether you’re making a game or any other software project.  In this workshop, we’ll see how you can do just that.
","Scratch paper might be helpful for attendees.  A laptop with Java installed (at least 1.5) will be needed to complete the workshop.  I'd also need a projector so that I could show my screen, and possibly a whiteboard (but we can work around that).","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Guilherme Vinicius Moreira,Guilherme Vinicius Moreira,gui.vinicius@gmail.com,"I’m a software engineer and entrepreneur with more than 10 years of experience in the tech industry. I've worked for big and small companies, founded business and failed with startups in the past, but I never stopped coding, creating and helping the community back.",https://www.linkedin.com/in/guivinicius,@guivinicius,male,Hispanic or Latino,,Brazil,"I started my career in the tech industry from the bottom, as an IT support intern. At that time I didn’t want to become an engineer because I thought it wasn’t for me. 

After a while, I took a chance in a junior developer position, where I had my first experience in a big project with a great tech leader and a great manager, they both gave me the knowledge and opportunity to grow which opened my eyes to the opportunities ahead of me.

Since then, as an engineer, I always thought of me as a creator of systems and business. I’ve built and closed small business from the fashion industry to tech startups. Helped to shape the local tech and startup community because I believe we always need to give it back. 

One of my startups gave me an opportunity to live in Spain for a while to get investment, we failed, but we learned a lot. After that, I had a chance to work for a big company like Walmart.com which I learned a lot. 

Nowadays I still work as an engineer and founded a specialty coffee business in Brazil a hobby that became business. As a senior engineer and partner at Codeminer42 I still code but also helps to manage a few office branches and train and coach new developers.

I believe I can help people that are in doubt about their career, especially because a career is now a single path, is a consequence of decisions you take along the way that can make you a better person.","Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,New tech,,W040: Smart contract and Decentralized Apps 101,,,They are going to learn and get started into the world of decentralized apps using Solidity language to write smart contracts.,,,,,I currently work in a blockchain based company which uses smart contracts.,"The subject can be intense, mostly because of the whole nature of distributed applications. The idea is to give them the confidence to start digging and researching into more complex contracts.","It would be great if you guys could cover the flight and hotel costs. The day to day expenses I can manage by myself. Also, I can try to talk to my current company to help with something.",,D,Workshop,"They will create a Bank smart contract that holds ""coins"" and allows people to enroll, withdraw and deposit from it.","'- Basic introduction to blockchain
- Introduction to Ethereum
- Overview of Distributed apps (DAPPS)
- Introduction to Solidity","- Internet Connection
- Notebook
- Projector","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Christopher Cole,Christopher Cole,christopher.cole@supportcast.org,"I am currently a software and web developer who lives in the metro Atlanta area working as a webmaster at Kennesaw State University. I started a company, Support C.A.S.T. (Community, Arts, Sports, Technology), to provide consultation and resources for small businesses and communities through the arts, sports, and tech.",https://www.linkedin.com/in/christopher-cole-a9310633/,,male,Black or African American,,"Atlanta, GA",I am a non-traditional college graduate who has learned through multiple avenues. I earned my Associates in the IT Programmer/Analyst program and Bachelors in Computer Science. I also have started my Masters program in Software Engineering. I also got hands-on experience through internships and full time positions while in school. I've worked with small start ups and interned with state government agencies as well as large companies. I have engineering experience as well as management experience. I love music. I also struggle to manage depression and anxiety. I am committed to giving as much positive energy as possible in hopes that it will spread and we treat each other better on a micro and macro level.  I am very passionate about helping others gain and maintain confidence in their ability to achieve any goal they may have. ,Employed as a full-time developer for over 3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Front-end,,W041: I didn't like WordPress. So I made my own theme and plugins.,,,"My goal for this workshop is to show how to learn independently through a tangible example I went through at work. I will be showing them how to take a website design and convert it into a WordPress theme and associated plugins. I also hope attendees will feel confident to make or find opportunities on their coding journey that fits their lives (environment, personality, etc).",,,,,"This is important to me to share this information because I hard to work hard to get out of my own way and learn how to do this. It's important to share so others have confidence in themselves to exercise and build their skillset, to make opportunities for themselves, and how important it is to continue learning and sharing.","The Code Newbie podcast helps when I have imposter syndrome or want to learn something new on my commute and has enjoyable, useful content. I appreciate that. I just wanted to say thank you for sharing.","I will need the flight and/or hotel expenses covered. It may be covered by work, but it is a process and not guaranteed. ",,D,Workshop,"I will either provide the website design or walk the attendees through coding a website, time permitting. We will then walk through and pair program turning the website into the required components of a WordPress theme and 1-2 plugins. I would like to have them publish to free hosting so they can proudly share what they were able to do. The plan is to provide documentation as well.","For this topic, I will be covering the anatomy of a website (HTML, CSS, JavaScript) to ensure understanding. There will be a brief discussion about WordPress, its purpose and its influence. This will be followed with the required components of a WordPress theme and how to complete and install a theme. We will then code and debug the required components and publish the results.","We will need a projector screen or TV and proper connections to show information related to the workshop and code as we work through the workshop. We will also need a source of power for attendees laptops. If you have any recommendations or a sponsor who provides free hosting, that would be helpful. Otherwise, I will have an option for attendees.","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Natosha Sanders,Natosha Sanders,nsanders@coderfoundry.com,Director of Job PLacement services at Coder Foundry. 17 years as a third-party recruiter aka headhunter. Friendly and a pretty good speaker.,https://www.linkedin.com/in/natosha-sanders-13910550/,,female,White,,North Carolina,"North Carolina, born and raised. I've helped people from all walks of life start their Software Development careers. My daughter went from single mom, hairdresser to Web Developer. I was also a single mother before getting married. I have a deep passion for helping people reach their career goals. ",Other,"I know the business landscape of technology, but I do not code",Other,none,Career/Personal Branding,,"W042: How to Know, Like, and Trust Non-Technical Tech Recruiters ",,,"The developer community ""Dev Rant"" likes to complain about two things - Project Managers and Tech Recruiters.  I want to help new developers understand the work of a Tech Recruters, especially non-technical folks like myself, so they can quickly land their first job in the industry.",,,,,I've been a recruiter for 17 years and I'm less than 40 years old. This is my life's work,,flight and hotel,,D,Workshop,Attendees will make a cold call email or script that will help them get their foot in the door with a recruiter - even BEFORE they're ready to demo example projects. ,"I plan to explain how a third-party recruiter manages her day. For example, a recruiter has to present X number of viable candiates for every job. That means sometimes poor fit canddiates will be submitted, which annoys",Paper and pencils,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Eduardo Mendes Luttner,Eduardo Mendes Luttner,eduardo.luttner@toptal.com,"With over fifteen years of professional software developer background, Eduardo has the experience and skills to fulfill both data science and data engineering roles. He greatly enjoys using machine learning and analytics to help businesses take advantage of their data.",linkedin.com/in/luttner,eluttner,male,White,,Brazil,I have presented this workshop 2 times at the university of colorado. I have done a few presentations for a software I have developed for the construction industry in Brazil,"Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,"CS degree,Online learning platforms,Other",Electrical engineering,"Creative Coding (cool, artsy things you can make with code!)",,W043: Lean Support Desk Simulator ,,,Simulate a support desk where first we have a reasonable broken process. We run the process (like a board game). I explain about lean and they fix the process. They will be able to delivery as expected after their modifications.,,,,,I have been working with software engineering for abou 15 years. I love to design a software development process and do consulting on the area. I also like this workshop a lot.,"I am sure people will have fun and talk about the workshop later. It is fun and inclusive, everyone participates.

","My costs to travel from Brazil are around $3,000, but if that is too large an amount, please tell me what you are prepared to offer and I will ask my company if they can help support me.",,D,Workshop,"Each attendee will have a role in the support desk simulator, like programmer, tester, business analyst, client, end user. 

Each role has a set of instructions. They will me moving the incident and support tickets as specified in their roles.","This workshop aim to let people think lean. Usually software development processes require a lot of things that are useless for the end user/client.

The idea is that after the workshop, the attendees will rethink how they produce software by applying lean concepts.

For example, a software process may require the programmers to fill out a spreadsheet with their daily activities. This may look reasonable, but for the client is completely useless. 

Usually companies spend a lot of time (over 50%) of the programmers with tasks that do not bring value to the client.","I have all the material. I would require a room with tables set in a ""U"" layout.

the base of the ""U"" must have place for 4 people.

Each side of the ""U"" must have place for at least 5 people.

Also a projector to a wall at the open side of the ""U"" shape","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Hashim Warren,Hashim Warren,info@coderfoundry.com,Tech investor and founder.  ,https://www.linkedin.com/in/bobbydavisjr/,https://twitter.com/ctBobbyDavis,male,White,,North Carolina,"Created and invested in Core Techs, Advanced Fraud Solutions, and Coder Foundry, and non-tech busineses. ",Other,,CS degree,,Technical Interviews,,W044: 3 Projects that Will Help You Impress Hiring Managers,,,Aspiring devs are confused about which projects they should use to learn to code and then win a job. I will walk them through the what and why of  projects that will get them a job.,,,,,I have hired dozens of developers over my 20+ year career. And I've run a coding bootcamp for the last 5 years.,,none,,D,Workshop,"Attendees will be given a professional SRS for a bug tracker. They will walk through creating the models, views, and controllers for the bug tracker.

This project is designed to gain instant recognition from any developer. Hiring managers know how bug trackers should work, and will ask high quality questions.

Also bug trackers can be simple for novice coders, or feature rich for more advanced coders.","At Coder Foundry we had to figure out which projects would both help students learn and give them the best shot possible at getting a job. We didn't like the ""fun"" projects other courses were teaching, because as an employer myself, I knew that I would be more impressed by seeing a project that is close to what my teams are building.",Computer,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Jennifer Wadella,Jennifer Wadella,jennifer.wadella@gmail.com,"Jennifer Wadella has been writing code since before she realized it was a credible career path. She currently works as a JavaScript Consultant at Bitovi and loves building performant web applications, speaking at technical conferences, and brewing kombucha. Jennifer is an active member of the KC tech community and the founder of Kansas City Women in Technology(KCWiT), an organization aimed at growing the number of women in technology careers in Kansas City. She is the PubConf Sydney 2018 Champion, a Silicon Prairie Champion Award Nominee, Rising Trendsetter STEMMy award-winner, and is apparently Missouri's Coolest Woman according to Pure Wow.",,likeOMGitsFEDAY,female,White,,"Kansas City, MO",I'm a woman in tech who's built a women in tech org in my local community to better support women in their journeys. I spend a lot of time listening to their stories and figuring out the best ways to provide content and assistance. ,Employed as a full-time developer for over 3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)""","self-taught, school of google and stack overflow ;)",Career/Personal Branding,,W045: Building Blazing Fast Super Performant Static Sites with Gatsby JS,,,"Teach Gatsby(with a little React and GraphQL), web performance, accessibility, and ways to test for these, with a finished personal website as the outcome!",,,,,"I really enjoyed building my site in Gatsby, I think it offers easy pathways for learning - like those who haven't used React or GraphQL before. ","I'm an experienced speaker, trainer, and workshop giver. I love helping people in their tech journeys!",I will need flight + hotel covered. ,,D,Workshop,website/personal blog. ,"This workshop is your chance to update your personal website, get a blog going, and blow people's minds with your green Lighthouse scores while serving brilliant content. 

Gatsby.js is modern static site generator for React with performance in mind. In this workshop we'll walk through spinning up a new blog, build out custom data, dabble in GraphQL, explore performance audit tools like Lighthouse and WebPageTest, and ultimately render and launch a wonderfully optimized and performant site. Are you ready to get your JAMstack on?","wifi-enabled computers, ability to install any dev tools(IDE, command line, Node & NPM) and any other ","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Stephanie Szeto,Stephanie Szeto,stephaniexszeto@gmail.com,"Stephanie Szeto manages large-scale programs in Developer Infrastructure at Facebook, where she builds products, services, infra that enable Facebook developers to be among the most productive in the world. She spends her time thinking about organizational health, cultural change in large organizations, and helping people maximize their potential at work. In her free time, she enjoys devising frameworks to think about life, making spreadsheets, and organizing things.",,,female,Asian / Pacific Islander,,San Francisco,"I studied Computer Science in college after initially thinking I was going to get a triple major in Economics, Business Administration, and Statistics. As I was getting my formal education, I also did a number of separate technical workshops and programs, including Railsbridge (extracurricular workshops to learn how to make web apps with Ruby on Rails), and CodePath (extracurricular mobile development program where I learned iOS). I've always been at the intersection of technical and business and have a very interdisciplinary perspective of the world. ","Casually code, but coding is not the core part of my profession",,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",In-person bootcamp",,Career/Personal Branding,,W046: Driving 10x Scale: Amplifying Others Through Coaching,,,"I want attendees to come away from this workshop with a new tangible skill (coaching) that they can add to their leadership toolbox. Coaching differs from problem-solving and mentoring (which we're generally much more familiar with), and is a separate skill that can be developed and honed. I plan on providing the audience with an actionable framework and set of specific questions that they can use to coach their direct reports, partners, team members, peers. 

Interpersonal skills are invaluable for being successful, particularly in work environments. We tend to focus a lot on the hard technical skills, and not nearly enough on the soft - if you want to go far, you need to be able to have both. As folks collaborate with other colleagues in the future, I want them to have this skill in their repertoire if they encounter someone that's working at less than their potential. ",,,,,"I've mentored and coached a number of folks in my career and wanted to pass along the framework that I use, which I initially learned from a leadership training program. I'm passionate about empowering others, and this is another version of that. ",,"I may leave my job by the time the conference rolls around in July, so there's a possibility that I'll have to self-fund this trip - if that ends up being the case, it'd be super helpful to get travel and lodging assistance!",,E,Workshop,"Attendees will walk away with that actionable framework, set of specific questions, and most importantly - practice in using them, which we'll have plenty of in this workshop. 

As far as the breakdown of time goes: 
Coaching introduction + framework
Coaching demonstration / run-through (10 minutes)

Coaching practice (10 minutes each) 
Additional coaching guidelines
Coaching demonstration / run-through (10 minutes)
Coaching practice (10 minutes each)
Summary","As folks move up in seniority, the need to work with others becomes more necessary and prevalent. These groups include direct reports, partners on cross-functional teams, and fellow team members. As much as we all wish for smooth collaborations where everyone knows exactly what they need to do and how they need to do it, that is unfortunately far from reality, where interpersonal issues are plentiful and suboptimal performance is common. As such, coaching becomes an incredibly important skill to have in one’s arsenal and toolbox when it comes to working with others.

The session will begin with a survey of frameworks for peer-to-peer and junior-to-senior interactions: coaching, mentoring, and problem-solving. With the abundance of leadership techniques and approaches out there, it is important to understand and differentiate between different approaches and tactics that one can leverage when working with others. 

Coaching is a technique used to help an individual through a specific challenge. That challenge is commonly performance or behavior-based, but can run a large gamut of possibilities. As such, coaching engagements are typically much more targeted and short-term, as the coach and coachee work through a given scenario. 

Coaching stands in direct contrast to mentoring and problem-solving, two tactics that are related and commonly conflated together with coaching, but that have their own differences:
- Mentoring is generally more focused around an individual’s development and career growth, as opposed to any one specific situation. As such, mentoring entails longer-term engagements and tends to cover more general topics.
- Problem-solving is when one diagnoses someone else’s problem and provides them with specific instructions on how to rectify their situation. This is a common pitfall that many fall into when trying to coach. 

Relative to problem solving, coaching is about guiding someone through a thought process to (1) understand their situation in a different light, and (2) help them arrive at a set of conclusions and set of actions to carry out. In other words, it is the difference between giving someone a fish and teaching them how to fish. Coaching should be a bidirectional conversation with both parties on equal footing, and not a hierarchical dictate with directives from the coach.",N/A,"""Mon, July 22"",""Tue, July 23""",I am only able to give my workshop once.,,,
Guedis Cardenas,Guedis Cardenas,guedis.sc@gmail.com,"As a software developer at iCIMS, a leading provider of cloud-based talent acquisition solutions, Guedis Cardenas helps build a better recruiting experience for both job seekers and employers. 

Passionate about the U.N.’s Sustainable Development Goals, Guedis is an advocate for tech inclusivity, leveraging technology for positive impact, and making mentorship more accessible to all.",https://linkedin.com/in/guedis,https://twitter.com/holaguedis,Male,Hispanic or Latino,,"Holmdel, NJ","Raised in humble beginnings, as Latinx, when I felt underserved and underprepared, the community helped me. This gratitude fuels my compassion and purpose. As such, I speak at local events like Girls Who Code, Hour of Code and mentor those new to tech.

I understand why technology must reflect its population. Let’s ponder on Ada Lovelace. Luis von Ahn. Grace Hopper. Anita Borg. Alan Turing. Pioneers who were underrepresented because of their gender, sexual preference or race. Turing said it best, “Sometimes it’s the very people no one imagines anything of, who do the things no one can imagine.” By empowering an individual, we empower a family, community, and generation. Putting technology into the hands of the people, for the people, for a common good. It doesn’t matter where they come from, who they are, or what they’ve done. Do they love technology? Curious about its potential? Then by all means, we must support them.

As a developer, I love what I do. As such, I champion for those also wanting to do the same. The joy of teaching logic to a six year old through a click-and-drag Big Hero Six game on Code.org. Using MIT’s Scratch to teach an eleven year old loops. Sharing the wonders of IDE’s and the CLI to a thirty year old. Their faces of curiosity galvanize me. I actively mentor those switching/entering software development careers. I strike up conversations with whoever wants to talk. Wrapping up with a call to action that if they know anyone interested in STEAM, I’m happy to chat and help. 

I’m a believer that a candle loses nothing by lighting another candle. This event will fuel my flame of knowledge and kindle new relationships. Working side by side, we fill our communities with warm solidarity, a blazing spirit for innovation, and a passion to move forward together.",Employed as a full-time developer for over 3 years,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",In-person bootcamp,CS degree,Online learning platforms",,Career/Personal Branding,,"W047: Your Brand is your relationships, here's how to build them",,,"Debunk myths
- Don't network, instead relationship build
- Whether you consider yourself an ""introvert"", ""extrovert"", ""ambivert,"" or think you're shy or not outgoing enough, we'll examine how those are not requirements. Instead it's about a genuine curiosity to learn about someone else and see how you can help each other out

Whom to reach out to
- Where to find them, digital (LinkedIn, Twitter, dev.to, social media) vs physical (meetups, conferences, company events)
- Effectively use tools to refine searches
- How to evaluate warm vs cold engagements

How to reach out to people
- When to use LinkedIn, vs Twitter vs email vs phone, etc
- What phrasing you want to use depending on the platform
- Examine samples that are likely to get a response versus which ones may not
- What times are best depending on the type of conversation you hope to have
- Examine templates catered towards different types of contacts
- Tips on scheduling the engagement

Deciding what type of conversation want
- Is it for a potential job, informational, knowledge-based or a general, let's get to know one another

Having the conversation/engagement
- When to use phone, vs email, vs meeting at a physical location
- What are go-to conversation starters
- What are the things to talk about and share
- What types of questions are effective
- What if conversation is not going as planned
- How to personalize the conversation to make it more natural, organic, and dynamic
- Things/topics to avoid
- We'll do live practice across different settings, phone, meetup, conference, etc.

Importance of following up
- Why is it crucial to follow-up and how to best do it

Maintaining relationships
- How do you maintain and develop these relationships
- When and how often to follow-up

Live Practice Exercises
- We will also do a live-crowd message, collectively reaching out to someone, while explaining the trade-offs, techniques, strategies in crafting the message
- We'll do live practice partner sessions emulating different scenarios and settings, you meet someone at a cafe, at a meetup, during a conference, and more
- Share the overall techniques, strategies useful with relationship building
- Abundant time for Q&A throughout workshope as well!

",,,,,"I advocate that strangers are just friends we have yet to know. Awarded for my community building efforts, I enjoy helping others intentionally foster relationships. Together, we're stronger!",,,,E,Workshop,"Using the steps above for the goal, attendees will have sent out at least one invitation and have practiced with partners in mocked settings, ranging from meetups, to conferences, to cafes. They will improve their confidence with mocked conversations in a welcoming, friendly, and helpful environment. 

Towards the end, we'll do a quick batch of speed relationship building in which attendees will have introduced and exchanged contact information (if choose to share, optional) in order to keep fostering those relationships and later make new ones.","When you think about your brand, your relationships are important: who you know, how you know them, and how you can mutually help one another.

Whether you are looking for your first role, your third job, mentors, or likeminded people to share and collaborate with, relationships are important. Maybe you're at a meetup, a conference, your company, school, or even at a cafe, the people you meet could lead to new wonderful adventures and insights. Maybe someone you know is looking for help and you know just the right person that can help them. 

The relationships you foster and grow can lead to new career opportunities, experiences, knowledge, talents, and ways of thinking -- all crucial growth. Eventually, as you build out your relationships, you start introducing and connecting others, leading to even more splendid opportunities.  

Instead of the term ""networking"", we will focus on ""relationship-building."" It is not about what can you get from someone else, but instead, how can you mutually and beneficially help each other. 

In this workshop, we will go through the entire pipeline, ranging from how to find people to reach out to, how to kickstart the conversation, what to talk about, and how maintain and develop that relationship. 

We'll discuss the tools, templates, scripts, techniques, and strategies. We'll do live-practice scenarios in which I will explaining the assumptions and the trade-offs of different approaches. By the end, you'll be able to personalize the strategies to continue fostering mutually beneficial relationships. ","- Laptop
- Scratch paper, writing utencil","""Tue, July 23"",""Mon, July 22""",I am willing to give my workshop two times in a row.,,,
ADEDAPO Adedamola,ADEDAPO Adedamola,dexbeulah@gmail.com,"I am undergraduate in Obafemi Awolowo University, studying Electronic and Electrical Engineering. I mentor, tutor at boot-camps and I am a Backend engineer and penetration tester. My primary programming language is python.",,@dexbeulah_,Male,Black or African American,,Nigeria,I have never spoken in a tech before. This would be my chance if I am given the chance. ,Currently looking for my first full-time developer role,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Security,,W048: Fun of  galactic Network testing.,,,"The goal of this workshop is to stir attendees' interest in cyber-security by making them understand  web securities, development best practises and web projects security testing. Attendees would leave with knowledge of exploitable security flaws and scoop of skills conduct vulnerability testing using tools like ""Metasploit"". ",,,,,"Four years ago, I became very curious about the concept of internet, since then, I have learnt pretty interesting things about the internet, for example; how it started with one man's concept of network connection, how it has change humans' life by bridging a lot of gaps like distance, sharing of files despite being continents apart. On the flip side, I also learnt the internet is not 100% safe, and that every good action to connect with someone at the other end of the communication process can be reverse engineered by hacker for selfish reasons, then I rededicated my interest to knowing more.  I became IBM cybersecurity explorer four years, and I continued to take courses online to learn more these security flaws and how they maybe mitigated.  I currently work as a team lead of a small group of web penetration testers. As a result, I believe I am the right person to conduct this workshop.",None,"Flight: $931 (avg. price over the last 2 weeks with 13% increase and 3% decrease). 
Hotel: $48 per Night.

I would not mind if I have to do this over Skype or any other video conferencing app. Thanks!",,E,Workshop,"Attendees would be scanning websites specially built for web penetration testing for vulnerabilities, and proffering solutions on how they could have prevent each vulnerability.

The content of the workshop would be largely based on this posts: 

https://resources.infosecinstitute.com/vulnerability-scanning-metasploit-part-2/#gref

https://www.softwaretestinghelp.com/getting-started-with-web-application-penetration-testing/",I will be giving a crash course on command line and the internet functionality.,"Whiteboard, temporary marker, scratch paper, and google cardboard.","""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Žan Anderle,Žan Anderle,zan.anderle@gmail.com,"I am a consultant and a full stack web engineer with a passion for user experience. I'm most proficient in Django, Python, and Angular. I used to work in a startup, and am thankful that I can now work independently, and that I'm in charge of my own schedule and able to prioritize my family above my work.",https://www.linkedin.com/in/žan-anderle-1766227a/,@z_anderle,male,White,,Slovenia,"I have background in mechanical engineering, but moved on to get Master's in Computer Science after realizing that coding is what I love doing. When I'm not coding, I love spending time with my fiancée and our toddler, geek out with board games or play the trumpet in a big band. I love to code and could spend all my time working and researching, but I try to maintain a good balance between work and personal time.","Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Front-end,,W049: Designing Good User Experience,,,"Designing great user experience (UX) requires a lot of knowledge and a lot of hard work. Designing pretty good UX? That is actually quite easy. As developers we can't always expect to have UX designers on team. But you don’t have to be a UX designer to get a hang of it. Any developer, regardless of their experience, can benefit from learning about basics of UX design. And the good news is that even just the basics will get you very far.

User experience is an important aspect of any application/website/interface, no matter the size. Good design directly affects whether a user gets the most out of the application or not. Bad design on the other hand hampers their ability to use the application, makes them feel they are not in control and leads to frustration. Thinking about and designing user experience should be a part of any software development process. Having the basics of UX development under your belt will let you do that effectively.",,,,,"I've always been fascinated by UX. I took some courses on Coursera out of my own curiosity. Gradually, I started using more and more of what I've been learning at my job in a startup (since we didn't have a dedicated person for UX). It was amazing to see the positive impact this had on our users, and in turn on our business. During this time I realized how important it is for developers to have these skills because more often than not, there isn't a UX person/team around to do it for you. And it's such a crucial skill for any app. So I decided to prepare a workshop out of those lessons tailored for developers. And it's been well received each time so far. ","I've given this workshop twice already, and it's been a success on both occasions.
The first was DjangoConUS 2016, and the second was DjangoCon Europe 2017.","I would require at least my flight to be covered (which usually goes around $900 or so), but preferably also the hotel for the time of the conference.",,E,Workshop,"We will try out some common UX development techniques hands-on. You'll be able to bring your own idea/project to the table or work on some imaginary app. Going through these methods will give you the tools to design user experience of your next app/website/interface, or improve an existing one. 
We’ll go over the following techniques: 

* Story boards
* Need finding
* Prototyping
* User testing
* Evaluating (using heuristics)","Mainly why UX is important, some background in terms of what UX is, how it relates to empathy, and how I got started with it and found its importance.","'- Scratch paper
- Sharpies
- Scissors (a few per group is fine)
- Whiteboard would be helpful, but not necessary","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Jonathan Powell,Jonathan Powell,powell.jonj@gmail.com,"I'm currently a junior software engineer at BlackRock and graduated from Brown University with a computer science degree in 2018. When I was a student spent most of my time promoting D&I in tech and supporting underrepresented students in the Comp. Sci. department. Today, I'm focusing on becoming a better engineer by studying design patterns, clean code, and how to write maintainable software.",https://www.linkedin.com/in/jonathan-powell-15ba35ab/,@itsjjpowell,male,Black or African American,,New York City,"I always knew I was interested in computers since I started playing video games when I was young, but it wasn't until college that I first dove into computer science. When I started I was out my element, and being 1 in just a handful of black students studying computer science galvanized me and my friends to not only support each other but create a community in our computer science department to support other students. The concept of giving back is what drove me in that direction and I've found that teaching, mentoring, and supporting other students was the best way for me to sharpen my own understanding of everything I've learned.

Since then, I've always worked to put myself and others in a position to succeed. And though tech and computer science isn't only about jobs, earning a position as an engineer can radically change one's life and I found this to be true not only for myself, but especially for first-generation college students who earned amazing internships.

I truly believe there's room for everyone in tech, and that anyone can make an impact, but I also understand the institutional barriers facing Black, Latinx, and Indigenous people in tech. At the end of the day, technical interviews are (unfortunately) a mainstay of the interview process so I started holding twice a week mock interviews to help prep other minority students for technical interviews - and it worked!

I want to continue to support people, and especially underrepresented folks in their journeys.  I hope this workshop will be one way to help people reach their goals.",Employed as a full-time developer for less than a year,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Technical Interviews,,W050: Follow the Unvisited  Road: Graph Algorithms and Technical Interviews,,,"The goal of my workshop would be to prepare attendees to tackle graph questions in technical interviews. Graph questions are some of the toughest to answer in my opinion.

I want to cover depth first search, breadth first search, and Dijkstra's algorithm. I want to point out the similarities between the algorithms and how to go from one to another. Additionally, I want to point out keywords that can suggest which algorithm to use.

I see this workshop adding value because I had trouble recognizing graph problems when I first started interviewing and also understanding how to use the common dfs, bfs, and dijkstra's to solve different questions.



",,,,,I'm the right person because I used to despise graph questions and spent a ton of time finding resources to improve my understanding. I'm not perfect at solving these questions but I have found there's patterns to facilitate solving the problem. I also wrote a few articles covering graph algorithms on my medium page.,"I also wrote two articles covering representing graphs for technical interviews. The articles use Java, because that's the language I use when I have a technical interview.
https://medium.com/@jjpowell/bare-bones-code-representing-graphs-c8cfd63d319c

https://medium.com/@jjpowell/bare-bones-code-when-a-graph-is-a-grid-eed1c4806818",I will be traveling from NYC so I don't expect any additional travel needs.,,E,Workshop,"The attendees will work through a collection of two or 3 graphs problems from a technical interview. 

The workshop will start with an overview graphs as a data structure. What is a graph, where are graphs used, and when to know that a graph may be helpful. 

Then we'll discuss how there's 3 common graph algorithms: Depth-First Search, Breadth-First Search and Dijkstra's algorithm. We will write the code for each of these algorithms and talk about how they go through a graph.

We'll then talk about keywords in question prompts that a) suggest the problem is a graph problem and b) which graph algorithm to use.

We'll then attempt to solve 3 graph questions in the remaining time. Each one will require using either depth-first search, breadth-first search, or dijkstra's algorithm.","I would start with some background related to graphs with a small introduction and then an example of how google maps uses a graph to help find a path from one place to another:

Graphs are one of the most common data structures used to represent relationships. Social networks, electrical grids, google maps are just a few examples, but it turns out other data structures like tree's and linked lists can be considered ""special cases"" of graphs. Given how wide spread graphs are in the real world, it's no wonder that they turn up as technical interview questions often. 

Graphs solve problems like path finding (Google Maps, Uber), Minimizing costs (electrical grid), and building AI bots (pac man). 

I'd then breakdown an example of a weighted graph using google maps, and an example of an unweighted graph representing a social network.

Afterwards I'd explain that they algorithm you use to move through a graph can help solve different types of questions.","As is I think that whiteboards would be the only other resource we'd need to complete the workshop. Given that it will be technical interview practice, the participants should probably bring a laptop.","""Mon, July 22""",I am willing to give my workshop two times in a row.,,,
Maurice Rogers,Maurice Rogers,hello@mauricerogers.com,Maurice is Belize based Software Consultant who specializes in Process Digitization for medium to large enterprises.  In his free time he loves long chilling out by the sea side enjoying the cool Caribbean breeze. ,https://www.linkedin.com/in/mauricerogers/,@mauricerogersjr,Male,Black or African American,,"Belize, Central America","My goal as a speaker is to be a representative for developers in the Caribbean and Central America, showing them that they can have a voice and their experiences and contributions to the tech ecosystem do matter. ",Employed as a full-time developer for over 3 years,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Other,Intro to mobile development.,W051: App Dev 101 - Building your first hybrid mobile app.,,,"I want developers who are curious about app development but who have not  had the chance to try it yet, to be able to come to the workshop and within the 2.5 hours be able to walk away with their very own mobile app running on their phones.

I've given this presentation before to our local STEM club and it went wonderful. It even gave the students the confidence they needed to enter a coding competition in which they won first place.

That is exactly the type of effect I want it to have on the attendees. I want to show them how accessible mobile app development can be and I want them to have the confidence to go out and build the apps of their dreams.",,,,,I love inspiring people to go out and be the change they wish to see in the world.  I've done it with my STEM students and I want to do it for CodeLand attendees. I want to empower them come up with digital solutions to the problems they are facing.,I love the CodeLand / CodeNewbie team and cant wait to see you folks again.,"Preferably flight and hotel if you can.
If not, then I can cover my flight and would just need help with the hotel stay.",,E,Workshop,"We are gonna make a conference app for the fictional CodeWorld Conf where attendees will be able to rate, comment give feedback on the presentations to the organizers.

In order to fit into the allotted time frame , the application back-end will be provided to them and they will be able to post data and make requests to it.

Applicants will be able to interact with the app and the data in real time.

Below are the steps that the attendees will follow:

Preparation before workshop:
A guide with the necessary commands to complete these steps will be provided 
01 - Download an IDE of their choice. 
       The presenter will use Visual Studio Code  since it is an easily install 
       for most developers.
02 - Install node and command line utilities.
       NodeJS, Ionic and Cordova will need to be installed
03 - Install Platform Tools
       Android Studio for Android Users and Xcode for iOS / Apple users 
04 - (Optional) Clone the project repository
       A repository of the completed application will be available on GitHub
       before the presentation if the attendees wish to go over the application.


During the Workshop:
01 - Introduction
        A brief introduction to the topic at hand and how we're going to tackle it.
        Sketches of the UI and the app flow will be provided to the attendees to 
        serve as a guide to the development.
02 - Getting started
        Setting up the project and creating the UIs and tying in basic navigation.
03 - Back-end Wiring
        Showing them how to move data back and forth between the server
        and the app and getting that data to display in the UI.
04 - Deployment
        Showing them how to get their app running on their personal devices.
05 - Wrap Up and Troubleshooting
        Spend some one-on-one time with the attendees to troubleshoot any 
        issues they may have had along the way.","Its hard to deny that more and more people are engaging with business and each other through mobile apps. Not too long ago it was simply okay for a company to have a responsive website. Those times are changing. Mobile is now a first class platform for content delivery and engagement with users expecting a mobile experience.

By leveraging mobile apps, you'll be able to reach your target market wherever they are in the world. You no longer have to wait until they visit your website.

This workshop will give you a brief introduction to hybrid mobile development. Hybrid Mobile development uses developer's existing knowledge of HTML, CSS and JavaScript and allows them to write performant, cross-platform applications in record time.

By the end of this workshop you will have a fully functioning mobile app running on your phone.","An Apple or Android Phone,
A laptop with Git, Visual Studio Code, NodeJS , Ionic and Cordova installed.
Android Studio for persons with Android phones 
Xcode for persons with iPhones
","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Luisa Morales,Luisa Morales,me@luisam.com,Luisa Morales is a computer science master’s student at Pace University in NYC and an Engineering Fellow at The Mayor’s Office for Economic Opportunity (NYCO). She’s a Lead at Women Who Code NYC and regularly mentors female junior developers as a way of contributing to the growth of women in tech. You can find her on Twitter @luisamariethm.,https://linkedin.com/in/luisamorales/,luisamariethm,female,Hispanic or Latino,,NYC,"I'm a self-taught developer and have been working in industry for roughly 3.5 years. I started off learning backend development but found it very challenging and isolating. While working on a side project I came across front-end and enjoyed the feedback loop more, and found it helped me better understand what was programmatically happening in the background.

I started a computer science masters program in September 2018 because I wanted to give myself the time and space to develop my foundational computer science knowledge and move towards backend development or data engineering. I'm interested in system architecture and data aggregation, which isn't something I was able to pick up through any of my prior roles and was difficult to pick up outside of work while also developing my front-end skills.

I've worked at a development agency, high growth startup, and civic tech/government organization so I've experienced a breadth of company cultures and team dynamics. I've always been interested in information accessibility and through my different work experiences realized how divided companies are in how they tackle (or don't) web accessibility. It's a team effort and requires team buy-in to be done well, and I'm interested in educating new developers on what web accessibility is because it's not something everyone is exposed to, but does play a huge part in who can effectively access the projects we build.",Employed as a full-time developer for over 3 years,,"Other,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",Currently in a computer science masters program (1st year),Accessibility,,W052: Don’t alienate potential users - Build with web accessibility in mind,,,"The goal is twofold: (1) for attendees to walk away with increased empathy for their potential userbase, and (2) gain exposure to the different ways in which they can build (and think about) web accessibility. Companies are increasingly adopting accessibility into their product roadmaps because they legally have to (as a federal, state, or local government website) or they’re concerned about being sued [1]. As a front-end developer, knowledge about web accessibility practices will set your apart from similar candidates. 


[1] https://www.searchenginejournal.com/website-accessibility-law/285199/",,,,,I believe the web is an amazing tool that has the power to profoundly impact a person's development and I want to help foster the practice of working towards a more user-friendly web. I’ve spoken about web accessibility on the podcast Tech Done Right: https://www.techdoneright.io/49 and currently work on web accessibility in my current role as an Engineering Fellow at The Mayor’s Office for Economic Opportunity in NYC.,"I would be happy to co-host this workshop with someone else who is interested in the topic. I am also working on putting together a web accessibility handbook (v0), which I hope to release via GitBook by July and would love to have attendees of the workshop (and the conf) contribute to as a potential open source project if there's interest.",I don't have any travel needs since I'm based in NYC. ,,E,Workshop,"A GitHub repo with a mock website will be created (by me), which attendees will use to work through a series of web accessibility enhancements (guided by me in real time). By the end of the workshop, attendees will have taken a relatively inaccessible website and made it more user friendly, gaining practical experience and being able to implement similar enhancements to their own projects. If attendees haven't worked with GitHub previously, they will also gain that experience. 

Throughout the workshop attendees will: 
- Be prompted to test the mock website using a screen reader, NVDA (Windows) or Voiceover (Mac), so they better understand what it is like to navigate a website as a visually impaired user.
- Be prompted to test the mock website using keyboard-only commands.
- Be guided through testing the mock website against color contrast tools, for responsive (mobile/desktop accessibility), and a brief overview of accessibility in terms of network connectivity and asset/resource load times. 
- Get time (at the end of each of the steps below or maybe after all areas are explored) to discuss what they found difficult while testing, which areas they believe should be improved, and ideate how it could be implemented. 
- Get exposed to common web accessibility practices and jointly implement these enhancements to the mock website. (Attendees will be expected to follow along as I made code changes and questions will be answered throughout as the come up). 

As part of the workshop, we will also cover: 
- Using GitHub and creating an account for anyone who is unfamiliar with it, and walk through forking a GitHub repo to develop locally. 
- Setting up a website to run on your machine locally (likely using a tool like MAMP). ","As background information I will cover: 
- what accessibility is in general and why it matters that we build with it in mind,
- the different areas included under web accessibility,
- the areas we will focus on during the workshop, 
- the project setup steps (using GitHub to fork the repo, what the mock repo contains, developing locally)","Projector, sound system/speaker, a place for attendees to place their laptops (ideally desk setup), outlets and extension cables","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Žan Anderle,Žan Anderle,zan.anderle@gmail.com,Same as my other submission.,,,male,White,,Slovenia,Same as my other submission.,"Employed in a senior code-related role (CTO, director of engineering, lead dev, etc.)",,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",CS degree",,JavaScript,,W053: Build a data visualization with d3.js,,,"Learn how to create kickass data visualizations from scratch. Having the ability to take a dataset and visualize it is powerful. And a lot of fun.

And no, we're not going to make bar charts. I'm of course talking about amazing, colorful, interactive visualizations that let you explore the dataset in a way that would not be possible otherwise.",,,,,I love creating stuff with D3.js. It's such an amazing and powerful tool. Being able to visualize any kind of dataset is incredibly important and powerful in this day and age. The project I'm most proud of is Louis Armstrong's interactive discography: http://musingsonmusic.com/2015/08/29/Louis-Armstrong-Discography/,"I have never given this workshop, so some details are not yet defined. The main one being -- which dataset would we use in the workshop. It would have to be something simple enough, but also way more interesting than just a simple bar chart. And it would have to be relevant to the attendees.

The other thing is -- I would definitely test-run the workshop before giving it at codeland, to make sure that the amount of the material is just right.",Same as my other submission.,,E,Workshop,"We will take a simple dataset and create a web-based visualization out of it using d3.js. We'll make it interactive and each attendee will have the opportunity to add their own custom features to it. The steps we'll go through:
1. What is SVG and how can we use it in the browser.
2. What is D3.js and why do we need it?
3. Let's create some SVG shapes with D3.js
4. Let's use the dataset and create a simple visualization out of it
5. Make it pretty! (Add some styling to it)
6. Let's make it interactive (""when I click an element, I want to get more details"")
7. Let's add animations to the visualization
8. Let's add more stuff -- opportunity for your own ideas.","We will go over some data visualization examples, and show why they are helpful. We will also explain some data visualization theory and then move on to explain the basics of doing a web-based visualization using d3.js and SVG.","Computer with internet access (we could also make it work without the internet access, if needed)","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Jason Twichell,Jason Twichell,jtwichell@coderfoundry.com,"As a Full-stack .Net Instructor I regularly lead groups of students on topics including C#, ASP.Net MVC, Web API, Xamarin, LINQ, SQL, JavaScript and Bootstrap. As a Sr. Developer and Technical Lead I have delivered value through the identification and adoption of emergent technology, monitoring and managing application performance, mentoring team members, performing code reviews and participating in panel discussions.",https://www.linkedin.com/in/jasontwichell,,Male,White,,"High Point, NC","I hold a Master’s degree from UNC Greensboro’s Bryan School of Business and a Bachelor’s degree from The University at Buffalo’s Computer Science and Engineering Department.

I have over 15 years of experience developing enterprise applications with the Microsoft technology stack for notable companies such as WebMD and SunGard. My professional background includes roles such as Lead Developer, Consultant, Application Performance Manager, Scrum Master and most recently Instructor.",Other,Lead Instructor,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms,In-person bootcamp",,New tech,,W054: Blazor - The bleeding edge of .Net,,,"The goal of my workshop is to spread the word about Blazor, the latest experimental project from Microsoft that ships c# into the browser to run on Web Assembly.  

Participants will walk away with a functional multi-page client-side Blazor application and the associated tooling that comes along with it including;
 - Visual Studio 2019 preview 4 
 - .Net Core 3 preview 3
 - Blazor 0.9.0 
 - Blazor project templates

The application is broken down into several small exercises that cover a range of topics including but not limited to:

 - One-way and two-way data binding
 - Custom routing
 - Component nesting
 - Dependency injection - API / Database interaction
 - JavaScript Interop

Client side C# is a game changer and could be a powerful tool in the tool belt of any .Net developer. Just like Xamarin Forms has opened up the world of cross platform mobile development, Blazor promises a future with less reliance on JavaScript opening up the front end!",,,,,I feel I am a good fit because most of my day is spent teaching technology to students and this technology has the potential to be disruptive. Exploration of emergent technologies has long been a passion of mine and Blazor is worthy of as deep a dive as Web Assembly will allow. ,,,,E,Workshop,"Participants will be creating a client side C# application using Visual Studio 2019, .Net Core 3.0 and the experimental Blazor framework.

There are several tools that need to be acquired in order to properly create a Blazor application including;


- Visual Studio 2019 preview 4
- .Net Core 3 preview 3- Blazor 0.9.0

- Blazor project templates

In order to complete the workshop, attendees will be required to create several new Razor views. Each view will help illustrate a specific piece of functionality such as;

- One-way and two-way data binding
- Component nesting
- Dependency injection
- API / Database interaction
- Calling JavaScript from C# 
- Calling C# from JavaScript and more...","Important background information for this topic includes but is not limited to;

 - What is Blazor
 - The history of the Blazor project
 - What problems does Blazor attempt to solve
 - Who is involved in the project and when will it be production ready","Visual Studio 2019 preview 4
.Net Core 3.0 preview 3
Blazor 0.9.0
Latest Blazor project templates","""Tue, July 23"",""Mon, July 22""",I am willing to give my workshop two times in a row.,,,
Norah Klintberg Sakal,Norah Klintberg Sakal,norah.klintberg.sakal@gmail.com,"I'm a 30-year-old self-taught data scientist and entrepreneur from Sweden living in San Francisco. I'm currently bootstrapping a startup where I am applying artificial intelligence to help cancer researchers understand how their novel drugs are affecting their cancer and stem cells. My passion and mission are to accelerate the development of new technologies that will help researchers and doctors to cure, prevent and manage diseases.",https://www.linkedin.com/in/norah-klintberg-sakal/,@norahsakal,Cis female,Other,"Other; born in Ukraine, by a Russian mother and a Ugandan father. Raised in Sweden. Skin tone says mixed black.",San Francisco,"I'm passionate about encouraging people from all background especially underrepresented groups. My very first conference talk was a lightning talk at Twitter (San Francisco) last year that sparked me to send talk applications to various Python conferences around the world. 

I am deeply passionate about (obsessed with) artificial intelligence and showing its practical abilities on day-to-day problems. So far I have been given the honor of giving encouraging and inspiring conference talks about AI and deep learning at a number of Python conferences; PyConAU in Sydney (Australia), PyConCA in Toronto (Canada), Swetugg in Stockholm (Sweden), PyCaribbean in Santo Domingo (Dominican Republic) and most recently at PyCascades in Seattle. I'm fortunate and happy to have received amazing feedback (here is some feedback from previous talks; https://s3.amazonaws.com/norah-klintberg-sakal-feedback/norah_klintberg_sakal_feedback.001.jpeg) but I'm still learning, and every piece of feedback helping me improve my future talks and public speaking skills.

My most recent talk was at PyCascades in Seattle earlier this spring; the live stream video can be seen here; https://www.youtube.com/watch?v=hAnCiTpxXPg&feature=youtu.be&t=20038",Other,"Self-taught data scientist, started with deep learning 2 years ago and I'm currently bootstrapping my own deep learning startup within cancer research","Online learning platforms,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Other",Side projects and previous startups,Other,Practical artificial intelligence beginner workshop,W055: Guide to your own artificial intelligence application in 3 easy steps,,,"How difficult is it to build an own intelligent application? When you hear “artificial intelligence”, you might think of complex solutions as self-driving cars, autonomous drones, and robots or smart assistants as Alexa or Siri - but it doesn’t have to be that complex. You can build a powerful image classification model within a topic that inspires and interests you - with 3 easy steps. First, find a topic that interests you; it can be something that inspires you, excites you or a super simple day-to-day problem you’re facing. Which of your skills are matching your interests and other topics that excite you? Use that skill set to the next step, which is creating your own data and lastly training your own algorithm.",,,,,"I'm a 30-year-old self-taught data scientist and entrepreneur from Sweden living in San Francisco. I'm currently bootstrapping a startup where I am applying artificial intelligence to help cancer researchers understand how their novel drugs are affecting their cancer and stem cells. My passion and mission are to accelerate the development of new technologies that will help researchers and doctors to cure, prevent and manage diseases.   For me, it all started 2 years ago; I was doing my regular makeup routine in the morning and searched for a ""makeup tutorial"" on YouTube to get some inspiration. The only problem was that I got more than 30 million results, how would I possibly know which one of these 30 million videos that would show me makeup techniques that would suit my particular face and especially, my facial features? Being passionate about the possibilities of AI, I immediately thought; ""this MUST be solvable using AI"". So without any prior deep learning knowledge, I  built an image classification model in Python which can recognize your eye shape with convolutional neural networks and by that recommend different makeup styles that suits your particular facial features.   Further down the line, I also discovered that beauty is a $400 billion industry, that indicates that makeup plays a significant part in people’s lives. How do you know what makeup style will look as good on you as it does on all the YouTubers? The very first model I built is trained on various images that I annotated myself with open and available data. The algorithm is built using very simple convolutional neural networks with a pre-trained model (VGG16) fine-tuned on my annotated data. The results are a model with ~90% accuracy so I decided to take it further and built an app that can inspire others.   This is how the finalized app works; You just snap a photo with your webcam or smartphone at the web app, and the algorithm tells you which shape you have + suggests makeup styles matching your eye shape to enhances your features. The app itself is built in Flask, a simple Python web server framework, which orchestrates the backend and communicates with the frontend and trained neural network.  After launching the app and having hundreds of people snapping photos of their eyes and getting their most suitable makeup, the most prominent feedback was; ""I have an idea, data and now I'm eager to train an algorithm, but I don't know how."" I was already sharing all my code, both frontend, and backend, in public GitHub repos but I got the urge to build a solution that could be a stepping stone to people curious to training their own AI app within 15 minutes. So I did. In this workshop, we'll walk through the three stages of training a model; 1) idea phase, 2) creating a dataset and lastly 3) training a model, before launching their own application with a frontend I prepared in React.js. The final product of the workshop is an image classification application; with 1) a generated frontend where the attendee can upload an image and 2) a backend where the attendees newly trained model will predict the image class.","The essence of the workshop is to encourage and inspire to implement data science on niches and verticals that aligns with your own interests. The three steps of the workshop consist of first deciding on an interest, passion or day-to-day problem, secondly how to create data based on the interest or experience and lastly training a model. I built this classification model with very little experience, and the emphasis of this workshop is to inform that it is possible to get state of the art results on niches which lack data and that it still exists “low hanging fruits” in numerous verticals. The final product of the workshop, is an image classification application; with 1) a generated frontend where the attendee can upload an image and 2) a backend where the attendees newly trained model will predict the image class.","I'm currently bootstrapping my own startup, so I'm funding my own trip; therefore are travel grants much appreciated, but I understand that it is not always possible. I'm beyond excited to join conferences, and I've mostly been funding all my trips myself.",,E,Workshop,"The scope of the workshop is to come up with an idea, create a dataset and finally train an own algorithm. 
The three steps of the workshop consist of first deciding on an interest, passion or day-to-day problem, secondly how to create data based on the interest or experience and lastly training a model. I built my first algorithm with minimal experience, and the emphasis of this workshop is to show that it is possible to get state of the art results on niches which lack data and that it still exists “low hanging fruits” in numerous verticals.

First part - The idea phase
The workshop starts by showing the wide capabilities of artificial intelligence; what does a furniture add generation algorithm have in common with cancer research? Can an algorithm write gardening work proposals out of photos of your garden? I'm beyond passionate about AI and trained various algorithms, stretching from furniture add generation to makeup proposals, to cancer and stem cell research - the first part of the workshop is to widen the narrow perception of deep learning and AI by showing some of the algorithms I've trained. Like this one; I trained a model that writes a compelling add suggestion for your furniture.

Second part - Data, data, data, and some more data
Okay so you have an idea, sprung out of your interest, passion or day-to-day problem - but how do you find data to train your algorithm? I'll show you how you can transform and reannotate existing and open datasets by applying your own expertise. (You might think you need thousands of images, but what do you do when you only have ten images in your dataset?)

Third part - Train your own model within less than 5 minutes
Now you have all the ingredients; an idea, your own dataset and it's time to train your model. I've prepared a network which trains a model and creates an app according to your idea, but what does the neural network actually see in your data? We'll have a look at how a convolutional neural network actually interprets your images; how does an algorithm understand how to interpret images? I've prepared visualizations of what the algorithm actually see while it trains to become an expert of your data. The final product of the workshop is an image classification application; with 1) a generated frontend where the attendee can upload an image and 2) a backend where the attendees newly trained model will predict the image class.","How difficult is it to build yourself an own intelligent application? When you hear “artificial intelligence” you might think of complex solutions as self-driving cars, autonomous drones, and robots or smart assistants as Alexa or Siri - but it doesn’t have to be that complex. You can build a powerful image classification model within a topic that inspires and interests you - with 3 easy steps - and you don't need thousands of images to achieve state of the art results. 
First, find a topic that interests you; it can be something that inspires you, excites you or a super simple day-to-day problem you’re facing. Which of your skills are matching your interests and other topics that excite you? Use that skill set to the next step, which is creating your own data and lastly training a model during the session.","Ideally, all the attendees would need their own computer to be able to train their own artificial intelligence algorithm. The essence of the workshop is to encourage and inspire the attendees to implement data science on niches and verticals that aligns with their own interests. The key takeaway is that it is possible to get state of the art results on niches which lack data and that it still exists “low hanging fruits” in numerous verticals. Together we'll walk through the three stages of training a model; 1) idea phase, 2) creating a dataset and lastly 3) training a model, before launching their own application with a frontend I prepared in React.js.","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Carlos Filoteo,Carlos Filoteo,c.filoteo12+dev@gmail.com,"I'm a software engineer at Podium, working mostly on front-end apps but beginning to dabble in Elixir backend.",https://www.linkedin.com/in/carlosfiloteo/,@cfiloteo12,Male,Hispanic or Latino,,"Salt Lake City area, Utah","I'm a first-generation college grad who has been working on front-end stuff for a while. My first job was for Ancestry.com, and where my desire for building the best web apps for everyone started. I currently work for a startup that has been growing very fast but has left some things by the wayside. Accessibility is one of them. I've been incorporating accessible patterns for alternative input and screenreader users into our shared components, in the meanwhile trying to formulate how to get manager & developer buy-in. I hope to be able to spread that fire for building web applications the **right** way. ",Employed as a full-time developer for over 3 years,,"Other,""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",Masters of Information Systems,Accessibility,,W056: Accessibility 102,,,"I would love for them to walk away with:
- skills to identify inaccessible patterns on the web
- experience to go and fix common mistakes
- yearning to continue to learn about a11y and how to design for it
- desire to become an a11y champion in their area of influence",,,,,My first job was at Ancestry.com where accessibility was very important. I worked at a small-ish startup to establish accessibility guidelines; and how working at another startup to incorporate accessibility into our design system.,"I also gave a workshop at Codeland last year! It was called ""Build your own style framework"".","I actually don't know if my company provides sponsorship for speaking at conferences. I'll inquire about it, but I'll tentatively say that I'd require travel and board.",,E,Workshop,"I'm not sure what a good take away for this would be. My first thought is a copy of an inaccessible website that throughout the workshop we made accessible, to be used as a reference. And a resource document for accessibility specifications, such as WCAG/WARIA, terms and definitions, and developer tools.","You've heard of accessibility. Maybe you've read a little bit about it. But you want to learn more about what a11y entails, how to implement it properly, and what you can do to keep improving in your web development. It's about more than just colors and font size (though that's important too), but also about truly designing the user's experience.

In this workshop I'd like you to learn:
- how to identify and fix inaccessible patterns on the web
- how to leverage browser and third-party developer tools to audit accessibility issues
- gain empathy by using a screen reader/alternative input device
- where to go for documentation and guidelines for properly implementing accessible UIs
- build up a desire to become an accessibility champion","Computer, web browser, NDVA (Windows) or VoiceOver (Mac), npm (possibly), git","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Danielle Gellis,Danielle Gellis,daniellegellis@gmail.com,"As the Tools Engineer for Indeed's Open Source program, Dani is building tools that help people contribute to open source projects. She's passionate about sharing and collaboration, especially in software and technology. Dani is also a teacher who has taught both kids and adults to code.",https://www.linkedin.com/in/daniellegellis,@danisyellis,female,White,,San Francisco,"After college, I did an AmeriCorps year of service and then spent 7 years working as an outdoor educator and backpacking trip leader. At some point, I fell in love with the Bay Area and moved here, but struggled to get a career started. So I decided to learn to code. It took me a long time to learn and during that time I taught kids to code and then TA'd at a web dev bootcamp for adults. Now, I'm pleased as punch to be working on the Open Source team at Indeed because it feels a lot like the non-profit version of a tech career, but with all the perks of a normal tech career.",Employed as a full-time developer for less than a year,,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms,Other",every free and low-cost coding course I could find,Career/Personal Branding,,W057: Making Your First Contribution to Open Source!,,,"My goal is for every attendee to walk away having made (at least) a very small contribution to an open source repo, and with an understanding of how to make a bigger contribution. Code newbies are often told that contributing to open source will help them get noticed and get interviews/jobs, but most newbies aren't given much guidance about how to do it.",,,,,"When I first began learning to code, I was blown away at how much free code there was available for me to use - libraries, frameworks, tools, even the languages themselves!. That isn't something that you see anywhere else in the world of companies and work and it made me really happy to see that developers, for the most part, help each other and share code. It's one of the main reasons I kept learning. Now, I am a member of an Open Source Program Office and have a lot of useful information to share about how everyone can contribute open source projects!",,I think my company will pay for my travel expenses if I am chosen to speak- they usually do.,,E,Workshop,"Attendees will make a contribution to an open source project.
In order to do that, they will have to do many things that I will help them with:
1) choose a project
2) choose an existing issue or find a piece of documentation to clear up
3) read and understand any contribution guidelines
4) clone or fork and clone the codebase, make a feature branch, and potentially (depending on the issue) set up their dev environment
    4a) if they're new to git, they'll have to set up git, github, etc.
5) let the community know that they will be working on this issue, and ask any questions
6) do the work
   6a) make a work plan and follow it - draw diagrams if that will help
7) merge/rebase their contribution according to the requirements and requests of the project maintainers and submit a pull request
   7a) this might include running tests
8) rejoice in their accomplishment and wait for a code review or their pull request to be accepted","First, I will talk briefly about what open source is, why it's important to the tech community, and what sort of opportunities there are for contributions. It's not just code - projects need project management, design, documentation, legal, and community and issue moderation help too!

I will also encourage people to contribute even if it's scary and talk about how best to communicate asynchronously and in writing- and how to be a good open source citizen.

After that, the intro will actually look a lot like the outline above. I will explain all of these steps in detail, with slides, along with information on how to do each step.
For example, I will help them understand how to choose a project - including giving them a list of websites with links to good first contribution issues and a list of repos that could use help with docs or other similar small writing contributions.
I'll also show them a couple of examples of what diagrams and work plans can look like.
In addition, while some people are getting started, I'll run a small git and github tutorial if some people need it.","a whiteboard or two is always nice, but not necessary","""Mon, July 22"",""Tue, July 23""",I am only able to give my workshop once.,,,
Henri Helvetica,Henri Helvetica,hello@henrihelveti.ca,"Henri is a freelance developer who has turned his interests to a potpourri of performance engineering with pinches of user experience. He has found enjoyment attending and speaking at web conferences, right down to local meetups to be amongst the community he loves. 
When not reading the deluge of daily research docs and case studies, or indiscriminately auditing sites in devtools, Henri can be found contributing back to the community",,@HenriHelvetica,male,Black or African American,,Toronto (YYZ),"I'm a front end developer who has enjoyed discussing a lesser know area of development. Prior to that however, I came from music and fashion industries - both of which taught me a great amount of brought priceless value to much of what I do now. ",Other,Freelancer ,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",In-person bootcamp,Other,Online learning platforms",YouTube ,Front-end,,W058: The front-end performance workshop (tentative),,,"The way the web has developed, we are no longer able to simply look at asset loading as an ordinary request. We have to position assets for the best possible user experience. That means, auditing sites and prioritizing some requests over others, deferring some for much later loading, optimizing assets and even preloading some seamless navigation. These are all now part of the responsibilities of front end developers.
Attendees of this ""Front End Performance Workshop"" will learn all about the necessary audits, analysis and tools required in order to create the fastest web experience possible when building applications or sites which will not only create ideal user experiences, but also create great ROI. ",,,,,"I have been a student, supporter and contributor to the web performance conversation for the last 3-4 years, as a published writer as well as an invited speaker to several conferences (including invite only events such as Chrome Dev Summit, BlinkOn). It started by regularly attending one of the few performance meetups in the world (Toronto - one of maybe a dozen), then becoming its co-organizer. I have also spoken at meetups in various cities when the opportunity came about - covering the said topic (Google SF to name a few). Ultimately, I have kept both feet in this environment and have been recognized as a friend of the community internationally. I am familiar when much of the published work, if not the publisher, and keep close ties with engineers especially from browser vendors.","I look fwd to the opportunity to present it, as performance is something no one thinks about looking at closely until bottlenecks develop. This will be an opportunity to get developers to have performance and user experience on mind more often. This will only allow them to ultimately be more rounded developers - and lastly, i love talking about this! ","I will require a return flight from Toronto, Canada (YYZ). Thanks kindly!",,E,Workshop,"Much like an accessibility audit, nothing will in fact be made from scratch. We will however learn how to audit, read and learn how to interpret results of various tools, and make necessary improvements to a site and ameliorate the overall user experience. 
This will include but not limited to:

- reading the various metrics available via tool. 
- reading and understanding a waterfall.  
- understand the unreliability of networks and how they work.
- best optimizing practices
- best assets delivery and practices

All of the above will take in consideration the various updates that have been made in the supported browser landscape, esp in the all important world of mobile - which is now our primary client. Added, demonstrations on how to update code with the latest supported attributes, and the reasons why will be part of the workshop conversation so that attendees will have a greater understanding of the reasons for such updates. ","Performance problems are essentially user experience problems, and ultimately anti patterns. When fonts don't load as quickly as possible, this is a front end development issue. When images are loading too slowly, this is an unoptimized assets issue. These are some of the many challenges that we come across on a daily basis and there is data available to show it. A recent study indicated that 57% of sites have a 
Lighthouse performance score of 50 or below. We also know that there is on going business value in having a performant site. The sites with fast user experiences, have returning traffic and ultimately see upticks in sales. And with the world now officially access the web on mobile, and with network connections predominately 2G and 3G, performance has never been a more important topic, and performance auditing - a more desired skillset. 
At the conclusion of this workshop, attendees will have the acumen to audit sites and make educated and learned analysis of performance bottlenecks.","a laptop, note pad, and strong wifi. ","""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Jamie Wittenberg,Jamie Wittenberg,jamie@majorleaguehacking.com,"Jamie became a teacher through non-traditional means, and then a developer through even less traditional ones. Now, she uses both of those things to make it easier for you to learn cool stuff. ",linkedin.com/in/jrwittenberg,@SteministBarbie,female,White,,NYC,"I taught high school math for 3 years before completing a fellowship to become a developer with the Flatiron school. Since then, I have spent my entire career developing dev pedagogy, to make it easier for anyone to learn. I also gave this cool talk last year (https://www.youtube.com/watch?v=pEPItbgMxw8) and was a networking panel earlier this year. You can learn a little more about me at jamiewittenberg.com, also!",Other,"Taught two summer coding camps (was the director of one!), worked at Codecademy for a year, now a PM at Major League Hacking","""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",Online learning platforms",,Intro to Hardware,,W059: Build Your First IoT App With the Thunderboard Sense 2,,,"By the end of this workshop, participants will know how to build a functional app for the Thunderboard Sense II, as well as how to search for the answers to their questions within documentation and a codebase. Ideally, they will be able to pick up any IoT device and learn how to interact with each sensor and feature of the board. ",,,,,"I have written a workshop on this topic in partnership with Silicon Labs, the creators of the Thunderboard Sense 2. localhost.mlh.io/#activities","I create workshops for a living! I would be presenting a workshop I created for localhost.mlh.io – a developer engagement and education program that any coder - beginner or expert - can use to learn and teach new skills. 

This is the workshop I'm most excited about/think it is the most unique out of the ones we offer. However! If there is one that we have on the list (localhost.mlh.io/#activities) that seems like a better fit/fills a gap in the programming, I would be 100% open to switching. 

A cool thing to note - all of the workshops listed above are open source, and my team supports anyone, anywhere in the world, who wants to teach them in their own community. This means that anyone who attends the workshop I teach will be able to take the very same workshop and teach it to others!",I don't require any travel accommodations! I live in New York :) ,,E,Workshop,Participants will make an air quality sensor for the Thunderboard Sense 2. https://www.silabs.com/products/development-tools/thunderboard/thunderboard-sense-two-kit,"I will explain how testing and coding for IoT is different than the web, teach participants how to set up their environment, and guide them through the entire process of writing the code (with built-in bugs and self-guided discovery toward solutions!) and challenge them to think of things they could build after the workshop is over.  ",All I need is a projector! I'll bring the boards. ,"""Mon, July 22"",""Tue, July 23""",I am willing to give my workshop two times in a row.,,,
Ashley Teoh,Ashley Teoh,ashleytqy@gmail.com,I'm a software engineer working on operating system security at Microsoft.,https://linkedin.com/in/ashleytqy/,https://twitter.com/teohmato,Female,Asian / Pacific Islander,,Seattle,"Before college, I was never exposed to coding – there were no Computer Science classes offered in my all-girls high school in Singapore. It wasn't until my first year in college that I took my first programming class, and joined a tech club where I learned hands on how to collaborate with a group of people to build projects. Apart from classes in school, I really enjoyed going to meetup to learn about niche topics that may not be within the typical computer science curriculum. This really enriched my coding journey because there are so many interesting topics out there that as students, we may never have come across if we are not working on a very specific part of the industry.",Employed as a full-time developer for less than a year,,"CS degree,""Collection of resources (blog posts, books, tutorials, workshops, etc.)""",,Computer Science Fundamentals,,W060: Git Ready With Me,,,"For attendees to be comfortable in using git as their version control system, which will be useful when they collaborate with other people to work on projects, be it in school, at work, or on open source projects. ",,,,,"When I first started coding, I used to keep copies of my source code on my desktop. A friend taught me how to use git and since then, I've been using it throughout my college classes, internships and currently at my job, learning useful tips along these years to help me get out of messy situations.",,"Flight, hotel",,E,Workshop,"Attendees will collectively make one website (tentatively, a site to display everyone's favourite poem), using git as their version control system.

First, attendees will use git on their own repository and learn basic git commands like status, add, commit from the command line.

Then, on their own repository, attendees will learn how to work on different features, merge them together locally and view the changes locally.

Then, on a shared repository, attendees will learn how to clone a repository and each work on a feature on their own branch.

Then, attendees will learn how fix a merge conflict and how to rebase their changes on the master branch.

Along the way, attendees will learn useful commands like `git log`, `git reflog` and `git cherry-pick`.

At the end, attendees will learn the git clients available if they are not comfortable with the command line.","Version control is an important tool for collaboration – we want to work efficiently in teams and be able to keep track of changes made to a file, or a collection of files, over time. Git is a popular distributed version control system that helps us achieve that, and learning how to use git commands effectively will help us work seamlessly with others. When things appear to be messed up, don't fret, because there are useful git tricks to help us get back on track. If using git in the command line sounds daunting, there are various git clients out there to help you get comfortable with using git as your version control system.","Attendees would need a laptop, and if they don't have one, can share with another attendee. Attendees will also need a GitHub account.","""Mon, July 22""",I am willing to give my workshop two times in a row.,,,
Prabhakar Raj,Prabhakar Raj,prabhakar13.raj@gmail.com,I'm just another Computer Science Engineering student who's passionate about tech but not anymore about coding (because somewhere the university killed the drive). I write poetry and recite it and I like to sing and would pursue Radio. ,,,Male,Asian / Pacific Islander,,"Jabalpur, India ","The conference is all about coding and tech. I love technology but can't code because I couldn't enjoy the way we were taught. It's a change in breeze to have someone who doesn't fit it the conference ideology yet who is almost there. I fought depression lately and have decided to go for something that can keep mr happy, I would choose music. ",Curious about tech and coding,,CS degree,,"I can recite my own poems and people usually like the way I pour in emotions. I can sing too. Hindi or English, both languages. ",,P001: Misfit Rhymes,Poetry,It could be music and poetry. ,A musical poetry recital. It would change ambiance of the conference for a while. ,,,"Entertainment, nostalgia and harmony. ",,I have recited at local events but nothing more than that. ,,I'm still a student. It would be great to have my tickets and accommodation taken care of. ,2-5 min long,,Performance,,,,,,I don't qualify to talk about technology in front of the OGs of it. I'd rather talk about my life. ,A pianob or a guitar and a microphone :),
Prabhakar Raj,Prabhakar Raj,prabhakar13.raj@gmail.com,I'm just another Computer Science Engineering student who's passionate about tech but not anymore about coding (because somewhere the university killed the drive). I write poetry and recite it and I like to sing and would pursue Radio. ,,,Male,Asian / Pacific Islander,,"Jabalpur, India ","The conference is all about coding and tech. I love technology but can't code because I couldn't enjoy the way we were taught. It's a change in breeze to have someone who doesn't fit it the conference ideology yet who is almost there. I fought depression lately and have decided to go for something that can keep mr happy, I would choose music. ",Curious about tech and coding,,CS degree,,"I can recite my own poems and people usually like the way I pour in emotions. I can sing too. Hindi or English, both languages. ",,P002: Misfit Rhymes,Poetry,It could be music and poetry. ,A musical poetry recital. It would change ambiance of the conference for a while. ,,,"Entertainment, nostalgia and harmony. ",,I have recited at local events but nothing more than that. ,,I'm still a student. It would be great to have my tickets and accommodation taken care of. ,2-5 min long,,Performance,,,,,,I don't qualify to talk about technology in front of the OGs of it. I'd rather talk about my life. ,A pianob or a guitar and a microphone :),
Slammer,Slammer,soupysecurity@protonmail.com,"Slammer is a Mozilla Fellow, U.S. based web developer, infosec practitioner, and a founding member of the Anthology of Booty DJ crew. She has dedicated 15 years to community development work in Washington, DC through media justice organizing and community-led research, as well as radio and event production. Slammer has collaborated with a number of social justice and capacity-building organizations like United We Dream and the Center for Media Justice.",,pumzi_code,Non-binary femme,Black or African American,,"Washington, DC",I started coding 5 years ago thru Code for Progress. I've been a junior front end developer at the Democratic National Committee. I have worked on open source projects & currently organize digital security trainings across the country.  I am a Ford-Mozilla fellow based at Consumer Reports working on data privacy projects.,Other,Employed as a full-time developer for 2 years and then switched to digital security consultant work and now focusing my learning on network security,"""Collection of resources (blog posts, books, tutorials, workshops, etc.)"",In-person bootcamp,Online learning platforms",,"Slammer will bring the Soupy Security project onto the Codeland dance floor while interweaving complex musical rhythms from Nairobi club to Baltimore house.

Soupy Security is an interactive multi-media project. It attempts to document the lessons that security practitioners & organizations with limited IT resources face while building sustainable digital infrastructures and processes.  Soupy Security uses a variety of mediums--from podcasts to video-- to tell these stories including a “choose your own adventure” style story/zine that will premier in early May at CryptoRave Sao Paolo.  At CryptoRave Sao Paolo, Slammer will live demo the Soupy Security zine (which is a ""choose your own security path"" story ) but at CodeLand, the demo will be prerecorded. 


Slammer will dj a 5 minute set while the pre-recorded demo of the story will be played in the background.

Here is Anthology of Booty's facebook link: https://www.facebook.com/pg/AnthologyOfBooty/about/",,P003: Soupy Security,Other tech-themed performance,,"Slammer will dj a 5 minute live set while a prerecorded demo of the ""choose your own security path"" story is projected in the back.  The story features four characters.  Each character holds a different security role but they are all working with Earthseed, a social justice organization that is strong in people power but limited in time and financial resources.  They are all working towards implementing a strategy to address a particular IT security issue facing the organization. Someone that lands on the Soupy Security zine can pick a character to work with EarthSeed.  A series of questions are asked to address a security issue. As each question is answered, the story unfolds.",,,I want folks to be inspired to overlap online projects with offline interaction.  I would love folks to think of security as a holistic practice that is iterative and can be done in a variety of ways.,,I've djayed for 15 years.,It's not my first time djaying. it's not my first time working on a coding project.  It is my first time combining these two things. I'm super excited and nervous. I really want to share this piece of work.  Version 1 of this project will be released in mid-April. Version 2 will be released at Sao Paolo on May 4th.,I'll be taking the train from DC and I am self-funded since my fellowship at Mozilla ends late June.,2-5 min long,,Performance,,,,,,"My work is centered on building a foundation of empathy when working on security management with any organization. Thru this kind of storytelling, there is no right or wrong answer.  It's an opportunity for folks to have discussion and ask questions.  This project is built by me (html, css, javascript) but informed by a host of community members. 
Also i'm hoping folks can test the website by engaging in the story.","I will bring my computer and traktor (dj console).  I need a sound system, projector, and possibly another laptop",This is an example but i'm going to record my set in Sao Paolo:  https://www.youtube.com/watch?v=8kwXteTy87Y
